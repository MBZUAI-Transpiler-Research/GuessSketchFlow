{"source": "problem1", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L6\n	sub	x4, x0, #4\n	mov	x3, 1\n	cmp	w1, w3\n	ble	.L6\n.L10:\n	ldr	s2, [x4, x3, lsl 2]\n	mov	x2, x3\n	.p2align 3,,7\n.L3:\n	ldr	s1, [x0, x2, lsl 2]\n	add	x2, x2, 1\n	fabd	s1, s2, s1\n	fcmpe	s1, s0\n	bmi	.L7\n	cmp	w1, w2\n	bgt	.L3\n	add	x3, x3, 1\n	cmp	w1, w3\n	bgt	.L10\n.L6:\n	mov	w0, 10\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L6\n	sub	x4, x0, #4\n	mov	x3, 1\n	cmp	w1, w3\n	ble	.L6\n.L10:\n	ldr	s2, [x4, x3, lsl 2]\n	mov	x2, x3\n	.p2align 3,,7\n.L3:\n	ldr	s1, [x0, x2, lsl 2]\n	add	x2, x2, 1\n	fabd	s1, s2, s1\n	fcmpe	s1, s0\n	bmi	.L7\n	cmp	w1, w2\n	bgt	.L3\n	add	x3, x3, 1\n	cmp	w1, w3\n	bgt	.L10\n.L6:\n	mov	w0, 10\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem10", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L10\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	sbfiz	x19, x1, 2, 32\n	mov	x20, x0\n	mov	x0, x19\n	bl	malloc\n	cbz	x0, .L2\n	ldr	w2, [x20]\n	mov	x1, 0\n	.p2align 3,,7\n.L3:\n	ldr	w3, [x20, x1]\n	cmp	w2, w3\n	csel	w2, w2, w3, ge\n	str	w2, [x0, x1]\n	add	x1, x1, 4\n	cmp	x19, x1\n	bne	.L3\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L2:\n	.cfi_restore_state\n	ldp	x19, x20, [sp, 16]\n	mov	x0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	mov	x0, 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L10\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	sbfiz	x19, x1, 2, 32\n	mov	x20, x0\n	mov	x0, x19\n	bl	malloc\n	cbz	x0, .L2\n	ldr	w2, [x20]\n	mov	x1, 0\n	.p2align 3,,7\n.L3:\n	ldr	w3, [x20, x1]\n	cmp	w2, w3\n	csel	w2, w2, w3, ge\n	str	w2, [x0, x1]\n	add	x1, x1, 4\n	cmp	x19, x1\n	bne	.L3\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L2:\n	.cfi_restore_state\n	ldp	x19, x20, [sp, 16]\n	mov	x0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	mov	x0, 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem100", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -16]!\n	.cfi_def_cfa_offset 16\n	.cfi_offset 29, -16\n	.cfi_offset 30, -8\n	mov	x1, 0\n	mov	x29, sp\n	bl	strtod\n	fcmpe	d0, #0.0\n	bmi	.L5\n	fmov	d1, 5.0e-1\n	ldp	x29, x30, [sp], 16\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	fadd	d0, d0, d1\n	fcvtms	w0, d0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_restore_state\n	fmov	d1, 5.0e-1\n	ldp	x29, x30, [sp], 16\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	fsub	d0, d0, d1\n	fcvtps	w0, d0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -16]!\n	.cfi_def_cfa_offset 16\n	.cfi_offset 29, -16\n	.cfi_offset 30, -8\n	mov	x1, 0\n	mov	x29, sp\n	bl	strtod\n	fcmpe	d0, #0.0\n	bmi	.L5\n	fmov	d1, 5.0e-1\n	ldp	x29, x30, [sp], 16\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	fadd	d0, d0, d1\n	fcvtms	w0, d0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_restore_state\n	fmov	d1, 5.0e-1\n	ldp	x29, x30, [sp], 16\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	fsub	d0, d0, d1\n	fcvtps	w0, d0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem101", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	w19, w0\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	str	w19, [x0]\n	cmp	w19, 1\n	ble	.L1\n	mov	w2, w19\n	mov	x1, 1\n	.p2align 3,,7\n.L3:\n	add	w2, w2, 2\n	str	w2, [x0, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	w19, w1\n	bgt	.L3\n.L1:\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	w19, w0\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	str	w19, [x0]\n	cmp	w19, 1\n	ble	.L1\n	mov	w2, w19\n	mov	x1, 1\n	.p2align 3,,7\n.L3:\n	add	w2, w2, 2\n	str	w2, [x0, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	w19, w1\n	bgt	.L3\n.L1:\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem103", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, w0\n	mov	w0, w1\n	cmp	w1, w2\n	blt	.L4\n	cmp	w1, 0\n	and	w1, w1, 1\n	csneg	w1, w1, w1, ge\n	cmp	w0, w2\n	beq	.L7\n	cmp	w1, 1\n	cset	w1, eq\n	sub	w0, w0, w1\n	ret\n	.p2align 2,,3\n.L7:\n	cmp	w1, 1\n	csinv	w0, w0, wzr, ne\n	ret\n	.p2align 2,,3\n.L4:\n	mov	w0, -1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, w0\n	mov	w0, w1\n	cmp	w1, w2\n	blt	.L4\n	cmp	w1, 0\n	and	w1, w1, 1\n	csneg	w1, w1, w1, ge\n	cmp	w0, w2\n	beq	.L7\n	cmp	w1, 1\n	cset	w1, eq\n	sub	w0, w0, w1\n	ret\n	.p2align 2,,3\n.L7:\n	cmp	w1, 1\n	csinv	w0, w0, wzr, ne\n	ret\n	.p2align 2,,3\n.L4:\n	mov	w0, -1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem104", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"-1\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w0, w1\n	ble	.L11\n	adrp	x0, .LC0\n	add	x0, x0, :lo12:.LC0\n	ret\n	.p2align 2,,3\n.L11:\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	add	w19, w0, w1\n	mov	x0, 33\n	bl	malloc\n	add	w19, w19, w19, lsr 31\n	add	x2, x0, 31\n	strb	wzr, [x0]\n	asr	w19, w19, 1\n	strb	wzr, [x0, 32]\n	.p2align 3,,7\n.L3:\n	cmp	w19, 0\n	and	w0, w19, 1\n	csneg	w0, w0, w0, ge\n	add	w4, w19, w19, lsr 31\n	add	w1, w0, 48\n	mov	w3, w19\n	mov	x0, x2\n	strb	w1, [x2], -1\n	asr	w19, w4, 1\n	cmp	w3, 1\n	bgt	.L3\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"-1\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w0, w1\n	ble	.L11\n	adrp	x0, .LC0\n	add	x0, x0, :lo12:.LC0\n	ret\n	.p2align 2,,3\n.L11:\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	add	w19, w0, w1\n	mov	x0, 33\n	bl	malloc\n	add	w19, w19, w19, lsr 31\n	add	x2, x0, 31\n	strb	wzr, [x0]\n	asr	w19, w19, 1\n	strb	wzr, [x0, 32]\n	.p2align 3,,7\n.L3:\n	cmp	w19, 0\n	and	w0, w19, 1\n	csneg	w0, w0, w0, ge\n	add	w4, w19, w19, lsr 31\n	add	w1, w0, 48\n	mov	w3, w19\n	mov	x0, x2\n	strb	w1, [x2], -1\n	asr	w19, w4, 1\n	cmp	w3, 1\n	bgt	.L3\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem105", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	mov	x23, x2\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x21, x3\n	mov	w22, w1\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	sbfiz	x20, x1, 2, 32\n	mov	x19, x0\n	mov	x0, x20\n	bl	malloc\n	str	x0, [x23]\n	str	wzr, [x21]\n	cmp	w22, 0\n	ble	.L1\n	mov	w7, 52429\n	mov	x9, x19\n	add	x11, x19, x20\n	mov	w8, 0\n	movk	w7, 0xcccc, lsl 16\n	.p2align 3,,7\n.L8:\n	ldr	w10, [x9]\n	cmp	w10, 0\n	ble	.L3\n	mov	w1, w10\n	.p2align 3,,7\n.L4:\n	umull	x5, w1, w7\n	cmp	w1, 9\n	mvn	w2, w1\n	cset	w4, gt\n	and	w6, w2, 1\n	lsr	x1, x5, 35\n	bics	wzr, w4, w2\n	bne	.L4\n	cbnz	w6, .L6\n.L7:\n	str	w10, [x0, w8, sxtw 2]\n	add	w8, w8, 1\n	str	w8, [x21]\n.L6:\n	add	x9, x9, 4\n	cmp	x9, x11\n	bne	.L8\n	cmp	w8, 1\n	ble	.L1\n	mov	w5, w8\n	add	x6, x0, 4\n	.p2align 3,,7\n.L9:\n	cmp	w5, 1\n	ble	.L27\n	sub	w4, w5, #2\n	mov	x1, x0\n	add	x4, x6, w4, uxtw 2\n	.p2align 3,,7\n.L11:\n	ldp	w2, w3, [x1]\n	cmp	w2, w3\n	ble	.L10\n	stp	w3, w2, [x1]\n.L10:\n	add	x1, x1, 4\n	cmp	x4, x1\n	bne	.L11\n	sub	w5, w5, #1\n	cmp	w5, 1\n	bne	.L9\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L27:\n	.cfi_restore_state\n	sub	w5, w5, #1\n	b	.L9\n	.p2align 2,,3\n.L3:\n	beq	.L6\n	b	.L7\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	mov	x23, x2\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x21, x3\n	mov	w22, w1\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	sbfiz	x20, x1, 2, 32\n	mov	x19, x0\n	mov	x0, x20\n	bl	malloc\n	str	x0, [x23]\n	str	wzr, [x21]\n	cmp	w22, 0\n	ble	.L1\n	mov	w7, 52429\n	mov	x9, x19\n	add	x11, x19, x20\n	mov	w8, 0\n	movk	w7, 0xcccc, lsl 16\n	.p2align 3,,7\n.L8:\n	ldr	w10, [x9]\n	cmp	w10, 0\n	ble	.L3\n	mov	w1, w10\n	.p2align 3,,7\n.L4:\n	umull	x5, w1, w7\n	cmp	w1, 9\n	mvn	w2, w1\n	cset	w4, gt\n	and	w6, w2, 1\n	lsr	x1, x5, 35\n	bics	wzr, w4, w2\n	bne	.L4\n	cbnz	w6, .L6\n.L7:\n	str	w10, [x0, w8, sxtw 2]\n	add	w8, w8, 1\n	str	w8, [x21]\n.L6:\n	add	x9, x9, 4\n	cmp	x9, x11\n	bne	.L8\n	cmp	w8, 1\n	ble	.L1\n	mov	w5, w8\n	add	x6, x0, 4\n	.p2align 3,,7\n.L9:\n	cmp	w5, 1\n	ble	.L27\n	sub	w4, w5, #2\n	mov	x1, x0\n	add	x4, x6, w4, uxtw 2\n	.p2align 3,,7\n.L11:\n	ldp	w2, w3, [x1]\n	cmp	w2, w3\n	ble	.L10\n	stp	w3, w2, [x1]\n.L10:\n	add	x1, x1, 4\n	cmp	x4, x1\n	bne	.L11\n	sub	w5, w5, #1\n	cmp	w5, 1\n	bne	.L9\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L27:\n	.cfi_restore_state\n	sub	w5, w5, #1\n	b	.L9\n	.p2align 2,,3\n.L3:\n	beq	.L6\n	b	.L7\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem106", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	adrp	x4, .LANCHOR0\n	add	x4, x4, :lo12:.LANCHOR0\n	stp	x29, x30, [sp, -144]!\n	.cfi_def_cfa_offset 144\n	.cfi_offset 29, -144\n	.cfi_offset 30, -136\n	mov	x29, sp\n	ldp	q3, q4, [x4]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -112\n	.cfi_offset 22, -104\n	add	x21, sp, 64\n	ldp	q1, q2, [x4, 32]\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -128\n	.cfi_offset 20, -120\n	sub	w19, w1, #1\n	ldr	q0, [x4, 64]\n	str	x23, [sp, 48]\n	.cfi_offset 23, -96\n	mov	x20, x0\n	mov	x22, x3\n	stp	q3, q4, [x21]\n	mov	x23, x2\n	stp	q1, q2, [x21, 32]\n	str	q0, [x21, 64]\n	cmp	w19, 0\n	ble	.L2\n	mov	w7, w1\n	add	x0, x0, 4\n	.p2align 3,,7\n.L3:\n	cmp	w7, 1\n	ble	.L29\n	sub	w6, w7, #2\n	mov	x1, x20\n	add	x6, x0, w6, uxtw 2\n	.p2align 3,,7\n.L5:\n	ldp	w4, w5, [x1]\n	cmp	w4, w5\n	ble	.L4\n	stp	w5, w4, [x1]\n.L4:\n	add	x1, x1, 4\n	cmp	x1, x6\n	bne	.L5\n	sub	w7, w7, #1\n	cmp	w7, 1\n	bne	.L3\n	str	wzr, [x22]\n.L20:\n	sxtw	x19, w19\n	mov	w0, 0\n	mov	x1, x19\n	.p2align 3,,7\n.L13:\n	ldr	w4, [x20, x1, lsl 2]\n	sub	x1, x1, #1\n	sub	w4, w4, #1\n	cmp	w4, 8\n	bhi	.L12\n	add	w0, w0, 1\n	str	w0, [x22]\n.L12:\n	tbz	w1, #31, .L13\n	sbfiz	x0, x0, 3, 32\n	bl	malloc\n	ldr	w4, [x22]\n	mov	w1, 0\n	str	x0, [x23]\n	.p2align 3,,7\n.L16:\n	cmp	w4, w1\n	ble	.L1\n	ldr	w2, [x20, x19, lsl 2]\n	sub	x19, x19, #1\n	sub	w3, w2, #1\n	cmp	w3, 8\n	bhi	.L17\n	ldr	x2, [x21, w2, sxtw 3]\n	str	x2, [x0, w1, sxtw 3]\n	add	w1, w1, 1\n.L17:\n	tbz	w19, #31, .L16\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 144\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L29:\n	.cfi_restore_state\n	sub	w7, w7, #1\n	b	.L3\n.L2:\n	str	wzr, [x3]\n	beq	.L20\n	mov	x0, 0\n	bl	malloc\n	str	x0, [x23]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 144\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"\"\n	.align	3\n.LC1:\n	.string	\"One\"\n	.align	3\n.LC2:\n	.string	\"Two\"\n	.align	3\n.LC3:\n	.string	\"Three\"\n	.align	3\n.LC4:\n	.string	\"Four\"\n	.align	3\n.LC5:\n	.string	\"Five\"\n	.align	3\n.LC6:\n	.string	\"Six\"\n	.align	3\n.LC7:\n	.string	\"Seven\"\n	.align	3\n.LC8:\n	.string	\"Eight\"\n	.align	3\n.LC9:\n	.string	\"Nine\"\n	.section	.rodata\n	.align	3\n	.set	.LANCHOR0,. + 0\n.LC11:\n	.xword	.LC0\n	.xword	.LC1\n	.xword	.LC2\n	.xword	.LC3\n	.xword	.LC4\n	.xword	.LC5\n	.xword	.LC6\n	.xword	.LC7\n	.xword	.LC8\n	.xword	.LC9\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	adrp	x4, .LANCHOR0\n	add	x4, x4, :lo12:.LANCHOR0\n	stp	x29, x30, [sp, -144]!\n	.cfi_def_cfa_offset 144\n	.cfi_offset 29, -144\n	.cfi_offset 30, -136\n	mov	x29, sp\n	ldp	q3, q4, [x4]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -112\n	.cfi_offset 22, -104\n	add	x21, sp, 64\n	ldp	q1, q2, [x4, 32]\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -128\n	.cfi_offset 20, -120\n	sub	w19, w1, #1\n	ldr	q0, [x4, 64]\n	str	x23, [sp, 48]\n	.cfi_offset 23, -96\n	mov	x20, x0\n	mov	x22, x3\n	stp	q3, q4, [x21]\n	mov	x23, x2\n	stp	q1, q2, [x21, 32]\n	str	q0, [x21, 64]\n	cmp	w19, 0\n	ble	.L2\n	mov	w7, w1\n	add	x0, x0, 4\n	.p2align 3,,7\n.L3:\n	cmp	w7, 1\n	ble	.L29\n	sub	w6, w7, #2\n	mov	x1, x20\n	add	x6, x0, w6, uxtw 2\n	.p2align 3,,7\n.L5:\n	ldp	w4, w5, [x1]\n	cmp	w4, w5\n	ble	.L4\n	stp	w5, w4, [x1]\n.L4:\n	add	x1, x1, 4\n	cmp	x1, x6\n	bne	.L5\n	sub	w7, w7, #1\n	cmp	w7, 1\n	bne	.L3\n	str	wzr, [x22]\n.L20:\n	sxtw	x19, w19\n	mov	w0, 0\n	mov	x1, x19\n	.p2align 3,,7\n.L13:\n	ldr	w4, [x20, x1, lsl 2]\n	sub	x1, x1, #1\n	sub	w4, w4, #1\n	cmp	w4, 8\n	bhi	.L12\n	add	w0, w0, 1\n	str	w0, [x22]\n.L12:\n	tbz	w1, #31, .L13\n	sbfiz	x0, x0, 3, 32\n	bl	malloc\n	ldr	w4, [x22]\n	mov	w1, 0\n	str	x0, [x23]\n	.p2align 3,,7\n.L16:\n	cmp	w4, w1\n	ble	.L1\n	ldr	w2, [x20, x19, lsl 2]\n	sub	x19, x19, #1\n	sub	w3, w2, #1\n	cmp	w3, 8\n	bhi	.L17\n	ldr	x2, [x21, w2, sxtw 3]\n	str	x2, [x0, w1, sxtw 3]\n	add	w1, w1, 1\n.L17:\n	tbz	w19, #31, .L16\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 144\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L29:\n	.cfi_restore_state\n	sub	w7, w7, #1\n	b	.L3\n.L2:\n	str	wzr, [x3]\n	beq	.L20\n	mov	x0, 0\n	bl	malloc\n	str	x0, [x23]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 144\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"\"\n	.align	3\n.LC1:\n	.string	\"One\"\n	.align	3\n.LC2:\n	.string	\"Two\"\n	.align	3\n.LC3:\n	.string	\"Three\"\n	.align	3\n.LC4:\n	.string	\"Four\"\n	.align	3\n.LC5:\n	.string	\"Five\"\n	.align	3\n.LC6:\n	.string	\"Six\"\n	.align	3\n.LC7:\n	.string	\"Seven\"\n	.align	3\n.LC8:\n	.string	\"Eight\"\n	.align	3\n.LC9:\n	.string	\"Nine\"\n	.section	.rodata\n	.align	3\n	.set	.LANCHOR0,. + 0\n.LC11:\n	.xword	.LC0\n	.xword	.LC1\n	.xword	.LC2\n	.xword	.LC3\n	.xword	.LC4\n	.xword	.LC5\n	.xword	.LC6\n	.xword	.LC7\n	.xword	.LC8\n	.xword	.LC9\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem107", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	w19, w0\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	cmp	w19, 0\n	ble	.L1\n	mov	x1, 1\n	sub	x5, x0, #4\n	mov	w3, w1\n	mov	w2, 0\n	.p2align 3,,7\n.L2:\n	mul	w3, w3, w1\n	add	w2, w2, w1\n	tst	x1, 1\n	csel	w4, w3, w2, eq\n	str	w4, [x5, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	w19, w1\n	bge	.L2\n.L1:\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	w19, w0\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	cmp	w19, 0\n	ble	.L1\n	mov	x1, 1\n	sub	x5, x0, #4\n	mov	w3, w1\n	mov	w2, 0\n	.p2align 3,,7\n.L2:\n	mul	w3, w3, w1\n	add	w2, w2, w1\n	tst	x1, 1\n	csel	w4, w3, w2, eq\n	str	w4, [x5, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	w19, w1\n	bge	.L2\n.L1:\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem108", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	w19, w0\n	mov	x0, 8\n	bl	malloc\n	str	xzr, [x0]\n	cmp	w19, 0\n	ble	.L1\n	mov	w5, 26215\n	add	w7, w19, 1\n	mov	w6, 1\n	movk	w5, 0x6666, lsl 16\n	.p2align 3,,7\n.L3:\n	mov	w3, w6\n	mov	w2, 0\n	.p2align 3,,7\n.L4:\n	smull	x1, w3, w5\n	add	w2, w2, w2, lsl 2\n	asr	x1, x1, 34\n	sub	w1, w1, w3, asr 31\n	add	w4, w1, w1, lsl 2\n	sub	w4, w3, w4, lsl 1\n	mov	w3, w1\n	add	w2, w4, w2, lsl 1\n	cbnz	w1, .L4\n	cmp	w2, w6\n	beq	.L10\n.L5:\n	add	w6, w6, 1\n	cmp	w6, w7\n	bne	.L3\n.L1:\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	.cfi_restore_state\n	tbnz	x6, 0, .L6\n	ldr	w1, [x0]\n	add	w1, w1, 1\n	str	w1, [x0]\n	b	.L5\n	.p2align 2,,3\n.L6:\n	ldr	w1, [x0, 4]\n	add	w1, w1, 1\n	str	w1, [x0, 4]\n	b	.L5\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	w19, w0\n	mov	x0, 8\n	bl	malloc\n	str	xzr, [x0]\n	cmp	w19, 0\n	ble	.L1\n	mov	w5, 26215\n	add	w7, w19, 1\n	mov	w6, 1\n	movk	w5, 0x6666, lsl 16\n	.p2align 3,,7\n.L3:\n	mov	w3, w6\n	mov	w2, 0\n	.p2align 3,,7\n.L4:\n	smull	x1, w3, w5\n	add	w2, w2, w2, lsl 2\n	asr	x1, x1, 34\n	sub	w1, w1, w3, asr 31\n	add	w4, w1, w1, lsl 2\n	sub	w4, w3, w4, lsl 1\n	mov	w3, w1\n	add	w2, w4, w2, lsl 1\n	cbnz	w1, .L4\n	cmp	w2, w6\n	beq	.L10\n.L5:\n	add	w6, w6, 1\n	cmp	w6, w7\n	bne	.L3\n.L1:\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	.cfi_restore_state\n	tbnz	x6, 0, .L6\n	ldr	w1, [x0]\n	add	w1, w1, 1\n	str	w1, [x0]\n	b	.L5\n	.p2align 2,,3\n.L6:\n	ldr	w1, [x0, 4]\n	add	w1, w1, 1\n	str	w1, [x0, 4]\n	b	.L5\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem109", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L7\n	mov	x4, x0\n	mov	w7, 52429\n	add	x8, x4, w1, sxtw 2\n	mov	w0, 0\n	movk	w7, 0xcccc, lsl 16\n	b	.L6\n	.p2align 2,,3\n.L11:\n	add	w0, w0, 1\n.L4:\n	add	x4, x4, 4\n	cmp	x4, x8\n	beq	.L1\n.L6:\n	ldr	w1, [x4]\n	cmp	w1, 0\n	bgt	.L11\n	neg	w2, w1\n	cmn	w1, #9\n	bge	.L4\n	mov	w5, 0\n	.p2align 3,,7\n.L5:\n	umull	x1, w2, w7\n	mov	w6, w2\n	lsr	x1, x1, 35\n	add	w3, w1, w1, lsl 2\n	sub	w3, w2, w3, lsl 1\n	mov	w2, w1\n	add	w5, w5, w3\n	cmp	w6, 99\n	bgt	.L5\n	cmp	w5, w1\n	add	x4, x4, 4\n	cinc	w0, w0, gt\n	cmp	x4, x8\n	bne	.L6\n.L1:\n	ret\n.L7:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L7\n	mov	x4, x0\n	mov	w7, 52429\n	add	x8, x4, w1, sxtw 2\n	mov	w0, 0\n	movk	w7, 0xcccc, lsl 16\n	b	.L6\n	.p2align 2,,3\n.L11:\n	add	w0, w0, 1\n.L4:\n	add	x4, x4, 4\n	cmp	x4, x8\n	beq	.L1\n.L6:\n	ldr	w1, [x4]\n	cmp	w1, 0\n	bgt	.L11\n	neg	w2, w1\n	cmn	w1, #9\n	bge	.L4\n	mov	w5, 0\n	.p2align 3,,7\n.L5:\n	umull	x1, w2, w7\n	mov	w6, w2\n	lsr	x1, x1, 35\n	add	w3, w1, w1, lsl 2\n	sub	w3, w2, w3, lsl 1\n	mov	w2, w1\n	add	w5, w5, w3\n	cmp	w6, 99\n	bgt	.L5\n	cmp	w5, w1\n	add	x4, x4, 4\n	cinc	w0, w0, gt\n	cmp	x4, x8\n	bne	.L6\n.L1:\n	ret\n.L7:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem11", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	x21, x0\n	stp	x23, x24, [sp, 48]\n	str	x25, [sp, 64]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	bl	strlen\n	lsl	w20, w0, 1\n	mov	x22, x0\n	mov	w24, w0\n	add	w0, w20, 1\n	sxtw	x0, w0\n	bl	malloc\n	mov	x25, x0\n	cbz	x0, .L1\n	sxtw	x23, w22\n	cmp	w22, 0\n	ble	.L3\n	sub	w1, w22, #1\n	mov	x8, x21\n	mov	w19, 0\n	sxtw	x1, w1\n	.p2align 3,,7\n.L4:\n	sub	w7, w22, w19\n	asr	w7, w7, 1\n	cbz	w7, .L13\n	add	x7, x8, w7, sxtw\n	add	x4, x21, x1\n	mov	x3, x8\n	b	.L6\n	.p2align 2,,3\n.L25:\n	cmp	x3, x7\n	beq	.L13\n.L6:\n	ldrb	w6, [x3]\n	sub	x4, x4, #1\n	ldrb	w5, [x4, 1]\n	add	x3, x3, 1\n	cmp	w6, w5\n	beq	.L25\n	add	w19, w19, 1\n	add	x8, x8, 1\n	cmp	w24, w19\n	bne	.L4\n	mov	x1, x21\n	mov	x2, x23\n	mov	x0, x25\n	bl	strncpy\n	sub	x0, x23, #1\n	add	x2, x25, x23\n	add	x21, x21, x0\n	mov	x1, 0\n	.p2align 3,,7\n.L15:\n	neg	x0, x1\n	ldrb	w0, [x21, x0]\n	strb	w0, [x2, x1]\n	add	x1, x1, 1\n	cmp	w19, w1\n	bgt	.L15\n	strb	wzr, [x25, w20, sxtw]\n.L1:\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x25\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L13:\n	.cfi_restore_state\n	mov	x2, x23\n	mov	x1, x21\n	mov	x0, x25\n	bl	strncpy\n	add	x1, x25, x23\n	add	x2, x21, w19, sxtw\n	cbz	w19, .L10\n	.p2align 3,,7\n.L9:\n	ldrb	w0, [x2, -1]!\n	strb	w0, [x1], 1\n	cmp	x2, x21\n	bne	.L9\n.L10:\n	add	w22, w19, w22\n	mov	x0, x25\n	strb	wzr, [x25, w22, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L3:\n	.cfi_restore_state\n	mov	x2, x23\n	mov	x1, x21\n	bl	strncpy\n	strb	wzr, [x25, w20, sxtw]\n	b	.L1\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	x21, x0\n	stp	x23, x24, [sp, 48]\n	str	x25, [sp, 64]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	bl	strlen\n	lsl	w20, w0, 1\n	mov	x22, x0\n	mov	w24, w0\n	add	w0, w20, 1\n	sxtw	x0, w0\n	bl	malloc\n	mov	x25, x0\n	cbz	x0, .L1\n	sxtw	x23, w22\n	cmp	w22, 0\n	ble	.L3\n	sub	w1, w22, #1\n	mov	x8, x21\n	mov	w19, 0\n	sxtw	x1, w1\n	.p2align 3,,7\n.L4:\n	sub	w7, w22, w19\n	asr	w7, w7, 1\n	cbz	w7, .L13\n	add	x7, x8, w7, sxtw\n	add	x4, x21, x1\n	mov	x3, x8\n	b	.L6\n	.p2align 2,,3\n.L25:\n	cmp	x3, x7\n	beq	.L13\n.L6:\n	ldrb	w6, [x3]\n	sub	x4, x4, #1\n	ldrb	w5, [x4, 1]\n	add	x3, x3, 1\n	cmp	w6, w5\n	beq	.L25\n	add	w19, w19, 1\n	add	x8, x8, 1\n	cmp	w24, w19\n	bne	.L4\n	mov	x1, x21\n	mov	x2, x23\n	mov	x0, x25\n	bl	strncpy\n	sub	x0, x23, #1\n	add	x2, x25, x23\n	add	x21, x21, x0\n	mov	x1, 0\n	.p2align 3,,7\n.L15:\n	neg	x0, x1\n	ldrb	w0, [x21, x0]\n	strb	w0, [x2, x1]\n	add	x1, x1, 1\n	cmp	w19, w1\n	bgt	.L15\n	strb	wzr, [x25, w20, sxtw]\n.L1:\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x25\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L13:\n	.cfi_restore_state\n	mov	x2, x23\n	mov	x1, x21\n	mov	x0, x25\n	bl	strncpy\n	add	x1, x25, x23\n	add	x2, x21, w19, sxtw\n	cbz	w19, .L10\n	.p2align 3,,7\n.L9:\n	ldrb	w0, [x2, -1]!\n	strb	w0, [x1], 1\n	cmp	x2, x21\n	bne	.L9\n.L10:\n	add	w22, w19, w22\n	mov	x0, x25\n	strb	wzr, [x25, w22, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L3:\n	.cfi_restore_state\n	mov	x2, x23\n	mov	x1, x21\n	bl	strncpy\n	strb	wzr, [x25, w20, sxtw]\n	b	.L1\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem110", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cbz	w1, .L7\n	ldr	w6, [x0]\n	cmp	w1, 1\n	ble	.L8\n	mov	w3, w6\n	mov	x2, 1\n	mov	w4, 0\n	.p2align 3,,7\n.L5:\n	mov	w5, w3\n	ldr	w3, [x0, x2, lsl 2]\n	add	x2, x2, 1\n	cmp	w5, w3\n	cinc	w4, w4, gt\n	cmp	w1, w2\n	bgt	.L5\n.L3:\n	add	x1, x0, w1, sxtw 2\n	ldr	w0, [x1, -4]\n	cmp	w0, w6\n	cinc	w4, w4, gt\n	cmp	w4, 1\n	cset	w0, le\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w0, 1\n	ret\n	.p2align 2,,3\n.L8:\n	mov	w4, 0\n	b	.L3\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cbz	w1, .L7\n	ldr	w6, [x0]\n	cmp	w1, 1\n	ble	.L8\n	mov	w3, w6\n	mov	x2, 1\n	mov	w4, 0\n	.p2align 3,,7\n.L5:\n	mov	w5, w3\n	ldr	w3, [x0, x2, lsl 2]\n	add	x2, x2, 1\n	cmp	w5, w3\n	cinc	w4, w4, gt\n	cmp	w1, w2\n	bgt	.L5\n.L3:\n	add	x1, x0, w1, sxtw 2\n	ldr	w0, [x1, -4]\n	cmp	w0, w6\n	cinc	w4, w4, gt\n	cmp	w4, 1\n	cset	w0, le\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w0, 1\n	ret\n	.p2align 2,,3\n.L8:\n	mov	w4, 0\n	b	.L3\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem111", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"YES\"\n	.align	3\n.LC1:\n	.string	\"NO\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w4, 0\n	cmp	w1, 0\n	ble	.L2\n	add	x6, x0, w1, sxtw 2\n	.p2align 3,,7\n.L4:\n	ldr	w5, [x0], 4\n	tst	x5, 1\n	cinc	w4, w4, eq\n	cmp	x0, x6\n	bne	.L4\n	cmp	w3, 0\n	ble	.L8\n.L6:\n	mov	x0, 0\n	.p2align 3,,7\n.L10:\n	ldr	w5, [x2, x0, lsl 2]\n	add	x0, x0, 1\n	tst	x5, 1\n	cinc	w4, w4, eq\n	cmp	w3, w0\n	bgt	.L10\n.L8:\n	cmp	w1, w4\n	adrp	x0, .LC0\n	adrp	x1, .LC1\n	add	x0, x0, :lo12:.LC0\n	add	x1, x1, :lo12:.LC1\n	csel	x0, x0, x1, le\n	ret\n	.p2align 2,,3\n.L2:\n	adrp	x0, .LC0\n	add	x0, x0, :lo12:.LC0\n	cmp	w3, 0\n	bgt	.L6\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"YES\"\n	.align	3\n.LC1:\n	.string	\"NO\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w4, 0\n	cmp	w1, 0\n	ble	.L2\n	add	x6, x0, w1, sxtw 2\n	.p2align 3,,7\n.L4:\n	ldr	w5, [x0], 4\n	tst	x5, 1\n	cinc	w4, w4, eq\n	cmp	x0, x6\n	bne	.L4\n	cmp	w3, 0\n	ble	.L8\n.L6:\n	mov	x0, 0\n	.p2align 3,,7\n.L10:\n	ldr	w5, [x2, x0, lsl 2]\n	add	x0, x0, 1\n	tst	x5, 1\n	cinc	w4, w4, eq\n	cmp	w3, w0\n	bgt	.L10\n.L8:\n	cmp	w1, w4\n	adrp	x0, .LC0\n	adrp	x1, .LC1\n	add	x0, x0, :lo12:.LC0\n	add	x1, x1, :lo12:.LC1\n	csel	x0, x0, x1, le\n	ret\n	.p2align 2,,3\n.L2:\n	adrp	x0, .LC0\n	add	x0, x0, :lo12:.LC0\n	cmp	w3, 0\n	bgt	.L6\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem112", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	sub	sp, sp, #112\n	.cfi_def_cfa_offset 112\n	ldrb	w6, [x0]\n	movi	v0.4s, 0\n	add	x4, sp, 8\n	mov	w5, 0\n	str	xzr, [x4, 96]\n	stp	q0, q0, [x4]\n	stp	q0, q0, [x4, 32]\n	stp	q0, q0, [x4, 64]\n	cbz	w6, .L2\n	.p2align 3,,7\n.L4:\n	sub	w7, w6, #97\n	cmp	w6, 32\n	beq	.L3\n	sxtw	x7, w7\n	ldr	w6, [x4, x7, lsl 2]\n	add	w6, w6, 1\n	str	w6, [x4, x7, lsl 2]\n	cmp	w5, w6\n	csel	w5, w5, w6, ge\n.L3:\n	ldrb	w6, [x0, 1]!\n	cbnz	w6, .L4\n.L2:\n	sub	x6, x1, #4\n	mov	x0, 1\n	mov	w7, 0\n	.p2align 3,,7\n.L6:\n	add	x1, x4, x0, lsl 2\n	ldr	w1, [x1, -4]\n	str	w1, [x6, x0, lsl 2]\n	cmp	w1, w5\n	bne	.L5\n	add	w1, w0, 96\n	strb	w1, [x3, w7, sxtw]\n	add	w7, w7, 1\n.L5:\n	add	x0, x0, 1\n	cmp	x0, 27\n	bne	.L6\n	str	w5, [x2]\n	strb	wzr, [x3, w7, sxtw]\n	add	sp, sp, 112\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	sub	sp, sp, #112\n	.cfi_def_cfa_offset 112\n	ldrb	w6, [x0]\n	movi	v0.4s, 0\n	add	x4, sp, 8\n	mov	w5, 0\n	str	xzr, [x4, 96]\n	stp	q0, q0, [x4]\n	stp	q0, q0, [x4, 32]\n	stp	q0, q0, [x4, 64]\n	cbz	w6, .L2\n	.p2align 3,,7\n.L4:\n	sub	w7, w6, #97\n	cmp	w6, 32\n	beq	.L3\n	sxtw	x7, w7\n	ldr	w6, [x4, x7, lsl 2]\n	add	w6, w6, 1\n	str	w6, [x4, x7, lsl 2]\n	cmp	w5, w6\n	csel	w5, w5, w6, ge\n.L3:\n	ldrb	w6, [x0, 1]!\n	cbnz	w6, .L4\n.L2:\n	sub	x6, x1, #4\n	mov	x0, 1\n	mov	w7, 0\n	.p2align 3,,7\n.L6:\n	add	x1, x4, x0, lsl 2\n	ldr	w1, [x1, -4]\n	str	w1, [x6, x0, lsl 2]\n	cmp	w1, w5\n	bne	.L5\n	add	w1, w0, 96\n	strb	w1, [x3, w7, sxtw]\n	add	w7, w7, 1\n.L5:\n	add	x0, x0, 1\n	cmp	x0, 27\n	bne	.L6\n	str	w5, [x2]\n	strb	wzr, [x3, w7, sxtw]\n	add	sp, sp, 112\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem113", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"True\"\n	.align	3\n.LC1:\n	.string	\"False\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	mov	x20, x3\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x21, x2\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	mov	x23, x1\n	bl	strlen\n	add	w0, w0, 1\n	sxtw	x0, w0\n	bl	malloc\n	ldrb	w6, [x19]\n	mov	x22, x0\n	cbz	w6, .L13\n	ldrb	w0, [x23]\n	add	x7, x19, 1\n	mov	w2, 0\n	.p2align 3,,7\n.L3:\n	mov	x5, x23\n	mov	w4, w0\n	cbnz	w0, .L5\n	b	.L6\n	.p2align 2,,3\n.L22:\n	ldrb	w4, [x5, 1]!\n	cbz	w4, .L6\n.L5:\n	cmp	w4, w6\n	bne	.L22\n	ldrb	w6, [x7], 1\n	cbnz	w6, .L3\n.L24:\n	add	x2, x22, w2, sxtw\n.L2:\n	strb	wzr, [x2]\n	mov	x0, x22\n	bl	strlen\n	add	w7, w0, w0, lsr 31\n	asr	w7, w7, 1\n	cmp	w0, 1\n	ble	.L7\n	sxtw	x6, w0\n	mov	x1, 0\n	sub	x6, x6, #1\n	add	x6, x22, x6\n	b	.L9\n	.p2align 2,,3\n.L23:\n	cmp	w7, w1\n	ble	.L7\n.L9:\n	neg	x4, x1\n	ldrb	w5, [x22, x1]\n	add	x1, x1, 1\n	ldrb	w3, [x6, x4]\n	cmp	w5, w3\n	beq	.L23\n	add	x2, x0, 1\n	mov	x1, x22\n	mov	x0, x21\n	bl	memcpy\n	mov	x0, x20\n	adrp	x1, .LC1\n	add	x1, x1, :lo12:.LC1\n	bl	strcpy\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	b	free\n	.p2align 2,,3\n.L6:\n	.cfi_restore_state\n	strb	w6, [x22, w2, sxtw]\n	add	w2, w2, 1\n	ldrb	w6, [x7], 1\n	cbnz	w6, .L3\n	b	.L24\n.L7:\n	add	x2, x0, 1\n	mov	x1, x22\n	mov	x0, x21\n	bl	memcpy\n	mov	x0, x20\n	adrp	x1, .LC0\n	add	x1, x1, :lo12:.LC0\n	bl	strcpy\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	b	free\n.L13:\n	.cfi_restore_state\n	mov	x2, x0\n	b	.L2\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"True\"\n	.align	3\n.LC1:\n	.string	\"False\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	mov	x20, x3\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x21, x2\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	mov	x23, x1\n	bl	strlen\n	add	w0, w0, 1\n	sxtw	x0, w0\n	bl	malloc\n	ldrb	w6, [x19]\n	mov	x22, x0\n	cbz	w6, .L13\n	ldrb	w0, [x23]\n	add	x7, x19, 1\n	mov	w2, 0\n	.p2align 3,,7\n.L3:\n	mov	x5, x23\n	mov	w4, w0\n	cbnz	w0, .L5\n	b	.L6\n	.p2align 2,,3\n.L22:\n	ldrb	w4, [x5, 1]!\n	cbz	w4, .L6\n.L5:\n	cmp	w4, w6\n	bne	.L22\n	ldrb	w6, [x7], 1\n	cbnz	w6, .L3\n.L24:\n	add	x2, x22, w2, sxtw\n.L2:\n	strb	wzr, [x2]\n	mov	x0, x22\n	bl	strlen\n	add	w7, w0, w0, lsr 31\n	asr	w7, w7, 1\n	cmp	w0, 1\n	ble	.L7\n	sxtw	x6, w0\n	mov	x1, 0\n	sub	x6, x6, #1\n	add	x6, x22, x6\n	b	.L9\n	.p2align 2,,3\n.L23:\n	cmp	w7, w1\n	ble	.L7\n.L9:\n	neg	x4, x1\n	ldrb	w5, [x22, x1]\n	add	x1, x1, 1\n	ldrb	w3, [x6, x4]\n	cmp	w5, w3\n	beq	.L23\n	add	x2, x0, 1\n	mov	x1, x22\n	mov	x0, x21\n	bl	memcpy\n	mov	x0, x20\n	adrp	x1, .LC1\n	add	x1, x1, :lo12:.LC1\n	bl	strcpy\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	b	free\n	.p2align 2,,3\n.L6:\n	.cfi_restore_state\n	strb	w6, [x22, w2, sxtw]\n	add	w2, w2, 1\n	ldrb	w6, [x7], 1\n	cbnz	w6, .L3\n	b	.L24\n.L7:\n	add	x2, x0, 1\n	mov	x1, x22\n	mov	x0, x21\n	bl	memcpy\n	mov	x0, x20\n	adrp	x1, .LC0\n	add	x1, x1, :lo12:.LC0\n	bl	strcpy\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	b	free\n.L13:\n	.cfi_restore_state\n	mov	x2, x0\n	b	.L2\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem114", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"the number of odd elements %d in the string %d of the %d input.\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	sbfiz	x23, x1, 3, 32\n	mov	x24, 0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	mov	w19, w1\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x22, x0\n	mov	x0, x23\n	bl	malloc\n	adrp	x21, .LC0\n	mov	x20, x0\n	add	x21, x21, :lo12:.LC0\n	cmp	w19, 0\n	ble	.L1\n	.p2align 3,,7\n.L2:\n	ldr	x0, [x22, x24]\n	mov	w19, 0\n	ldrb	w1, [x0], 1\n	cbz	w1, .L7\n	.p2align 3,,7\n.L5:\n	sub	w3, w1, #48\n	and	w2, w1, 1\n	ldrb	w1, [x0], 1\n	and	w3, w3, 255\n	cmp	w3, 10\n	add	w2, w19, w2\n	csel	w19, w2, w19, cc\n	cbnz	w1, .L5\n.L7:\n	mov	x0, 100\n	bl	malloc\n	str	x0, [x20, x24]\n	mov	w4, w19\n	mov	w3, w19\n	mov	w2, w19\n	mov	x1, x21\n	add	x24, x24, 8\n	bl	sprintf\n	cmp	x23, x24\n	bne	.L2\n.L1:\n	ldp	x21, x22, [sp, 32]\n	mov	x0, x20\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"the number of odd elements %d in the string %d of the %d input.\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	sbfiz	x23, x1, 3, 32\n	mov	x24, 0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	mov	w19, w1\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x22, x0\n	mov	x0, x23\n	bl	malloc\n	adrp	x21, .LC0\n	mov	x20, x0\n	add	x21, x21, :lo12:.LC0\n	cmp	w19, 0\n	ble	.L1\n	.p2align 3,,7\n.L2:\n	ldr	x0, [x22, x24]\n	mov	w19, 0\n	ldrb	w1, [x0], 1\n	cbz	w1, .L7\n	.p2align 3,,7\n.L5:\n	sub	w3, w1, #48\n	and	w2, w1, 1\n	ldrb	w1, [x0], 1\n	and	w3, w3, 255\n	cmp	w3, 10\n	add	w2, w19, w2\n	csel	w19, w2, w19, cc\n	cbnz	w1, .L5\n.L7:\n	mov	x0, 100\n	bl	malloc\n	str	x0, [x20, x24]\n	mov	w4, w19\n	mov	w3, w19\n	mov	w2, w19\n	mov	x1, x21\n	add	x24, x24, 8\n	bl	sprintf\n	cmp	x23, x24\n	bne	.L2\n.L1:\n	ldp	x21, x22, [sp, 32]\n	mov	x0, x20\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem115", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	ldr	x2, [x0]\n	mov	x5, x0\n	mov	x0, x2\n	cmp	w1, 1\n	ble	.L1\n	mov	x3, 1\n	.p2align 3,,7\n.L4:\n	ldr	x4, [x5, x3, lsl 3]\n	cmp	x2, 0\n	add	x3, x3, 1\n	add	x2, x2, x4\n	csel	x2, x2, x4, lt\n	cmp	x0, x2\n	csel	x0, x0, x2, le\n	cmp	w1, w3\n	bgt	.L4\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	ldr	x2, [x0]\n	mov	x5, x0\n	mov	x0, x2\n	cmp	w1, 1\n	ble	.L1\n	mov	x3, 1\n	.p2align 3,,7\n.L4:\n	ldr	x4, [x5, x3, lsl 3]\n	cmp	x2, 0\n	add	x3, x3, 1\n	add	x2, x2, x4\n	csel	x2, x2, x4, lt\n	cmp	x0, x2\n	csel	x0, x0, x2, le\n	cmp	w1, w3\n	bgt	.L4\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem116", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L10\n	mov	x6, x0\n	add	x7, x0, w1, sxtw 3\n.L3:\n	cmp	w2, 0\n	bgt	.L13\n	add	x6, x6, 8\n	cmp	x6, x7\n	bne	.L3\n.L10:\n	mov	w0, 0\n	ret\n.L13:\n	sbfiz	x8, x2, 2, 32\n	mov	w0, 0\n	.p2align 3,,7\n.L8:\n	ldr	x1, [x6]\n	mov	w2, 0\n	add	x5, x1, x8\n	.p2align 3,,7\n.L4:\n	ldr	w4, [x1], 4\n	add	w2, w2, w4\n	cmp	x1, x5\n	bne	.L4\n	cmp	w2, 0\n	ble	.L5\n	add	w1, w3, w2\n	add	x6, x6, 8\n	sub	w1, w1, #1\n	sdiv	w1, w1, w3\n	add	w0, w0, w1\n	cmp	x6, x7\n	bne	.L8\n	ret\n	.p2align 2,,3\n.L5:\n	add	x6, x6, 8\n	cmp	x6, x7\n	bne	.L8\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L10\n	mov	x6, x0\n	add	x7, x0, w1, sxtw 3\n.L3:\n	cmp	w2, 0\n	bgt	.L13\n	add	x6, x6, 8\n	cmp	x6, x7\n	bne	.L3\n.L10:\n	mov	w0, 0\n	ret\n.L13:\n	sbfiz	x8, x2, 2, 32\n	mov	w0, 0\n	.p2align 3,,7\n.L8:\n	ldr	x1, [x6]\n	mov	w2, 0\n	add	x5, x1, x8\n	.p2align 3,,7\n.L4:\n	ldr	w4, [x1], 4\n	add	w2, w2, w4\n	cmp	x1, x5\n	bne	.L4\n	cmp	w2, 0\n	ble	.L5\n	add	w1, w3, w2\n	add	x6, x6, 8\n	sub	w1, w1, #1\n	sdiv	w1, w1, w3\n	add	w0, w0, w1\n	cmp	x6, x7\n	bne	.L8\n	ret\n	.p2align 2,,3\n.L5:\n	add	x6, x6, 8\n	cmp	x6, x7\n	bne	.L8\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem117", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	mov	w10, w1\n	mov	x8, x0\n	cmp	w1, 0\n	ble	.L1\n	sub	x9, x0, #4\n	mov	x7, 1\n	cmp	w1, 1\n	beq	.L1\n	.p2align 3,,7\n.L3:\n	mov	x4, x7\n	.p2align 3,,7\n.L13:\n	ldr	w5, [x9, x7, lsl 2]\n	ldr	w6, [x8, x4, lsl 2]\n	cmp	w5, 0\n	ble	.L4\n	mov	w0, w5\n	mov	w2, 0\n	.p2align 3,,7\n.L5:\n	and	w1, w0, 1\n	asr	w0, w0, 1\n	add	w2, w2, w1\n	cbnz	w0, .L5\n	cmp	w6, 0\n	ble	.L9\n.L7:\n	mov	w1, w6\n	mov	w0, 0\n	.p2align 3,,7\n.L10:\n	and	w3, w1, 1\n	asr	w1, w1, 1\n	add	w0, w0, w3\n	cbnz	w1, .L10\n.L9:\n	cmp	w2, w0\n	bgt	.L11\n	cset	w0, eq\n.L8:\n	cmp	w0, 0\n	ccmp	w5, w6, 4, ne\n	bgt	.L11\n.L12:\n	add	x4, x4, 1\n	cmp	w10, w4\n	bgt	.L13\n	add	x7, x7, 1\n	cmp	w10, w7\n	bgt	.L3\n.L1:\n	ret\n	.p2align 2,,3\n.L11:\n	str	w6, [x9, x7, lsl 2]\n	str	w5, [x8, x4, lsl 2]\n	b	.L12\n	.p2align 2,,3\n.L4:\n	mov	w2, 0\n	mov	w0, 1\n	cmp	w6, 0\n	bgt	.L7\n	b	.L8\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	mov	w10, w1\n	mov	x8, x0\n	cmp	w1, 0\n	ble	.L1\n	sub	x9, x0, #4\n	mov	x7, 1\n	cmp	w1, 1\n	beq	.L1\n	.p2align 3,,7\n.L3:\n	mov	x4, x7\n	.p2align 3,,7\n.L13:\n	ldr	w5, [x9, x7, lsl 2]\n	ldr	w6, [x8, x4, lsl 2]\n	cmp	w5, 0\n	ble	.L4\n	mov	w0, w5\n	mov	w2, 0\n	.p2align 3,,7\n.L5:\n	and	w1, w0, 1\n	asr	w0, w0, 1\n	add	w2, w2, w1\n	cbnz	w0, .L5\n	cmp	w6, 0\n	ble	.L9\n.L7:\n	mov	w1, w6\n	mov	w0, 0\n	.p2align 3,,7\n.L10:\n	and	w3, w1, 1\n	asr	w1, w1, 1\n	add	w0, w0, w3\n	cbnz	w1, .L10\n.L9:\n	cmp	w2, w0\n	bgt	.L11\n	cset	w0, eq\n.L8:\n	cmp	w0, 0\n	ccmp	w5, w6, 4, ne\n	bgt	.L11\n.L12:\n	add	x4, x4, 1\n	cmp	w10, w4\n	bgt	.L13\n	add	x7, x7, 1\n	cmp	w10, w7\n	bgt	.L3\n.L1:\n	ret\n	.p2align 2,,3\n.L11:\n	str	w6, [x9, x7, lsl 2]\n	str	w5, [x8, x4, lsl 2]\n	b	.L12\n	.p2align 2,,3\n.L4:\n	mov	w2, 0\n	mov	w0, 1\n	cmp	w6, 0\n	bgt	.L7\n	b	.L8\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem118", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"aeiouAEIOU\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB34:\n	.cfi_startproc\n	stp	x29, x30, [sp, -128]!\n	.cfi_def_cfa_offset 128\n	.cfi_offset 29, -128\n	.cfi_offset 30, -120\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -112\n	.cfi_offset 20, -104\n	mov	x19, 0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -96\n	.cfi_offset 22, -88\n	mov	w22, w1\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -80\n	.cfi_offset 24, -72\n	mov	x24, x0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -64\n	.cfi_offset 26, -56\n	adrp	x25, .LC0\n	stp	x27, x28, [sp, 80]\n	.cfi_offset 27, -48\n	.cfi_offset 28, -40\n	mov	w27, 0\n	str	x2, [sp, 120]\n	bl	strlen\n	mov	x23, x0\n	add	x0, x0, 1\n	bl	malloc\n	mov	x21, x0\n	bl	__ctype_b_loc\n	str	wzr, [sp, 100]\n	ldr	x26, [x0]\n	add	x1, x25, :lo12:.LC0\n	mov	w25, 0\n	stp	xzr, x1, [sp, 104]\n	b	.L5\n	.p2align 2,,3\n.L13:\n	cmp	w22, w27\n	beq	.L11\n.L3:\n	mov	w25, w28\n	mov	w27, 0\n.L4:\n	add	x1, x19, 1\n	cmp	x23, x19\n	beq	.L12\n.L6:\n	mov	x19, x1\n.L5:\n	ldrb	w1, [x24, x19]\n	add	w28, w19, 1\n	ubfiz	x2, x1, 1, 8\n	ldrh	w20, [x26, x2]\n	tst	x20, 8192\n	ccmp	w1, 0, 4, eq\n	beq	.L13\n	sub	w2, w19, w25\n	ldr	x0, [sp, 112]\n	strb	w1, [x21, w2, sxtw]\n	bl	strchr\n	cbnz	x0, .L4\n	ubfx	x20, x20, 10, 1\n	add	x1, x19, 1\n	add	w27, w27, w20\n	cmp	x23, x19\n	bne	.L6\n.L12:\n	mov	x0, x21\n	bl	free\n	ldr	x1, [sp, 120]\n	ldr	w2, [sp, 100]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x27, x28, [sp, 80]\n	str	w2, [x1]\n	ldr	x0, [sp, 104]\n	ldp	x29, x30, [sp], 128\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 27\n	.cfi_restore 28\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L11:\n	.cfi_restore_state\n	ldr	w0, [sp, 100]\n	sub	w4, w19, w25\n	add	w1, w0, 1\n	str	w1, [sp, 100]\n	ldr	x0, [sp, 104]\n	strb	wzr, [x21, w4, sxtw]\n	sbfiz	x20, x1, 3, 32\n	mov	x1, x20\n	bl	realloc\n	mov	x25, x0\n	add	x20, x25, x20\n	mov	x0, x21\n	str	x25, [sp, 104]\n	bl	strlen\n	add	x27, x0, 1\n	mov	x0, x27\n	bl	malloc\n	str	x0, [x20, -8]\n	mov	x2, x27\n	mov	x1, x21\n	bl	memcpy\n	b	.L3\n	.cfi_endproc\n.LFE34:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"aeiouAEIOU\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB34:\n	.cfi_startproc\n	stp	x29, x30, [sp, -128]!\n	.cfi_def_cfa_offset 128\n	.cfi_offset 29, -128\n	.cfi_offset 30, -120\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -112\n	.cfi_offset 20, -104\n	mov	x19, 0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -96\n	.cfi_offset 22, -88\n	mov	w22, w1\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -80\n	.cfi_offset 24, -72\n	mov	x24, x0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -64\n	.cfi_offset 26, -56\n	adrp	x25, .LC0\n	stp	x27, x28, [sp, 80]\n	.cfi_offset 27, -48\n	.cfi_offset 28, -40\n	mov	w27, 0\n	str	x2, [sp, 120]\n	bl	strlen\n	mov	x23, x0\n	add	x0, x0, 1\n	bl	malloc\n	mov	x21, x0\n	bl	__ctype_b_loc\n	str	wzr, [sp, 100]\n	ldr	x26, [x0]\n	add	x1, x25, :lo12:.LC0\n	mov	w25, 0\n	stp	xzr, x1, [sp, 104]\n	b	.L5\n	.p2align 2,,3\n.L13:\n	cmp	w22, w27\n	beq	.L11\n.L3:\n	mov	w25, w28\n	mov	w27, 0\n.L4:\n	add	x1, x19, 1\n	cmp	x23, x19\n	beq	.L12\n.L6:\n	mov	x19, x1\n.L5:\n	ldrb	w1, [x24, x19]\n	add	w28, w19, 1\n	ubfiz	x2, x1, 1, 8\n	ldrh	w20, [x26, x2]\n	tst	x20, 8192\n	ccmp	w1, 0, 4, eq\n	beq	.L13\n	sub	w2, w19, w25\n	ldr	x0, [sp, 112]\n	strb	w1, [x21, w2, sxtw]\n	bl	strchr\n	cbnz	x0, .L4\n	ubfx	x20, x20, 10, 1\n	add	x1, x19, 1\n	add	w27, w27, w20\n	cmp	x23, x19\n	bne	.L6\n.L12:\n	mov	x0, x21\n	bl	free\n	ldr	x1, [sp, 120]\n	ldr	w2, [sp, 100]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x27, x28, [sp, 80]\n	str	w2, [x1]\n	ldr	x0, [sp, 104]\n	ldp	x29, x30, [sp], 128\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 27\n	.cfi_restore 28\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L11:\n	.cfi_restore_state\n	ldr	w0, [sp, 100]\n	sub	w4, w19, w25\n	add	w1, w0, 1\n	str	w1, [sp, 100]\n	ldr	x0, [sp, 104]\n	strb	wzr, [x21, w4, sxtw]\n	sbfiz	x20, x1, 3, 32\n	mov	x1, x20\n	bl	realloc\n	mov	x25, x0\n	add	x20, x25, x20\n	mov	x0, x21\n	str	x25, [sp, 104]\n	bl	strlen\n	add	x27, x0, 1\n	mov	x0, x27\n	bl	malloc\n	str	x0, [x20, -8]\n	mov	x2, x27\n	mov	x1, x21\n	bl	memcpy\n	b	.L3\n	.cfi_endproc\n.LFE34:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem119", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"AEIOUaeiou\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x19, x0\n	bl	strlen\n	sub	w1, w0, #2\n	cmp	w1, 0\n	ble	.L5\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -8\n	.cfi_offset 21, -16\n	sub	w22, w0, #3\n	sub	x22, x1, x22\n	sub	x0, x19, #1\n	adrp	x21, .LC0\n	add	x19, x19, x1\n	add	x22, x22, x0\n	add	x21, x21, :lo12:.LC0\n	.p2align 3,,7\n.L4:\n	ldrb	w20, [x19]\n	mov	x0, x21\n	mov	w1, w20\n	bl	strchr\n	cbz	x0, .L3\n	ldrb	w1, [x19, 1]\n	mov	x0, x21\n	bl	strchr\n	cbnz	x0, .L3\n	ldrb	w1, [x19, -1]\n	mov	x0, x21\n	bl	strchr\n	cbz	x0, .L14\n.L3:\n	sub	x19, x19, #1\n	cmp	x22, x19\n	bne	.L4\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	mov	w20, 0\n.L2:\n	adrp	x1, .LANCHOR0\n	add	x0, x1, :lo12:.LANCHOR0\n	strb	w20, [x1, #:lo12:.LANCHOR0]\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L14:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	adrp	x1, .LANCHOR0\n	add	x0, x1, :lo12:.LANCHOR0\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	strb	w20, [x1, #:lo12:.LANCHOR0]\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L5:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	w20, 0\n	b	.L2\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.bss\n	.align	3\n	.set	.LANCHOR0,. + 0\n	.type	out.0, %object\n	.size	out.0, 2\nout.0:\n	.zero	2\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"AEIOUaeiou\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x19, x0\n	bl	strlen\n	sub	w1, w0, #2\n	cmp	w1, 0\n	ble	.L5\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -8\n	.cfi_offset 21, -16\n	sub	w22, w0, #3\n	sub	x22, x1, x22\n	sub	x0, x19, #1\n	adrp	x21, .LC0\n	add	x19, x19, x1\n	add	x22, x22, x0\n	add	x21, x21, :lo12:.LC0\n	.p2align 3,,7\n.L4:\n	ldrb	w20, [x19]\n	mov	x0, x21\n	mov	w1, w20\n	bl	strchr\n	cbz	x0, .L3\n	ldrb	w1, [x19, 1]\n	mov	x0, x21\n	bl	strchr\n	cbnz	x0, .L3\n	ldrb	w1, [x19, -1]\n	mov	x0, x21\n	bl	strchr\n	cbz	x0, .L14\n.L3:\n	sub	x19, x19, #1\n	cmp	x22, x19\n	bne	.L4\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	mov	w20, 0\n.L2:\n	adrp	x1, .LANCHOR0\n	add	x0, x1, :lo12:.LANCHOR0\n	strb	w20, [x1, #:lo12:.LANCHOR0]\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L14:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	adrp	x1, .LANCHOR0\n	add	x0, x1, :lo12:.LANCHOR0\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	strb	w20, [x1, #:lo12:.LANCHOR0]\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L5:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	w20, 0\n	b	.L2\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.bss\n	.align	3\n	.set	.LANCHOR0,. + 0\n	.type	out.0, %object\n	.size	out.0, 2\nout.0:\n	.zero	2\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem12", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x19, x1\n	mov	x20, x0\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	bl	strlen\n	mov	x21, x0\n	mov	x0, x19\n	bl	strlen\n	cmp	w0, w21\n	csel	w21, w0, w21, lt\n	add	w0, w21, 1\n	sxtw	x0, w0\n	bl	malloc\n	cbz	x0, .L1\n	cmp	w21, 0\n	ble	.L3\n	sxtw	x1, w21\n	mov	x2, 0\n	.p2align 3,,7\n.L5:\n	ldrb	w3, [x19, x2]\n	ldrb	w4, [x20, x2]\n	cmp	w4, w3\n	cset	w3, ne\n	add	w3, w3, 48\n	strb	w3, [x0, x2]\n	add	x2, x2, 1\n	cmp	x1, x2\n	bne	.L5\n.L3:\n	strb	wzr, [x0, w21, sxtw]\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x19, x1\n	mov	x20, x0\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	bl	strlen\n	mov	x21, x0\n	mov	x0, x19\n	bl	strlen\n	cmp	w0, w21\n	csel	w21, w0, w21, lt\n	add	w0, w21, 1\n	sxtw	x0, w0\n	bl	malloc\n	cbz	x0, .L1\n	cmp	w21, 0\n	ble	.L3\n	sxtw	x1, w21\n	mov	x2, 0\n	.p2align 3,,7\n.L5:\n	ldrb	w3, [x19, x2]\n	ldrb	w4, [x20, x2]\n	cmp	w4, w3\n	cset	w3, ne\n	add	w3, w3, 48\n	strb	w3, [x0, x2]\n	add	x2, x2, 1\n	cmp	x1, x2\n	bne	.L5\n.L3:\n	strb	wzr, [x0, w21, sxtw]\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem120", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"Yes\"\n	.align	3\n.LC1:\n	.string	\"No\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x19, x1\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	mov	x21, x0\n	bl	strlen\n	mov	x20, x0\n	mov	x0, x19\n	bl	strlen\n	mov	w22, w20\n	mov	w1, w0\n	cmp	w20, 0\n	ble	.L2\n	add	x2, x21, 1\n	sub	w6, w20, #1\n	add	x6, x6, x2\n	mov	x4, x21\n	mov	w3, 1\n	mov	w2, 0\n	b	.L6\n	.p2align 2,,3\n.L3:\n	cmp	w5, 41\n	add	x4, x4, 1\n	cset	w5, eq\n	sub	w2, w2, w5\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	x6, x4\n	beq	.L37\n.L6:\n	ldrb	w5, [x4]\n	cmp	w5, 40\n	bne	.L3\n	add	w2, w2, 1\n	add	x4, x4, 1\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	x6, x4\n	bne	.L6\n.L37:\n	cmp	w0, 0\n	ble	.L7\n.L24:\n	mov	x4, 0\n	b	.L11\n	.p2align 2,,3\n.L8:\n	cmp	w5, 41\n	add	x4, x4, 1\n	cset	w5, eq\n	sub	w2, w2, w5\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w1, w4\n	ble	.L38\n.L11:\n	ldrb	w5, [x19, x4]\n	cmp	w5, 40\n	bne	.L8\n	add	w2, w2, 1\n	add	x4, x4, 1\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w1, w4\n	bgt	.L11\n.L38:\n	cmp	w2, 0\n	cset	w0, eq\n	tst	w3, w0\n	bne	.L35\n	mov	x4, 0\n	mov	w3, 1\n	mov	w2, 0\n	b	.L18\n	.p2align 2,,3\n.L15:\n	cmp	w5, 41\n	add	x4, x4, 1\n	cset	w5, eq\n	sub	w2, w2, w5\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w1, w4\n	ble	.L39\n.L18:\n	ldrb	w5, [x19, x4]\n	cmp	w5, 40\n	bne	.L15\n	add	w2, w2, 1\n	add	x4, x4, 1\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w1, w4\n	bgt	.L18\n.L39:\n	cmp	w20, 0\n	ble	.L19\n.L14:\n	mov	x1, 0\n	b	.L23\n	.p2align 2,,3\n.L20:\n	cmp	w4, 41\n	add	x1, x1, 1\n	cset	w4, eq\n	sub	w2, w2, w4\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w22, w1\n	ble	.L19\n.L23:\n	ldrb	w4, [x21, x1]\n	cmp	w4, 40\n	bne	.L20\n	add	w2, w2, 1\n	add	x1, x1, 1\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w22, w1\n	bgt	.L23\n.L19:\n	cmp	w2, 0\n	adrp	x1, .LC1\n	cset	w0, eq\n	add	x1, x1, :lo12:.LC1\n	tst	w3, w0\n	adrp	x0, .LC0\n	add	x0, x0, :lo12:.LC0\n	ldp	x19, x20, [sp, 16]\n	csel	x0, x0, x1, ne\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	.cfi_restore_state\n	mov	w3, 1\n	mov	w2, 0\n	cmp	w0, 0\n	bgt	.L24\n.L35:\n	ldp	x19, x20, [sp, 16]\n	adrp	x0, .LC0\n	ldp	x21, x22, [sp, 32]\n	add	x0, x0, :lo12:.LC0\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L7:\n	.cfi_restore_state\n	cmp	w2, 0\n	cset	w0, eq\n	tst	w3, w0\n	bne	.L35\n	mov	w3, 1\n	mov	w2, 0\n	b	.L14\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"Yes\"\n	.align	3\n.LC1:\n	.string	\"No\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x19, x1\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	mov	x21, x0\n	bl	strlen\n	mov	x20, x0\n	mov	x0, x19\n	bl	strlen\n	mov	w22, w20\n	mov	w1, w0\n	cmp	w20, 0\n	ble	.L2\n	add	x2, x21, 1\n	sub	w6, w20, #1\n	add	x6, x6, x2\n	mov	x4, x21\n	mov	w3, 1\n	mov	w2, 0\n	b	.L6\n	.p2align 2,,3\n.L3:\n	cmp	w5, 41\n	add	x4, x4, 1\n	cset	w5, eq\n	sub	w2, w2, w5\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	x6, x4\n	beq	.L37\n.L6:\n	ldrb	w5, [x4]\n	cmp	w5, 40\n	bne	.L3\n	add	w2, w2, 1\n	add	x4, x4, 1\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	x6, x4\n	bne	.L6\n.L37:\n	cmp	w0, 0\n	ble	.L7\n.L24:\n	mov	x4, 0\n	b	.L11\n	.p2align 2,,3\n.L8:\n	cmp	w5, 41\n	add	x4, x4, 1\n	cset	w5, eq\n	sub	w2, w2, w5\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w1, w4\n	ble	.L38\n.L11:\n	ldrb	w5, [x19, x4]\n	cmp	w5, 40\n	bne	.L8\n	add	w2, w2, 1\n	add	x4, x4, 1\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w1, w4\n	bgt	.L11\n.L38:\n	cmp	w2, 0\n	cset	w0, eq\n	tst	w3, w0\n	bne	.L35\n	mov	x4, 0\n	mov	w3, 1\n	mov	w2, 0\n	b	.L18\n	.p2align 2,,3\n.L15:\n	cmp	w5, 41\n	add	x4, x4, 1\n	cset	w5, eq\n	sub	w2, w2, w5\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w1, w4\n	ble	.L39\n.L18:\n	ldrb	w5, [x19, x4]\n	cmp	w5, 40\n	bne	.L15\n	add	w2, w2, 1\n	add	x4, x4, 1\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w1, w4\n	bgt	.L18\n.L39:\n	cmp	w20, 0\n	ble	.L19\n.L14:\n	mov	x1, 0\n	b	.L23\n	.p2align 2,,3\n.L20:\n	cmp	w4, 41\n	add	x1, x1, 1\n	cset	w4, eq\n	sub	w2, w2, w4\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w22, w1\n	ble	.L19\n.L23:\n	ldrb	w4, [x21, x1]\n	cmp	w4, 40\n	bne	.L20\n	add	w2, w2, 1\n	add	x1, x1, 1\n	cmp	w2, 0\n	csel	w3, w3, wzr, ge\n	cmp	w22, w1\n	bgt	.L23\n.L19:\n	cmp	w2, 0\n	adrp	x1, .LC1\n	cset	w0, eq\n	add	x1, x1, :lo12:.LC1\n	tst	w3, w0\n	adrp	x0, .LC0\n	add	x0, x0, :lo12:.LC0\n	ldp	x19, x20, [sp, 16]\n	csel	x0, x0, x1, ne\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	.cfi_restore_state\n	mov	w3, 1\n	mov	w2, 0\n	cmp	w0, 0\n	bgt	.L24\n.L35:\n	ldp	x19, x20, [sp, 16]\n	adrp	x0, .LC0\n	ldp	x21, x22, [sp, 32]\n	add	x0, x0, :lo12:.LC0\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L7:\n	.cfi_restore_state\n	cmp	w2, 0\n	cset	w0, eq\n	tst	w3, w0\n	bne	.L35\n	mov	w3, 1\n	mov	w2, 0\n	b	.L14\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem121", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 1\n	ble	.L2\n	mov	w8, w1\n	add	x9, x0, 4\n	.p2align 3,,7\n.L3:\n	cmp	w8, 1\n	ble	.L21\n	sub	w7, w8, #2\n	mov	x4, x0\n	add	x7, x9, w7, uxtw 2\n	.p2align 3,,7\n.L5:\n	ldp	w5, w6, [x4]\n	cmp	w5, w6\n	ble	.L4\n	stp	w6, w5, [x4]\n.L4:\n	add	x4, x4, 4\n	cmp	x7, x4\n	bne	.L5\n	sub	w8, w8, #1\n	cmp	w8, 1\n	bne	.L3\n.L2:\n	cmp	w2, 0\n	ble	.L1\n	sub	w4, w1, w2\n	sbfiz	x5, x2, 2, 32\n	mov	x1, 0\n	add	x0, x0, w4, sxtw 2\n	.p2align 3,,7\n.L11:\n	ldr	w2, [x0, x1]\n	str	w2, [x3, x1]\n	add	x1, x1, 4\n	cmp	x1, x5\n	bne	.L11\n.L1:\n	ret\n	.p2align 2,,3\n.L21:\n	sub	w8, w8, #1\n	b	.L3\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 1\n	ble	.L2\n	mov	w8, w1\n	add	x9, x0, 4\n	.p2align 3,,7\n.L3:\n	cmp	w8, 1\n	ble	.L21\n	sub	w7, w8, #2\n	mov	x4, x0\n	add	x7, x9, w7, uxtw 2\n	.p2align 3,,7\n.L5:\n	ldp	w5, w6, [x4]\n	cmp	w5, w6\n	ble	.L4\n	stp	w6, w5, [x4]\n.L4:\n	add	x4, x4, 4\n	cmp	x7, x4\n	bne	.L5\n	sub	w8, w8, #1\n	cmp	w8, 1\n	bne	.L3\n.L2:\n	cmp	w2, 0\n	ble	.L1\n	sub	w4, w1, w2\n	sbfiz	x5, x2, 2, 32\n	mov	x1, 0\n	add	x0, x0, w4, sxtw 2\n	.p2align 3,,7\n.L11:\n	ldr	w2, [x0, x1]\n	str	w2, [x3, x1]\n	add	x1, x1, 4\n	cmp	x1, x5\n	bne	.L11\n.L1:\n	ret\n	.p2align 2,,3\n.L21:\n	sub	w8, w8, #1\n	b	.L3\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem122", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	x5, x0\n	cmp	w1, 0\n	ble	.L5\n	mov	x4, 0\n	mov	w0, 0\n	.p2align 3,,7\n.L4:\n	ldr	w2, [x5, x4, lsl 2]\n	add	x4, x4, 2\n	cmp	w2, 0\n	and	w3, w2, 1\n	csneg	w3, w3, w3, ge\n	add	w2, w0, w2\n	cmp	w3, 1\n	csel	w0, w2, w0, eq\n	cmp	w1, w4\n	bgt	.L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	x5, x0\n	cmp	w1, 0\n	ble	.L5\n	mov	x4, 0\n	mov	w0, 0\n	.p2align 3,,7\n.L4:\n	ldr	w2, [x5, x4, lsl 2]\n	add	x4, x4, 2\n	cmp	w2, 0\n	and	w3, w2, 1\n	csneg	w3, w3, w3, ge\n	add	w2, w0, w2\n	cmp	w3, 1\n	csel	w0, w2, w0, eq\n	cmp	w1, w4\n	bgt	.L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem123", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L5\n	mov	x2, x0\n	mov	w0, 0\n	add	x4, x2, w1, sxtw 2\n	.p2align 3,,7\n.L4:\n	ldr	w1, [x2], 4\n	add	w3, w1, 99\n	add	w1, w0, w1\n	cmp	w3, 199\n	csel	w0, w1, w0, cc\n	cmp	x4, x2\n	bne	.L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L5\n	mov	x2, x0\n	mov	w0, 0\n	add	x4, x2, w1, sxtw 2\n	.p2align 3,,7\n.L4:\n	ldr	w1, [x2], 4\n	add	w3, w1, 99\n	add	w1, w0, w1\n	cmp	w3, 199\n	csel	w0, w1, w0, cc\n	cmp	x4, x2\n	bne	.L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem124", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x2\n	mov	w2, 1\n	str	w2, [x20]\n	str	w2, [x1]\n	cmp	w0, w2\n	beq	.L2\n	mov	w19, w0\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	mov	w21, 10\n	.p2align 3,,7\n.L7:\n	cmp	w19, 0\n	and	w0, w19, 1\n	csneg	w0, w0, w0, ge\n	cmp	w0, 1\n	beq	.L5\n	add	w19, w19, w19, lsr 31\n	asr	w19, w19, 1\n	cmp	w19, 1\n	bne	.L7\n	ldr	x21, [sp, 32]\n	.cfi_restore 21\n.L2:\n	add	x5, x1, 4\n	ldr	w0, [x20]\n	mov	x6, 1\n	cmp	w0, 1\n	ble	.L1\n	.p2align 3,,7\n.L8:\n	ldr	w0, [x1, x6, lsl 2]\n	sub	x3, x6, #1\n	b	.L9\n	.p2align 2,,3\n.L11:\n	str	w4, [x5, x3, lsl 2]\n	sub	x3, x3, #1\n	cmn	w3, #1\n	beq	.L14\n.L9:\n	ldr	w4, [x1, x3, lsl 2]\n	cmp	w4, w0\n	bgt	.L11\n	add	w3, w3, 1\n	add	x3, x1, w3, sxtw 2\n.L10:\n	str	w0, [x3]\n	add	x6, x6, 1\n	ldr	w0, [x20]\n	cmp	w0, w6\n	bgt	.L8\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 21, -16\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	ldr	w2, [x20]\n	cmp	w21, w2\n	ble	.L26\n.L4:\n	add	w0, w2, 1\n	str	w0, [x20]\n	str	w19, [x1, w2, sxtw 2]\n	add	w0, w19, w19, lsl 1\n	add	w19, w0, 1\n	tbz	x0, 0, .L5\n	asr	w19, w19, 1\n	b	.L7\n	.p2align 2,,3\n.L14:\n	.cfi_restore 21\n	mov	x3, x1\n	b	.L10\n	.p2align 2,,3\n.L26:\n	.cfi_offset 21, -16\n	lsl	w21, w21, 1\n	mov	x0, x1\n	sbfiz	x1, x21, 2, 32\n	bl	realloc\n	ldr	w2, [x20]\n	mov	x1, x0\n	b	.L4\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x2\n	mov	w2, 1\n	str	w2, [x20]\n	str	w2, [x1]\n	cmp	w0, w2\n	beq	.L2\n	mov	w19, w0\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	mov	w21, 10\n	.p2align 3,,7\n.L7:\n	cmp	w19, 0\n	and	w0, w19, 1\n	csneg	w0, w0, w0, ge\n	cmp	w0, 1\n	beq	.L5\n	add	w19, w19, w19, lsr 31\n	asr	w19, w19, 1\n	cmp	w19, 1\n	bne	.L7\n	ldr	x21, [sp, 32]\n	.cfi_restore 21\n.L2:\n	add	x5, x1, 4\n	ldr	w0, [x20]\n	mov	x6, 1\n	cmp	w0, 1\n	ble	.L1\n	.p2align 3,,7\n.L8:\n	ldr	w0, [x1, x6, lsl 2]\n	sub	x3, x6, #1\n	b	.L9\n	.p2align 2,,3\n.L11:\n	str	w4, [x5, x3, lsl 2]\n	sub	x3, x3, #1\n	cmn	w3, #1\n	beq	.L14\n.L9:\n	ldr	w4, [x1, x3, lsl 2]\n	cmp	w4, w0\n	bgt	.L11\n	add	w3, w3, 1\n	add	x3, x1, w3, sxtw 2\n.L10:\n	str	w0, [x3]\n	add	x6, x6, 1\n	ldr	w0, [x20]\n	cmp	w0, w6\n	bgt	.L8\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 21, -16\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	ldr	w2, [x20]\n	cmp	w21, w2\n	ble	.L26\n.L4:\n	add	w0, w2, 1\n	str	w0, [x20]\n	str	w19, [x1, w2, sxtw 2]\n	add	w0, w19, w19, lsl 1\n	add	w19, w0, 1\n	tbz	x0, 0, .L5\n	asr	w19, w19, 1\n	b	.L7\n	.p2align 2,,3\n.L14:\n	.cfi_restore 21\n	mov	x3, x1\n	b	.L10\n	.p2align 2,,3\n.L26:\n	.cfi_offset 21, -16\n	lsl	w21, w21, 1\n	mov	x0, x1\n	sbfiz	x1, x21, 2, 32\n	bl	realloc\n	ldr	w2, [x20]\n	mov	x1, x0\n	b	.L4\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem125", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	mov	x20, x0\n	bl	strlen\n	cmp	x0, 10\n	bne	.L5\n	mov	x19, 0\n	mov	x2, 36\n	b	.L2\n	.p2align 2,,3\n.L16:\n	cmp	w1, 45\n	bne	.L5\n.L6:\n	cmp	x19, 10\n	beq	.L15\n.L2:\n	ldrb	w1, [x20, x19]\n	lsr	x0, x2, x19\n	add	x19, x19, 1\n	tbnz	x0, 0, .L16\n	sub	w1, w1, #48\n	and	w1, w1, 255\n	cmp	w1, 9\n	bls	.L6\n	.p2align 3,,7\n.L5:\n	mov	w0, 0\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L15:\n	.cfi_restore_state\n	ldrh	w5, [x20]\n	mov	w2, w19\n	ldrh	w4, [x20, 3]\n	mov	x1, 0\n	ldr	w3, [x20, 6]\n	add	x0, sp, 40\n	strh	w5, [sp, 40]\n	strb	wzr, [sp, 42]\n	strh	w4, [sp, 48]\n	strb	wzr, [sp, 50]\n	str	w3, [sp, 56]\n	strb	wzr, [sp, 60]\n	bl	strtol\n	mov	w2, w19\n	mov	x20, x0\n	mov	x1, 0\n	add	x0, sp, 48\n	bl	strtol\n	mov	w2, w19\n	mov	x1, 0\n	mov	x19, x0\n	add	x0, sp, 56\n	bl	strtol\n	sub	w0, w20, #1\n	cmp	w0, 11\n	bhi	.L5\n	sub	w0, w19, #1\n	cmp	w0, 30\n	bhi	.L5\n	cmp	w20, 11\n	bhi	.L7\n	mov	x0, 2640\n	lsr	x0, x0, x20\n	tbz	x0, 0, .L7\n	cmp	w19, 31\n	cset	w0, ne\n	b	.L1\n	.p2align 2,,3\n.L7:\n	cmp	w20, 2\n	ccmp	w19, 29, 4, eq\n	cset	w0, le\n	b	.L1\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	mov	x20, x0\n	bl	strlen\n	cmp	x0, 10\n	bne	.L5\n	mov	x19, 0\n	mov	x2, 36\n	b	.L2\n	.p2align 2,,3\n.L16:\n	cmp	w1, 45\n	bne	.L5\n.L6:\n	cmp	x19, 10\n	beq	.L15\n.L2:\n	ldrb	w1, [x20, x19]\n	lsr	x0, x2, x19\n	add	x19, x19, 1\n	tbnz	x0, 0, .L16\n	sub	w1, w1, #48\n	and	w1, w1, 255\n	cmp	w1, 9\n	bls	.L6\n	.p2align 3,,7\n.L5:\n	mov	w0, 0\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L15:\n	.cfi_restore_state\n	ldrh	w5, [x20]\n	mov	w2, w19\n	ldrh	w4, [x20, 3]\n	mov	x1, 0\n	ldr	w3, [x20, 6]\n	add	x0, sp, 40\n	strh	w5, [sp, 40]\n	strb	wzr, [sp, 42]\n	strh	w4, [sp, 48]\n	strb	wzr, [sp, 50]\n	str	w3, [sp, 56]\n	strb	wzr, [sp, 60]\n	bl	strtol\n	mov	w2, w19\n	mov	x20, x0\n	mov	x1, 0\n	add	x0, sp, 48\n	bl	strtol\n	mov	w2, w19\n	mov	x1, 0\n	mov	x19, x0\n	add	x0, sp, 56\n	bl	strtol\n	sub	w0, w20, #1\n	cmp	w0, 11\n	bhi	.L5\n	sub	w0, w19, #1\n	cmp	w0, 30\n	bhi	.L5\n	cmp	w20, 11\n	bhi	.L7\n	mov	x0, 2640\n	lsr	x0, x0, x20\n	tbz	x0, 0, .L7\n	cmp	w19, 31\n	cset	w0, ne\n	b	.L1\n	.p2align 2,,3\n.L7:\n	cmp	w20, 2\n	ccmp	w19, 29, 4, eq\n	cset	w0, le\n	b	.L1\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem127", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 1\n	ble	.L5\n	sub	x5, x0, #4\n	sub	x6, x0, #8\n	mov	x2, 1\n	b	.L4\n	.p2align 2,,3\n.L3:\n	add	x2, x2, 1\n	cmp	w1, w2\n	ble	.L5\n.L4:\n	ldr	w3, [x0, x2, lsl 2]\n	ldr	w4, [x5, x2, lsl 2]\n	cmp	w3, w4\n	blt	.L7\n	ccmp	w2, 1, 4, eq\n	beq	.L3\n	ldr	w4, [x6, x2, lsl 2]\n	cmp	w3, w4\n	bne	.L3\n.L7:\n	mov	w0, 0\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 1\n	ble	.L5\n	sub	x5, x0, #4\n	sub	x6, x0, #8\n	mov	x2, 1\n	b	.L4\n	.p2align 2,,3\n.L3:\n	add	x2, x2, 1\n	cmp	w1, w2\n	ble	.L5\n.L4:\n	ldr	w3, [x0, x2, lsl 2]\n	ldr	w4, [x5, x2, lsl 2]\n	cmp	w3, w4\n	blt	.L7\n	ccmp	w2, 1, 4, eq\n	beq	.L3\n	ldr	w4, [x6, x2, lsl 2]\n	cmp	w3, w4\n	bne	.L3\n.L7:\n	mov	w0, 0\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem128", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"YES\"\n	.align	3\n.LC1:\n	.string	\"NO\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w3, w1\n	csel	w3, w3, w1, le\n	cmp	w2, w0\n	csel	w2, w2, w0, ge\n	sub	w1, w3, w2\n	cmp	w1, 1\n	ble	.L8\n	cmp	w1, 3\n	ble	.L6\n	tbz	x1, 0, .L8\n	mov	w0, 2\n	b	.L3\n	.p2align 2,,3\n.L4:\n	sdiv	w2, w1, w0\n	msub	w2, w2, w0, w1\n	cbz	w2, .L8\n.L3:\n	add	w0, w0, 1\n	mul	w2, w0, w0\n	cmp	w2, w1\n	ble	.L4\n.L6:\n	adrp	x0, .LC0\n	add	x0, x0, :lo12:.LC0\n	ret\n	.p2align 2,,3\n.L8:\n	adrp	x0, .LC1\n	add	x0, x0, :lo12:.LC1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"YES\"\n	.align	3\n.LC1:\n	.string	\"NO\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w3, w1\n	csel	w3, w3, w1, le\n	cmp	w2, w0\n	csel	w2, w2, w0, ge\n	sub	w1, w3, w2\n	cmp	w1, 1\n	ble	.L8\n	cmp	w1, 3\n	ble	.L6\n	tbz	x1, 0, .L8\n	mov	w0, 2\n	b	.L3\n	.p2align 2,,3\n.L4:\n	sdiv	w2, w1, w0\n	msub	w2, w2, w0, w1\n	cbz	w2, .L8\n.L3:\n	add	w0, w0, 1\n	mul	w2, w0, w0\n	cmp	w2, w1\n	ble	.L4\n.L6:\n	adrp	x0, .LC0\n	add	x0, x0, :lo12:.LC0\n	ret\n	.p2align 2,,3\n.L8:\n	adrp	x0, .LC1\n	add	x0, x0, :lo12:.LC1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem129", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	cbz	w1, .L6\n	ble	.L7\n	add	x4, x0, w1, sxtw 2\n	mov	w2, 1\n	mov	w3, 0\n	.p2align 3,,7\n.L5:\n	ldr	w1, [x0], 4\n	cmp	w1, 0\n	csneg	w1, w1, w1, ge\n	csneg	w2, w2, w2, ge\n	add	w3, w3, w1\n	csel	w2, w2, wzr, ne\n	cmp	x4, x0\n	bne	.L5\n	mul	w0, w3, w2\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w0, 0\n	ret\n.L6:\n	mov	w0, -32768\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	cbz	w1, .L6\n	ble	.L7\n	add	x4, x0, w1, sxtw 2\n	mov	w2, 1\n	mov	w3, 0\n	.p2align 3,,7\n.L5:\n	ldr	w1, [x0], 4\n	cmp	w1, 0\n	csneg	w1, w1, w1, ge\n	csneg	w2, w2, w2, ge\n	add	w3, w3, w1\n	csel	w2, w2, wzr, ne\n	cmp	x4, x0\n	bne	.L5\n	mul	w0, w3, w2\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w0, 0\n	ret\n.L6:\n	mov	w0, -32768\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem13", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	cmp	w1, 0\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	ble	.L5\n	adrp	x22, .LC0\n	add	x22, x22, :lo12:.LC0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -40\n	.cfi_offset 19, -48\n	mov	x19, x0\n	mov	w20, 0\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	add	x23, x0, w1, sxtw 3\n	.p2align 3,,7\n.L4:\n	ldr	x21, [x19], 8\n	mov	x0, x21\n	bl	strlen\n	cmp	w20, w0\n	csel	x22, x21, x22, lt\n	csel	w20, w0, w20, lt\n	cmp	x19, x23\n	bne	.L4\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	.cfi_restore 23\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 64\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	adrp	x22, .LC0\n	add	x22, x22, :lo12:.LC0\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	cmp	w1, 0\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	ble	.L5\n	adrp	x22, .LC0\n	add	x22, x22, :lo12:.LC0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -40\n	.cfi_offset 19, -48\n	mov	x19, x0\n	mov	w20, 0\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	add	x23, x0, w1, sxtw 3\n	.p2align 3,,7\n.L4:\n	ldr	x21, [x19], 8\n	mov	x0, x21\n	bl	strlen\n	cmp	w20, w0\n	csel	x22, x21, x22, lt\n	csel	w20, w0, w20, lt\n	cmp	x19, x23\n	bne	.L4\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	.cfi_restore 23\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 64\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	adrp	x22, .LC0\n	add	x22, x22, :lo12:.LC0\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem130", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	str	x21, [sp, 32]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 21, -16\n	mov	w21, w2\n	cmp	w1, 0\n	ble	.L2\n	sxtw	x10, w1\n	mov	x11, 0\n	.p2align 3,,7\n.L5:\n	ldr	x9, [x0, x11, lsl 3]\n	mov	w8, w11\n	mov	x4, 0\n	.p2align 3,,7\n.L4:\n	ldr	w7, [x9, x4, lsl 2]\n	cmp	w7, 1\n	csel	w5, w5, w4, ne\n	add	x4, x4, 1\n	csel	w6, w6, w8, ne\n	cmp	x4, x10\n	bne	.L4\n	add	x11, x11, 1\n	cmp	x11, x10\n	bne	.L5\n.L2:\n	mul	w19, w1, w1\n	cmp	w6, 0\n	ble	.L6\n	add	x2, x0, w6, sxtw 3\n	ldr	x2, [x2, -8]\n	ldr	w2, [x2, w5, sxtw 2]\n	cmp	w19, w2\n	csel	w19, w19, w2, le\n.L6:\n	sub	w1, w1, #1\n	cmp	w1, w6\n	ble	.L7\n	add	x2, x0, w6, sxtw 3\n	ldr	x2, [x2, 8]\n	ldr	w2, [x2, w5, sxtw 2]\n	cmp	w19, w2\n	csel	w19, w19, w2, le\n.L7:\n	cmp	w5, 0\n	ble	.L8\n	ldr	x4, [x0, w6, sxtw 3]\n	mov	x2, -4\n	add	x2, x2, w5, sxtw 2\n	ldr	w2, [x4, x2]\n	cmp	w19, w2\n	csel	w19, w19, w2, le\n.L8:\n	cmp	w1, w5\n	ble	.L9\n	ldr	x1, [x0, w6, sxtw 3]\n	sxtw	x0, w5\n	add	x0, x0, 1\n	ldr	w0, [x1, x0, lsl 2]\n	cmp	w19, w0\n	csel	w19, w19, w0, le\n.L9:\n	str	w21, [x3]\n	sbfiz	x0, x21, 2, 32\n	sxtw	x20, w21\n	bl	malloc\n	mov	x1, 0\n	mov	w3, 1\n	cmp	w21, 0\n	ble	.L1\n	.p2align 3,,7\n.L10:\n	tst	x1, 1\n	csel	w2, w19, w3, ne\n	str	w2, [x0, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x20, x1\n	bne	.L10\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	str	x21, [sp, 32]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 21, -16\n	mov	w21, w2\n	cmp	w1, 0\n	ble	.L2\n	sxtw	x10, w1\n	mov	x11, 0\n	.p2align 3,,7\n.L5:\n	ldr	x9, [x0, x11, lsl 3]\n	mov	w8, w11\n	mov	x4, 0\n	.p2align 3,,7\n.L4:\n	ldr	w7, [x9, x4, lsl 2]\n	cmp	w7, 1\n	csel	w5, w5, w4, ne\n	add	x4, x4, 1\n	csel	w6, w6, w8, ne\n	cmp	x4, x10\n	bne	.L4\n	add	x11, x11, 1\n	cmp	x11, x10\n	bne	.L5\n.L2:\n	mul	w19, w1, w1\n	cmp	w6, 0\n	ble	.L6\n	add	x2, x0, w6, sxtw 3\n	ldr	x2, [x2, -8]\n	ldr	w2, [x2, w5, sxtw 2]\n	cmp	w19, w2\n	csel	w19, w19, w2, le\n.L6:\n	sub	w1, w1, #1\n	cmp	w1, w6\n	ble	.L7\n	add	x2, x0, w6, sxtw 3\n	ldr	x2, [x2, 8]\n	ldr	w2, [x2, w5, sxtw 2]\n	cmp	w19, w2\n	csel	w19, w19, w2, le\n.L7:\n	cmp	w5, 0\n	ble	.L8\n	ldr	x4, [x0, w6, sxtw 3]\n	mov	x2, -4\n	add	x2, x2, w5, sxtw 2\n	ldr	w2, [x4, x2]\n	cmp	w19, w2\n	csel	w19, w19, w2, le\n.L8:\n	cmp	w1, w5\n	ble	.L9\n	ldr	x1, [x0, w6, sxtw 3]\n	sxtw	x0, w5\n	add	x0, x0, 1\n	ldr	w0, [x1, x0, lsl 2]\n	cmp	w19, w0\n	csel	w19, w19, w0, le\n.L9:\n	str	w21, [x3]\n	sbfiz	x0, x21, 2, 32\n	sxtw	x20, w21\n	bl	malloc\n	mov	x1, 0\n	mov	w3, 1\n	cmp	w21, 0\n	ble	.L1\n	.p2align 3,,7\n.L10:\n	tst	x1, 1\n	csel	w2, w19, w3, ne\n	str	w2, [x0, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x20, x1\n	bne	.L10\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem131", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	w19, w0\n	add	w0, w0, 1\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	mov	w1, 1\n	str	w1, [x0]\n	cbz	w19, .L1\n	mov	w1, 3\n	str	w1, [x0, 4]\n	cmp	w19, 1\n	ble	.L1\n	mov	x2, x0\n	mov	w1, 2\n	b	.L6\n	.p2align 2,,3\n.L10:\n	asr	w3, w4, 1\n	add	x2, x2, 4\n	add	w3, w3, 1\n	str	w3, [x2, 4]\n	cmp	w19, w4\n	beq	.L1\n.L6:\n	and	w3, w1, 1\n	mov	w4, w1\n	add	w1, w1, 1\n	cbz	w3, .L10\n	ldp	w5, w3, [x2]\n	add	x2, x2, 4\n	add	w3, w3, w5\n	add	w3, w3, 1\n	add	w3, w3, w1, asr 1\n	str	w3, [x2, 4]\n	cmp	w19, w4\n	bne	.L6\n.L1:\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	w19, w0\n	add	w0, w0, 1\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	mov	w1, 1\n	str	w1, [x0]\n	cbz	w19, .L1\n	mov	w1, 3\n	str	w1, [x0, 4]\n	cmp	w19, 1\n	ble	.L1\n	mov	x2, x0\n	mov	w1, 2\n	b	.L6\n	.p2align 2,,3\n.L10:\n	asr	w3, w4, 1\n	add	x2, x2, 4\n	add	w3, w3, 1\n	str	w3, [x2, 4]\n	cmp	w19, w4\n	beq	.L1\n.L6:\n	and	w3, w1, 1\n	mov	w4, w1\n	add	w1, w1, 1\n	cbz	w3, .L10\n	ldp	w5, w3, [x2]\n	add	x2, x2, 4\n	add	w3, w3, w5\n	add	w3, w3, 1\n	add	w3, w3, w1, asr 1\n	str	w3, [x2, 4]\n	cmp	w19, w4\n	bne	.L6\n.L1:\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem132", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, w0\n	cmp	w0, 0\n	ble	.L5\n	mov	w4, 52429\n	mov	w6, 0\n	mov	w0, 1\n	movk	w4, 0xcccc, lsl 16\n	b	.L4\n	.p2align 2,,3\n.L6:\n	mov	w2, w3\n.L4:\n	umull	x1, w2, w4\n	and	w5, w2, 1\n	lsr	x1, x1, 35\n	mov	x3, x1\n	add	w1, w1, w1, lsl 2\n	sub	w1, w2, w1, lsl 1\n	tbz	x2, 0, .L3\n	mul	w0, w0, w1\n	mov	w6, w5\n.L3:\n	cmp	w2, 9\n	bgt	.L6\n	cmp	w6, 0\n	csel	w0, w0, wzr, ne\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, w0\n	cmp	w0, 0\n	ble	.L5\n	mov	w4, 52429\n	mov	w6, 0\n	mov	w0, 1\n	movk	w4, 0xcccc, lsl 16\n	b	.L4\n	.p2align 2,,3\n.L6:\n	mov	w2, w3\n.L4:\n	umull	x1, w2, w4\n	and	w5, w2, 1\n	lsr	x1, x1, 35\n	mov	x3, x1\n	add	w1, w1, w1, lsl 2\n	sub	w1, w2, w1, lsl 1\n	tbz	x2, 0, .L3\n	mul	w0, w0, w1\n	mov	w6, w5\n.L3:\n	cmp	w2, 9\n	bgt	.L6\n	cmp	w6, 0\n	csel	w0, w0, wzr, ne\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem133", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	x19, x0\n	bl	strlen\n	add	x0, x19, x0\n	mov	x2, x19\n	mov	w3, 0\n	mov	w1, 0\n	b	.L2\n	.p2align 2,,3\n.L3:\n	cmp	w4, 93\n	bne	.L4\n	sub	w1, w1, #1\n	cmn	w1, #1\n	csel	w1, w1, wzr, ne\n.L4:\n	cmp	w3, w1\n	add	x2, x2, 1\n	csel	w3, w3, w1, ge\n	sub	w4, w3, #1\n	cmp	w4, w1\n	bgt	.L8\n.L2:\n	cmp	x2, x0\n	beq	.L11\n	ldrb	w4, [x2]\n	cmp	w4, 91\n	bne	.L3\n	add	w1, w1, 1\n	add	x2, x2, 1\n	cmp	w3, w1\n	csel	w3, w3, w1, ge\n	sub	w4, w3, #1\n	cmp	w4, w1\n	ble	.L2\n.L8:\n	ldr	x19, [sp, 16]\n	mov	w0, 1\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L11:\n	.cfi_restore_state\n	ldr	x19, [sp, 16]\n	mov	w0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	x19, x0\n	bl	strlen\n	add	x0, x19, x0\n	mov	x2, x19\n	mov	w3, 0\n	mov	w1, 0\n	b	.L2\n	.p2align 2,,3\n.L3:\n	cmp	w4, 93\n	bne	.L4\n	sub	w1, w1, #1\n	cmn	w1, #1\n	csel	w1, w1, wzr, ne\n.L4:\n	cmp	w3, w1\n	add	x2, x2, 1\n	csel	w3, w3, w1, ge\n	sub	w4, w3, #1\n	cmp	w4, w1\n	bgt	.L8\n.L2:\n	cmp	x2, x0\n	beq	.L11\n	ldrb	w4, [x2]\n	cmp	w4, 91\n	bne	.L3\n	add	w1, w1, 1\n	add	x2, x2, 1\n	cmp	w3, w1\n	csel	w3, w3, w1, ge\n	sub	w4, w3, #1\n	cmp	w4, w1\n	ble	.L2\n.L8:\n	ldr	x19, [sp, 16]\n	mov	w0, 1\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L11:\n	.cfi_restore_state\n	ldr	x19, [sp, 16]\n	mov	w0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem134", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L4\n	mov	x2, x0\n	mov	w0, 0\n	add	x3, x2, w1, sxtw 2\n	.p2align 3,,7\n.L3:\n	ldr	s0, [x2], 4\n	fcvtps	w1, s0\n	madd	w0, w1, w1, w0\n	cmp	x3, x2\n	bne	.L3\n	ret\n	.p2align 2,,3\n.L4:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L4\n	mov	x2, x0\n	mov	w0, 0\n	add	x3, x2, w1, sxtw 2\n	.p2align 3,,7\n.L3:\n	ldr	s0, [x2], 4\n	fcvtps	w1, s0\n	madd	w0, w1, w1, w0\n	cmp	x3, x2\n	bne	.L3\n	ret\n	.p2align 2,,3\n.L4:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem135", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	bl	strlen\n	mov	w21, w0\n	cbz	w0, .L1\n	add	x20, x20, w0, sxtw\n	bl	__ctype_b_loc\n	ldr	x0, [x0]\n	ldrb	w22, [x20, -1]\n	ubfiz	x22, x22, 1, 8\n	ldrh	w1, [x0, x22]\n	tbz	x1, 10, .L3\n	cmp	w21, 1\n	beq	.L1\n	ldrb	w1, [x20, -2]\n	ldrh	w21, [x0, x1, lsl 1]\n	eor	x21, x21, 1024\n	ubfx	x21, x21, 10, 1\n.L1:\n	ldp	x19, x20, [sp, 16]\n	mov	w0, w21\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L3:\n	.cfi_restore_state\n	mov	w21, 0\n	mov	w0, w21\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	bl	strlen\n	mov	w21, w0\n	cbz	w0, .L1\n	add	x20, x20, w0, sxtw\n	bl	__ctype_b_loc\n	ldr	x0, [x0]\n	ldrb	w22, [x20, -1]\n	ubfiz	x22, x22, 1, 8\n	ldrh	w1, [x0, x22]\n	tbz	x1, 10, .L3\n	cmp	w21, 1\n	beq	.L1\n	ldrb	w1, [x20, -2]\n	ldrh	w21, [x0, x1, lsl 1]\n	eor	x21, x21, 1024\n	ubfx	x21, x21, 10, 1\n.L1:\n	ldp	x19, x20, [sp, 16]\n	mov	w0, w21\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L3:\n	.cfi_restore_state\n	mov	w21, 0\n	mov	w0, w21\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem136", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	x5, x0\n	cmp	w1, 1\n	ble	.L5\n	ldr	w3, [x5]\n	mov	x2, 1\n	mov	w0, -1\n	.p2align 3,,7\n.L4:\n	mov	w4, w3\n	ldr	w3, [x5, x2, lsl 2]\n	cmp	w4, w3\n	csel	w0, w0, w2, le\n	add	x2, x2, 1\n	cmp	w1, w2\n	bgt	.L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, -1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	x5, x0\n	cmp	w1, 1\n	ble	.L5\n	ldr	w3, [x5]\n	mov	x2, 1\n	mov	w0, -1\n	.p2align 3,,7\n.L4:\n	mov	w4, w3\n	ldr	w3, [x5, x2, lsl 2]\n	cmp	w4, w3\n	csel	w0, w0, w2, le\n	add	x2, x2, 1\n	cmp	w1, w2\n	bgt	.L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, -1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem137", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w3, 0\n	cmp	w1, 0\n	ble	.L6\n	add	x4, x0, w1, sxtw 2\n	mov	w5, 0\n	b	.L5\n	.p2align 2,,3\n.L3:\n	beq	.L4\n	cmp	w3, w1\n	cbz	w3, .L8\n	csel	w3, w3, w1, le\n.L4:\n	add	x0, x0, 4\n	cmp	x0, x4\n	beq	.L2\n.L5:\n	ldr	w1, [x0]\n	cmp	w1, 0\n	bge	.L3\n	cmp	w5, w1\n	cbz	w5, .L7\n	add	x0, x0, 4\n	csel	w5, w5, w1, ge\n	cmp	x0, x4\n	bne	.L5\n.L2:\n	stp	w5, w3, [x2]\n	ret\n	.p2align 2,,3\n.L8:\n	mov	w3, w1\n	b	.L4\n	.p2align 2,,3\n.L7:\n	mov	w5, w1\n	b	.L4\n	.p2align 2,,3\n.L6:\n	mov	w5, 0\n	stp	w5, w3, [x2]\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w3, 0\n	cmp	w1, 0\n	ble	.L6\n	add	x4, x0, w1, sxtw 2\n	mov	w5, 0\n	b	.L5\n	.p2align 2,,3\n.L3:\n	beq	.L4\n	cmp	w3, w1\n	cbz	w3, .L8\n	csel	w3, w3, w1, le\n.L4:\n	add	x0, x0, 4\n	cmp	x0, x4\n	beq	.L2\n.L5:\n	ldr	w1, [x0]\n	cmp	w1, 0\n	bge	.L3\n	cmp	w5, w1\n	cbz	w5, .L7\n	add	x0, x0, 4\n	csel	w5, w5, w1, ge\n	cmp	x0, x4\n	bne	.L5\n.L2:\n	stp	w5, w3, [x2]\n	ret\n	.p2align 2,,3\n.L8:\n	mov	w3, w1\n	b	.L4\n	.p2align 2,,3\n.L7:\n	mov	w5, w1\n	b	.L4\n	.p2align 2,,3\n.L6:\n	mov	w5, 0\n	stp	w5, w3, [x2]\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem139", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w0, 7\n	cset	w1, gt\n	bic	w0, w1, w0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w0, 7\n	cset	w1, gt\n	bic	w0, w1, w0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem14", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, w0\n	cbz	w1, .L1\n	.p2align 3,,7\n.L3:\n	sdiv	w3, w2, w1\n	mov	w0, w1\n	msub	w1, w3, w1, w2\n	mov	w2, w0\n	cbnz	w1, .L3\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, w0\n	cbz	w1, .L1\n	.p2align 3,,7\n.L3:\n	sdiv	w3, w2, w1\n	mov	w0, w1\n	msub	w1, w3, w1, w2\n	mov	w2, w0\n	cbnz	w1, .L3\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem140", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w3, w0\n	cmp	w0, 0\n	ble	.L4\n	mov	x1, 1\n	mov	x0, x1\n	mov	x2, x1\n	.p2align 3,,7\n.L3:\n	mul	x2, x2, x1\n	add	x1, x1, 1\n	mul	x0, x0, x2\n	cmp	w3, w1\n	bge	.L3\n	ret\n	.p2align 2,,3\n.L4:\n	mov	x0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w3, w0\n	cmp	w0, 0\n	ble	.L4\n	mov	x1, 1\n	mov	x0, x1\n	mov	x2, x1\n	.p2align 3,,7\n.L3:\n	mul	x2, x2, x1\n	add	x1, x1, 1\n	mul	x0, x0, x2\n	cmp	w3, w1\n	bge	.L3\n	ret\n	.p2align 2,,3\n.L4:\n	mov	x0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem141", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	mov	x20, x0\n	mov	x0, x20\n	stp	x21, x22, [sp, 32]\n	mov	x19, 0\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	w21, 0\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x23, x1\n	mov	w22, 0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	bl	strlen\n	mov	x26, 0\n	mov	w25, 45\n	add	x1, x23, x26\n	mov	w24, 95\n	cmp	x0, x19\n	bls	.L15\n	.p2align 3,,7\n.L8:\n	ldrb	w2, [x20, x19]\n	cmp	w2, 32\n	beq	.L16\n	add	w0, w21, 1\n	cmp	w22, 1\n	beq	.L17\n	cmp	w22, 2\n	bne	.L7\n	strb	w24, [x1]\n	strb	w24, [x23, w0, sxtw]\n	add	w0, w21, 2\n	ldrb	w2, [x20, x19]\n.L6:\n	add	w21, w0, 1\n	add	x19, x19, 1\n	mov	w22, 0\n	strb	w2, [x23, w0, sxtw]\n	sxtw	x26, w21\n.L20:\n	mov	x0, x20\n	bl	strlen\n	add	x1, x23, x26\n	cmp	x0, x19\n	bhi	.L8\n.L15:\n	cmp	w22, 1\n	beq	.L18\n	cmp	w22, 2\n	beq	.L19\n	ble	.L10\n	add	w21, w21, 1\n	mov	w0, 45\n	strb	w0, [x23, x26]\n.L10:\n	strb	wzr, [x23, w21, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L16:\n	.cfi_restore_state\n	add	w22, w22, 1\n	add	x19, x19, 1\n	b	.L20\n	.p2align 2,,3\n.L17:\n	strb	w24, [x1]\n	ldrb	w2, [x20, x19]\n	b	.L6\n	.p2align 2,,3\n.L7:\n	ble	.L12\n	strb	w25, [x1]\n	ldrb	w2, [x20, x19]\n	b	.L6\n	.p2align 2,,3\n.L19:\n	add	w0, w21, 1\n	add	w21, w21, 2\n	mov	w1, 95\n	strb	w1, [x23, x26]\n	strb	w1, [x23, w0, sxtw]\n	strb	wzr, [x23, w21, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L18:\n	.cfi_restore_state\n	add	w21, w21, 1\n	mov	w0, 95\n	strb	w0, [x23, x26]\n	strb	wzr, [x23, w21, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L12:\n	.cfi_restore_state\n	mov	w0, w21\n	b	.L6\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	mov	x20, x0\n	mov	x0, x20\n	stp	x21, x22, [sp, 32]\n	mov	x19, 0\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	w21, 0\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x23, x1\n	mov	w22, 0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	bl	strlen\n	mov	x26, 0\n	mov	w25, 45\n	add	x1, x23, x26\n	mov	w24, 95\n	cmp	x0, x19\n	bls	.L15\n	.p2align 3,,7\n.L8:\n	ldrb	w2, [x20, x19]\n	cmp	w2, 32\n	beq	.L16\n	add	w0, w21, 1\n	cmp	w22, 1\n	beq	.L17\n	cmp	w22, 2\n	bne	.L7\n	strb	w24, [x1]\n	strb	w24, [x23, w0, sxtw]\n	add	w0, w21, 2\n	ldrb	w2, [x20, x19]\n.L6:\n	add	w21, w0, 1\n	add	x19, x19, 1\n	mov	w22, 0\n	strb	w2, [x23, w0, sxtw]\n	sxtw	x26, w21\n.L20:\n	mov	x0, x20\n	bl	strlen\n	add	x1, x23, x26\n	cmp	x0, x19\n	bhi	.L8\n.L15:\n	cmp	w22, 1\n	beq	.L18\n	cmp	w22, 2\n	beq	.L19\n	ble	.L10\n	add	w21, w21, 1\n	mov	w0, 45\n	strb	w0, [x23, x26]\n.L10:\n	strb	wzr, [x23, w21, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L16:\n	.cfi_restore_state\n	add	w22, w22, 1\n	add	x19, x19, 1\n	b	.L20\n	.p2align 2,,3\n.L17:\n	strb	w24, [x1]\n	ldrb	w2, [x20, x19]\n	b	.L6\n	.p2align 2,,3\n.L7:\n	ble	.L12\n	strb	w25, [x1]\n	ldrb	w2, [x20, x19]\n	b	.L6\n	.p2align 2,,3\n.L19:\n	add	w0, w21, 1\n	add	w21, w21, 2\n	mov	w1, 95\n	strb	w1, [x23, x26]\n	strb	w1, [x23, w0, sxtw]\n	strb	wzr, [x23, w21, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L18:\n	.cfi_restore_state\n	add	w21, w21, 1\n	mov	w0, 95\n	strb	w0, [x23, x26]\n	strb	wzr, [x23, w21, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L12:\n	.cfi_restore_state\n	mov	w0, w21\n	b	.L6\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem142", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"No\"\n	.align	3\n.LC1:\n	.string	\"Yes\"\n	.align	3\n.LC2:\n	.string	\".txt\"\n	.align	3\n.LC3:\n	.string	\".exe\"\n	.align	3\n.LC4:\n	.string	\".dll\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	bl	strlen\n	cmp	w0, 4\n	ble	.L7\n	mov	x20, x0\n	ldrb	w0, [x19]\n	adrp	x21, .LC0\n	add	x21, x21, :lo12:.LC0\n	sub	w1, w0, #65\n	sub	w0, w0, #91\n	and	w1, w1, 255\n	and	w0, w0, 255\n	cmp	w1, 57\n	ccmp	w0, 5, 0, ls\n	bhi	.L20\n.L1:\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x21\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L20:\n	.cfi_restore_state\n	sxtw	x22, w20\n	adrp	x1, .LC2\n	sub	x22, x22, #4\n	add	x1, x1, :lo12:.LC2\n	add	x22, x19, x22\n	mov	x0, x22\n	bl	strcmp\n	cbnz	w0, .L21\n.L3:\n	sub	w20, w20, #1\n	add	x0, x19, 1\n	mov	x1, x19\n	add	x20, x20, x0\n	mov	w3, 0\n	mov	w4, 0\n	b	.L6\n	.p2align 2,,3\n.L23:\n	cmp	w2, 46\n	add	x1, x1, 1\n	cinc	w3, w3, eq\n	cmp	x20, x1\n	beq	.L22\n.L6:\n	ldrb	w2, [x1]\n	sub	w0, w2, #48\n	and	w0, w0, 255\n	cmp	w0, 9\n	bhi	.L23\n	add	x1, x1, 1\n	add	w4, w4, 1\n	cmp	x20, x1\n	bne	.L6\n.L22:\n	cmp	w4, 3\n	adrp	x0, .LC1\n	ccmp	w3, 1, 0, le\n	add	x0, x0, :lo12:.LC1\n	adrp	x21, .LC0\n	add	x21, x21, :lo12:.LC0\n	csel	x21, x21, x0, ne\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x21\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L7:\n	.cfi_restore_state\n	adrp	x21, .LC0\n	add	x21, x21, :lo12:.LC0\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x21\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L21:\n	.cfi_restore_state\n	adrp	x1, .LC3\n	mov	x0, x22\n	add	x1, x1, :lo12:.LC3\n	bl	strcmp\n	cbz	w0, .L3\n	adrp	x1, .LC4\n	mov	x0, x22\n	add	x1, x1, :lo12:.LC4\n	bl	strcmp\n	cbz	w0, .L3\n	b	.L1\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"No\"\n	.align	3\n.LC1:\n	.string	\"Yes\"\n	.align	3\n.LC2:\n	.string	\".txt\"\n	.align	3\n.LC3:\n	.string	\".exe\"\n	.align	3\n.LC4:\n	.string	\".dll\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	bl	strlen\n	cmp	w0, 4\n	ble	.L7\n	mov	x20, x0\n	ldrb	w0, [x19]\n	adrp	x21, .LC0\n	add	x21, x21, :lo12:.LC0\n	sub	w1, w0, #65\n	sub	w0, w0, #91\n	and	w1, w1, 255\n	and	w0, w0, 255\n	cmp	w1, 57\n	ccmp	w0, 5, 0, ls\n	bhi	.L20\n.L1:\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x21\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L20:\n	.cfi_restore_state\n	sxtw	x22, w20\n	adrp	x1, .LC2\n	sub	x22, x22, #4\n	add	x1, x1, :lo12:.LC2\n	add	x22, x19, x22\n	mov	x0, x22\n	bl	strcmp\n	cbnz	w0, .L21\n.L3:\n	sub	w20, w20, #1\n	add	x0, x19, 1\n	mov	x1, x19\n	add	x20, x20, x0\n	mov	w3, 0\n	mov	w4, 0\n	b	.L6\n	.p2align 2,,3\n.L23:\n	cmp	w2, 46\n	add	x1, x1, 1\n	cinc	w3, w3, eq\n	cmp	x20, x1\n	beq	.L22\n.L6:\n	ldrb	w2, [x1]\n	sub	w0, w2, #48\n	and	w0, w0, 255\n	cmp	w0, 9\n	bhi	.L23\n	add	x1, x1, 1\n	add	w4, w4, 1\n	cmp	x20, x1\n	bne	.L6\n.L22:\n	cmp	w4, 3\n	adrp	x0, .LC1\n	ccmp	w3, 1, 0, le\n	add	x0, x0, :lo12:.LC1\n	adrp	x21, .LC0\n	add	x21, x21, :lo12:.LC0\n	csel	x21, x21, x0, ne\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x21\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L7:\n	.cfi_restore_state\n	adrp	x21, .LC0\n	add	x21, x21, :lo12:.LC0\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x21\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L21:\n	.cfi_restore_state\n	adrp	x1, .LC3\n	mov	x0, x22\n	add	x1, x1, :lo12:.LC3\n	bl	strcmp\n	cbz	w0, .L3\n	adrp	x1, .LC4\n	mov	x0, x22\n	add	x1, x1, :lo12:.LC4\n	bl	strcmp\n	cbz	w0, .L3\n	b	.L1\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem143", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	x4, x0\n	cmp	w1, 0\n	ble	.L7\n	mov	w6, 43691\n	sxtw	x3, w1\n	mov	w0, 0\n	mov	x1, 0\n	movk	w6, 0xaaaa, lsl 16\n	mov	w5, 1431655765\n	b	.L6\n	.p2align 2,,3\n.L10:\n	madd	w0, w2, w2, w0\n.L4:\n	add	x1, x1, 1\n	cmp	x1, x3\n	beq	.L1\n.L6:\n	mul	w2, w6, w1\n	cmp	w2, w5\n	ldr	w2, [x4, x1, lsl 2]\n	bls	.L10\n	tst	x1, 3\n	bne	.L5\n	mul	w7, w2, w2\n	add	x1, x1, 1\n	madd	w0, w7, w2, w0\n	cmp	x1, x3\n	bne	.L6\n.L1:\n	ret\n	.p2align 2,,3\n.L5:\n	add	w0, w0, w2\n	b	.L4\n	.p2align 2,,3\n.L7:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	x4, x0\n	cmp	w1, 0\n	ble	.L7\n	mov	w6, 43691\n	sxtw	x3, w1\n	mov	w0, 0\n	mov	x1, 0\n	movk	w6, 0xaaaa, lsl 16\n	mov	w5, 1431655765\n	b	.L6\n	.p2align 2,,3\n.L10:\n	madd	w0, w2, w2, w0\n.L4:\n	add	x1, x1, 1\n	cmp	x1, x3\n	beq	.L1\n.L6:\n	mul	w2, w6, w1\n	cmp	w2, w5\n	ldr	w2, [x4, x1, lsl 2]\n	bls	.L10\n	tst	x1, 3\n	bne	.L5\n	mul	w7, w2, w2\n	add	x1, x1, 1\n	madd	w0, w7, w2, w0\n	cmp	x1, x3\n	bne	.L6\n.L1:\n	ret\n	.p2align 2,,3\n.L5:\n	add	w0, w0, w2\n	b	.L4\n	.p2align 2,,3\n.L7:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem144", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	mov	x23, x1\n	ldrb	w2, [x0]\n	cbz	w2, .L2\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -40\n	.cfi_offset 19, -48\n	mov	w19, 0\n	mov	x20, 0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -24\n	.cfi_offset 21, -32\n	mov	x21, x0\n	mov	w22, 0\n	b	.L9\n	.p2align 2,,3\n.L31:\n	add	w19, w19, 1\n.L4:\n	add	x20, x20, 1\n	ldrb	w2, [x21, x20]\n	cbz	w2, .L30\n.L9:\n	cmp	w2, 32\n	bne	.L31\n	cmp	w19, 1\n	bgt	.L32\n.L17:\n	add	x20, x20, 1\n	mov	w19, 0\n	ldrb	w2, [x21, x20]\n	cbnz	w2, .L9\n.L30:\n	sxtw	x0, w22\n	add	x1, x23, x0\n	cmp	w19, 1\n	ble	.L28\n	cmp	w19, 3\n	ble	.L10\n	tbz	x19, 0, .L28\n	mov	w2, 2\n	b	.L11\n	.p2align 2,,3\n.L12:\n	sdiv	w3, w19, w2\n	msub	w3, w3, w2, w19\n	cbz	w3, .L28\n.L11:\n	add	w2, w2, 1\n	mul	w3, w2, w2\n	cmp	w3, w19\n	ble	.L12\n.L10:\n	cmp	w22, 0\n	ble	.L13\n	add	w22, w22, 1\n	mov	w1, 32\n	strb	w1, [x23, x0]\n	sxtw	x0, w22\n.L13:\n	sxtw	x2, w19\n	add	w19, w19, w22\n	sub	x20, x20, x2\n	add	x0, x23, x0\n	add	x1, x21, x20\n	bl	memcpy\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	add	x1, x23, w19, sxtw\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n.L2:\n	strb	wzr, [x1]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L32:\n	.cfi_def_cfa_offset 64\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	.cfi_offset 23, -16\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	cmp	w19, 3\n	ble	.L5\n	tbz	x19, 0, .L17\n	mov	w2, 2\n	b	.L6\n	.p2align 2,,3\n.L7:\n	sdiv	w3, w19, w2\n	msub	w3, w3, w2, w19\n	cbz	w3, .L17\n.L6:\n	add	w2, w2, 1\n	mul	w3, w2, w2\n	cmp	w3, w19\n	ble	.L7\n.L5:\n	cmp	w22, 0\n	ble	.L8\n	mov	w0, 32\n	strb	w0, [x23, w22, sxtw]\n	add	w22, w22, 1\n.L8:\n	sxtw	x2, w19\n	add	x0, x23, w22, sxtw\n	sub	x1, x20, x2\n	add	w22, w22, w19\n	add	x1, x21, x1\n	mov	w19, 0\n	bl	memcpy\n	b	.L4\n	.p2align 2,,3\n.L28:\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	strb	wzr, [x1]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	mov	x23, x1\n	ldrb	w2, [x0]\n	cbz	w2, .L2\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -40\n	.cfi_offset 19, -48\n	mov	w19, 0\n	mov	x20, 0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -24\n	.cfi_offset 21, -32\n	mov	x21, x0\n	mov	w22, 0\n	b	.L9\n	.p2align 2,,3\n.L31:\n	add	w19, w19, 1\n.L4:\n	add	x20, x20, 1\n	ldrb	w2, [x21, x20]\n	cbz	w2, .L30\n.L9:\n	cmp	w2, 32\n	bne	.L31\n	cmp	w19, 1\n	bgt	.L32\n.L17:\n	add	x20, x20, 1\n	mov	w19, 0\n	ldrb	w2, [x21, x20]\n	cbnz	w2, .L9\n.L30:\n	sxtw	x0, w22\n	add	x1, x23, x0\n	cmp	w19, 1\n	ble	.L28\n	cmp	w19, 3\n	ble	.L10\n	tbz	x19, 0, .L28\n	mov	w2, 2\n	b	.L11\n	.p2align 2,,3\n.L12:\n	sdiv	w3, w19, w2\n	msub	w3, w3, w2, w19\n	cbz	w3, .L28\n.L11:\n	add	w2, w2, 1\n	mul	w3, w2, w2\n	cmp	w3, w19\n	ble	.L12\n.L10:\n	cmp	w22, 0\n	ble	.L13\n	add	w22, w22, 1\n	mov	w1, 32\n	strb	w1, [x23, x0]\n	sxtw	x0, w22\n.L13:\n	sxtw	x2, w19\n	add	w19, w19, w22\n	sub	x20, x20, x2\n	add	x0, x23, x0\n	add	x1, x21, x20\n	bl	memcpy\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	add	x1, x23, w19, sxtw\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n.L2:\n	strb	wzr, [x1]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L32:\n	.cfi_def_cfa_offset 64\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	.cfi_offset 23, -16\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	cmp	w19, 3\n	ble	.L5\n	tbz	x19, 0, .L17\n	mov	w2, 2\n	b	.L6\n	.p2align 2,,3\n.L7:\n	sdiv	w3, w19, w2\n	msub	w3, w3, w2, w19\n	cbz	w3, .L17\n.L6:\n	add	w2, w2, 1\n	mul	w3, w2, w2\n	cmp	w3, w19\n	ble	.L7\n.L5:\n	cmp	w22, 0\n	ble	.L8\n	mov	w0, 32\n	strb	w0, [x23, w22, sxtw]\n	add	w22, w22, 1\n.L8:\n	sxtw	x2, w19\n	add	x0, x23, w22, sxtw\n	sub	x1, x20, x2\n	add	w22, w22, w19\n	add	x1, x21, x1\n	mov	w19, 0\n	bl	memcpy\n	b	.L4\n	.p2align 2,,3\n.L28:\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	strb	wzr, [x1]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem145", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -288]!\n	.cfi_def_cfa_offset 288\n	.cfi_offset 29, -288\n	.cfi_offset 30, -280\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -272\n	.cfi_offset 20, -264\n	mov	x20, x1\n	stp	x21, x22, [sp, 32]\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 21, -256\n	.cfi_offset 22, -248\n	.cfi_offset 23, -240\n	.cfi_offset 24, -232\n	mov	x23, x0\n	str	x25, [sp, 64]\n	.cfi_offset 25, -224\n	ldrb	w3, [x0]\n	cmp	w3, 47\n	beq	.L10\n	add	x21, sp, 80\n	sub	x4, x0, #1\n	mov	x2, 1\n	.p2align 3,,7\n.L3:\n	add	x1, x21, x2\n	mov	x0, x2\n	add	x2, x2, 1\n	strb	w3, [x1, -1]\n	ldrb	w3, [x4, x2]\n	cmp	w3, 47\n	bne	.L3\n	add	w19, w0, 1\n	mov	w3, w0\n	mov	w2, 10\n	mov	x0, x21\n	sxtw	x24, w19\n	mov	x1, 0\n	strb	wzr, [x21, w3, sxtw]\n	bl	strtol\n	mov	x22, x0\n	ldrb	w3, [x23, x24]\n	cbz	w3, .L11\n.L20:\n	sxtw	x0, w19\n	add	x19, sp, 184\n	sub	x0, x0, #1\n	mov	x2, 1\n	add	x1, x23, x0\n	.p2align 3,,7\n.L5:\n	add	x0, x19, x2\n	mov	x4, x2\n	add	x2, x2, 1\n	strb	w3, [x0, -1]\n	ldrb	w3, [x1, x2]\n	cbnz	w3, .L5\n.L4:\n	mov	x0, x19\n	mov	w2, 10\n	mov	x1, 0\n	strb	wzr, [x19, w4, sxtw]\n	bl	strtol\n	mov	x23, x0\n	ldrb	w3, [x20]\n	cmp	w3, 47\n	beq	.L12\n	sub	x4, x20, #1\n	mov	x2, 1\n	.p2align 3,,7\n.L7:\n	add	x0, x21, x2\n	mov	x1, x2\n	add	x2, x2, 1\n	strb	w3, [x0, -1]\n	ldrb	w3, [x4, x2]\n	cmp	w3, 47\n	bne	.L7\n	add	w24, w1, 1\n	mov	w3, w1\n	mov	x0, x21\n	mov	w2, 10\n	sxtw	x25, w24\n	mov	x1, 0\n	strb	wzr, [x21, w3, sxtw]\n	bl	strtol\n	mov	x21, x0\n	ldrb	w3, [x20, x25]\n	cbz	w3, .L13\n.L21:\n	sxtw	x24, w24\n	mov	x2, 1\n	sub	x24, x24, #1\n	add	x20, x20, x24\n	.p2align 3,,7\n.L9:\n	add	x1, x19, x2\n	mov	x4, x2\n	add	x2, x2, 1\n	strb	w3, [x1, -1]\n	ldrb	w3, [x20, x2]\n	cbnz	w3, .L9\n.L8:\n	mov	x0, x19\n	mov	w2, 10\n	mov	x1, 0\n	strb	wzr, [x19, w4, sxtw]\n	bl	strtol\n	mul	w23, w23, w0\n	mul	w1, w21, w22\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	sdiv	w0, w1, w23\n	ldr	x25, [sp, 64]\n	msub	w0, w0, w23, w1\n	ldp	x23, x24, [sp, 48]\n	cmp	w0, 0\n	cset	w0, eq\n	ldp	x29, x30, [sp], 288\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	.cfi_restore_state\n	add	x21, sp, 80\n	mov	w3, 0\n	mov	x24, 1\n	mov	x0, x21\n	mov	w2, 10\n	mov	x1, 0\n	strb	wzr, [x21, w3, sxtw]\n	bl	strtol\n	ldrb	w3, [x23, x24]\n	mov	w19, w24\n	mov	x22, x0\n	cbnz	w3, .L20\n	.p2align 3,,7\n.L11:\n	add	x19, sp, 184\n	mov	w4, 0\n	b	.L4\n	.p2align 2,,3\n.L12:\n	mov	w3, 0\n	mov	x25, 1\n	mov	x0, x21\n	mov	w2, 10\n	mov	x1, 0\n	strb	wzr, [x21, w3, sxtw]\n	bl	strtol\n	mov	w24, w25\n	ldrb	w3, [x20, x25]\n	mov	x21, x0\n	cbnz	w3, .L21\n	.p2align 3,,7\n.L13:\n	mov	w4, 0\n	b	.L8\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -288]!\n	.cfi_def_cfa_offset 288\n	.cfi_offset 29, -288\n	.cfi_offset 30, -280\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -272\n	.cfi_offset 20, -264\n	mov	x20, x1\n	stp	x21, x22, [sp, 32]\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 21, -256\n	.cfi_offset 22, -248\n	.cfi_offset 23, -240\n	.cfi_offset 24, -232\n	mov	x23, x0\n	str	x25, [sp, 64]\n	.cfi_offset 25, -224\n	ldrb	w3, [x0]\n	cmp	w3, 47\n	beq	.L10\n	add	x21, sp, 80\n	sub	x4, x0, #1\n	mov	x2, 1\n	.p2align 3,,7\n.L3:\n	add	x1, x21, x2\n	mov	x0, x2\n	add	x2, x2, 1\n	strb	w3, [x1, -1]\n	ldrb	w3, [x4, x2]\n	cmp	w3, 47\n	bne	.L3\n	add	w19, w0, 1\n	mov	w3, w0\n	mov	w2, 10\n	mov	x0, x21\n	sxtw	x24, w19\n	mov	x1, 0\n	strb	wzr, [x21, w3, sxtw]\n	bl	strtol\n	mov	x22, x0\n	ldrb	w3, [x23, x24]\n	cbz	w3, .L11\n.L20:\n	sxtw	x0, w19\n	add	x19, sp, 184\n	sub	x0, x0, #1\n	mov	x2, 1\n	add	x1, x23, x0\n	.p2align 3,,7\n.L5:\n	add	x0, x19, x2\n	mov	x4, x2\n	add	x2, x2, 1\n	strb	w3, [x0, -1]\n	ldrb	w3, [x1, x2]\n	cbnz	w3, .L5\n.L4:\n	mov	x0, x19\n	mov	w2, 10\n	mov	x1, 0\n	strb	wzr, [x19, w4, sxtw]\n	bl	strtol\n	mov	x23, x0\n	ldrb	w3, [x20]\n	cmp	w3, 47\n	beq	.L12\n	sub	x4, x20, #1\n	mov	x2, 1\n	.p2align 3,,7\n.L7:\n	add	x0, x21, x2\n	mov	x1, x2\n	add	x2, x2, 1\n	strb	w3, [x0, -1]\n	ldrb	w3, [x4, x2]\n	cmp	w3, 47\n	bne	.L7\n	add	w24, w1, 1\n	mov	w3, w1\n	mov	x0, x21\n	mov	w2, 10\n	sxtw	x25, w24\n	mov	x1, 0\n	strb	wzr, [x21, w3, sxtw]\n	bl	strtol\n	mov	x21, x0\n	ldrb	w3, [x20, x25]\n	cbz	w3, .L13\n.L21:\n	sxtw	x24, w24\n	mov	x2, 1\n	sub	x24, x24, #1\n	add	x20, x20, x24\n	.p2align 3,,7\n.L9:\n	add	x1, x19, x2\n	mov	x4, x2\n	add	x2, x2, 1\n	strb	w3, [x1, -1]\n	ldrb	w3, [x20, x2]\n	cbnz	w3, .L9\n.L8:\n	mov	x0, x19\n	mov	w2, 10\n	mov	x1, 0\n	strb	wzr, [x19, w4, sxtw]\n	bl	strtol\n	mul	w23, w23, w0\n	mul	w1, w21, w22\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	sdiv	w0, w1, w23\n	ldr	x25, [sp, 64]\n	msub	w0, w0, w23, w1\n	ldp	x23, x24, [sp, 48]\n	cmp	w0, 0\n	cset	w0, eq\n	ldp	x29, x30, [sp], 288\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	.cfi_restore_state\n	add	x21, sp, 80\n	mov	w3, 0\n	mov	x24, 1\n	mov	x0, x21\n	mov	w2, 10\n	mov	x1, 0\n	strb	wzr, [x21, w3, sxtw]\n	bl	strtol\n	ldrb	w3, [x23, x24]\n	mov	w19, w24\n	mov	x22, x0\n	cbnz	w3, .L20\n	.p2align 3,,7\n.L11:\n	add	x19, sp, 184\n	mov	w4, 0\n	b	.L4\n	.p2align 2,,3\n.L12:\n	mov	w3, 0\n	mov	x25, 1\n	mov	x0, x21\n	mov	w2, 10\n	mov	x1, 0\n	strb	wzr, [x21, w3, sxtw]\n	bl	strtol\n	mov	w24, w25\n	ldrb	w3, [x20, x25]\n	mov	x21, x0\n	cbnz	w3, .L21\n	.p2align 3,,7\n.L13:\n	mov	w4, 0\n	b	.L8\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem146", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"%d\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	sbfiz	x21, x1, 2, 32\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	mov	w19, w1\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x23, x0\n	mov	x0, x21\n	bl	malloc\n	mov	x22, x0\n	cmp	w19, 0\n	ble	.L7\n	adrp	x20, .LC0\n	add	x20, x20, :lo12:.LC0\n	mov	x24, 0\n	.p2align 3,,7\n.L2:\n	ldr	w2, [x23, x24]\n	mov	x1, x20\n	add	x0, sp, 64\n	cmp	w2, 0\n	csneg	w2, w2, w2, ge\n	bl	sprintf\n	add	x0, sp, 64\n	bl	strlen\n	cmp	x0, 1\n	bls	.L12\n	sub	w1, w0, #2\n	add	x0, sp, 65\n	add	x3, sp, 64\n	add	x1, x1, x0\n	mov	w4, 0\n	.p2align 3,,7\n.L4:\n	ldrb	w2, [x3, 1]!\n	sub	w2, w2, #48\n	add	w4, w4, w2\n	cmp	x3, x1\n	bne	.L4\n.L3:\n	ldrb	w0, [sp, 64]\n	ldr	w2, [x23, x24]\n	sub	w0, w0, #48\n	add	w1, w4, w0\n	cmp	w2, 0\n	sub	w4, w4, w0\n	csel	w4, w4, w1, le\n	str	w4, [x22, x24]\n	add	x24, x24, 4\n	cmp	x21, x24\n	bne	.L2\n	cmp	w19, 1\n	beq	.L7\n	sub	w0, w19, #2\n	add	x1, x22, 4\n	add	x0, x0, 1\n	mov	w5, 0\n	lsl	x0, x0, 2\n	.p2align 3,,7\n.L10:\n	mov	x2, 0\n	.p2align 3,,7\n.L9:\n	ldr	w4, [x22, x2]\n	ldr	w3, [x1, x2]\n	cmp	w4, w3\n	ble	.L8\n	ldr	d0, [x23, x2]\n	str	w4, [x1, x2]\n	str	w3, [x22, x2]\n	rev64	v0.2s, v0.2s\n	str	d0, [x23, x2]\n.L8:\n	add	x2, x2, 4\n	cmp	x0, x2\n	bne	.L9\n	add	w5, w5, 1\n	cmp	w19, w5\n	bne	.L10\n.L7:\n	mov	x0, x22\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x23\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L12:\n	.cfi_restore_state\n	mov	w4, 0\n	b	.L3\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"%d\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	sbfiz	x21, x1, 2, 32\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	mov	w19, w1\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x23, x0\n	mov	x0, x21\n	bl	malloc\n	mov	x22, x0\n	cmp	w19, 0\n	ble	.L7\n	adrp	x20, .LC0\n	add	x20, x20, :lo12:.LC0\n	mov	x24, 0\n	.p2align 3,,7\n.L2:\n	ldr	w2, [x23, x24]\n	mov	x1, x20\n	add	x0, sp, 64\n	cmp	w2, 0\n	csneg	w2, w2, w2, ge\n	bl	sprintf\n	add	x0, sp, 64\n	bl	strlen\n	cmp	x0, 1\n	bls	.L12\n	sub	w1, w0, #2\n	add	x0, sp, 65\n	add	x3, sp, 64\n	add	x1, x1, x0\n	mov	w4, 0\n	.p2align 3,,7\n.L4:\n	ldrb	w2, [x3, 1]!\n	sub	w2, w2, #48\n	add	w4, w4, w2\n	cmp	x3, x1\n	bne	.L4\n.L3:\n	ldrb	w0, [sp, 64]\n	ldr	w2, [x23, x24]\n	sub	w0, w0, #48\n	add	w1, w4, w0\n	cmp	w2, 0\n	sub	w4, w4, w0\n	csel	w4, w4, w1, le\n	str	w4, [x22, x24]\n	add	x24, x24, 4\n	cmp	x21, x24\n	bne	.L2\n	cmp	w19, 1\n	beq	.L7\n	sub	w0, w19, #2\n	add	x1, x22, 4\n	add	x0, x0, 1\n	mov	w5, 0\n	lsl	x0, x0, 2\n	.p2align 3,,7\n.L10:\n	mov	x2, 0\n	.p2align 3,,7\n.L9:\n	ldr	w4, [x22, x2]\n	ldr	w3, [x1, x2]\n	cmp	w4, w3\n	ble	.L8\n	ldr	d0, [x23, x2]\n	str	w4, [x1, x2]\n	str	w3, [x22, x2]\n	rev64	v0.2s, v0.2s\n	str	d0, [x23, x2]\n.L8:\n	add	x2, x2, 4\n	cmp	x0, x2\n	bne	.L9\n	add	w5, w5, 1\n	cmp	w19, w5\n	bne	.L10\n.L7:\n	mov	x0, x22\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x23\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L12:\n	.cfi_restore_state\n	mov	w4, 0\n	b	.L3\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem147", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L6\n	mov	x2, x0\n	mov	w6, 52429\n	add	x7, x2, w1, sxtw 2\n	mov	w0, 0\n	movk	w6, 0xcccc, lsl 16\n	b	.L5\n	.p2align 2,,3\n.L3:\n	add	x2, x2, 4\n	cmp	x2, x7\n	beq	.L1\n.L5:\n	ldr	w5, [x2]\n	cmp	w5, 10\n	ble	.L3\n	mov	w1, w5\n	.p2align 3,,7\n.L4:\n	umull	x4, w1, w6\n	mov	w3, w1\n	lsr	x1, x4, 35\n	cmp	w3, 99\n	bgt	.L4\n	tbz	x1, 0, .L3\n	and	w5, w5, 1\n	add	x2, x2, 4\n	add	w0, w0, w5\n	cmp	x2, x7\n	bne	.L5\n.L1:\n	ret\n.L6:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L6\n	mov	x2, x0\n	mov	w6, 52429\n	add	x7, x2, w1, sxtw 2\n	mov	w0, 0\n	movk	w6, 0xcccc, lsl 16\n	b	.L5\n	.p2align 2,,3\n.L3:\n	add	x2, x2, 4\n	cmp	x2, x7\n	beq	.L1\n.L5:\n	ldr	w5, [x2]\n	cmp	w5, 10\n	ble	.L3\n	mov	w1, w5\n	.p2align 3,,7\n.L4:\n	umull	x4, w1, w6\n	mov	w3, w1\n	lsr	x1, x4, 35\n	cmp	w3, 99\n	bgt	.L4\n	tbz	x1, 0, .L3\n	and	w5, w5, 1\n	add	x2, x2, 4\n	add	w0, w0, w5\n	cmp	x2, x7\n	bne	.L5\n.L1:\n	ret\n.L6:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem148", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	sxtw	x19, w0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	add	w22, w19, 1\n	sbfiz	x0, x19, 2, 32\n	sbfiz	x22, x22, 3, 32\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	bl	malloc\n	mov	x20, x0\n	mov	x0, x22\n	bl	malloc\n	mov	x21, x19\n	mov	x23, x0\n	mov	x0, x22\n	bl	malloc\n	mov	x24, x0\n	tbnz	w19, #31, .L2\n	str	x25, [sp, 64]\n	.cfi_offset 25, -16\n	mov	x25, 0\n	.p2align 3,,7\n.L3:\n	mov	x1, 4\n	mov	x0, 3\n	bl	calloc\n	mov	x2, x0\n	str	x2, [x23, x25, lsl 3]\n	mov	x1, 4\n	mov	x0, 3\n	bl	calloc\n	str	x0, [x24, x25, lsl 3]\n	cmp	x25, x19\n	add	x25, x25, 1\n	bne	.L3\n	ldr	x1, [x23]\n	movi	v0.2s, 0\n	ldr	x0, [x24]\n	str	wzr, [x1, 8]\n	str	d0, [x1]\n	str	wzr, [x0, 8]\n	str	d0, [x0]\n	cbz	w21, .L31\n	mov	w7, 43691\n	mov	x3, 1\n	mov	x2, 0\n	movk	w7, 0xaaaa, lsl 16\n	.p2align 3,,7\n.L5:\n	mul	w4, w2, w3\n	ldr	x5, [x23, x2, lsl 3]\n	add	w4, w4, 1\n	ldr	x0, [x23, x3, lsl 3]\n	add	x3, x3, 1\n	umull	x1, w4, w7\n	ldr	w6, [x5]\n	str	w6, [x0]\n	lsr	x1, x1, 33\n	ldr	w6, [x5, 4]\n	add	w1, w1, w1, lsl 1\n	str	w6, [x0, 4]\n	sub	w1, w4, w1\n	str	w1, [x20, x2, lsl 2]\n	ldr	w4, [x5, 8]\n	add	x2, x2, 1\n	sxtw	x1, w1\n	str	w4, [x0, 8]\n	ldr	w4, [x0, x1, lsl 2]\n	add	w4, w4, 1\n	str	w4, [x0, x1, lsl 2]\n	cmp	w21, w3\n	bge	.L5\n.L31:\n	ldr	x25, [sp, 64]\n	.cfi_restore 25\n.L17:\n	movi	v1.2s, 0\n	mov	w9, 21846\n	uxtw	x11, w21\n	add	x10, x24, 8\n	mov	w12, 2\n	movk	w9, 0x5555, lsl 16\n.L6:\n	cmp	w21, 0\n	ble	.L15\n	mov	x5, 0\n	.p2align 3,,7\n.L8:\n	ldr	x0, [x24, x5, lsl 3]\n	mov	x3, 0\n	ldr	x4, [x10, x5, lsl 3]\n	ldr	w1, [x0]\n	ldr	x7, [x23, x5, lsl 3]\n	str	w1, [x4]\n	ldr	w8, [x20, x5, lsl 2]\n	ldr	w1, [x0, 4]\n	str	w1, [x4, 4]\n	ldr	w0, [x0, 8]\n	str	w0, [x4, 8]\n.L7:\n	add	w1, w8, w3\n	ldr	w6, [x7, x3, lsl 2]\n	add	x3, x3, 1\n	smull	x2, w1, w9\n	lsr	x2, x2, 32\n	sub	w2, w2, w1, asr 31\n	add	w2, w2, w2, lsl 1\n	sub	w1, w1, w2\n	sxtw	x1, w1\n	ldr	w2, [x4, x1, lsl 2]\n	add	w2, w2, w6\n	str	w2, [x4, x1, lsl 2]\n	cmp	x3, 3\n	bne	.L7\n	add	x5, x5, 1\n	cmp	x11, x5\n	bne	.L8\n.L9:\n	mov	x1, 0\n	.p2align 3,,7\n.L11:\n	ldr	x2, [x24, x1, lsl 3]\n	cmp	x1, x19\n	ldr	x3, [x23, x1, lsl 3]\n	add	x1, x1, 1\n	ldr	d0, [x2]\n	ldr	w4, [x2, 8]\n	str	w4, [x3, 8]\n	str	wzr, [x2, 8]\n	str	d1, [x2]\n	str	d0, [x3]\n	bne	.L11\n	cmp	w12, 1\n	beq	.L14\n	mov	w12, 1\n	b	.L6\n.L14:\n	add	x22, x23, x22\n	mov	x21, 0\n	ldr	x0, [x22, -8]\n	ldr	w22, [x0]\n	.p2align 3,,7\n.L16:\n	ldr	x0, [x23, x21, lsl 3]\n	bl	free\n	ldr	x0, [x24, x21, lsl 3]\n	bl	free\n	cmp	x21, x19\n	add	x21, x21, 1\n	bne	.L16\n.L13:\n	mov	x0, x23\n	bl	free\n	mov	x0, x24\n	bl	free\n	mov	x0, x20\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	w0, w22\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L2:\n	.cfi_restore_state\n	ldr	x1, [x23]\n	movi	v0.2s, 0\n	ldr	x0, [x0]\n	str	wzr, [x1, 8]\n	str	d0, [x1]\n	str	d0, [x0]\n	str	wzr, [x0, 8]\n	b	.L17\n.L15:\n	beq	.L9\n	add	x22, x23, x22\n	ldr	x0, [x22, -8]\n	ldr	w22, [x0]\n	b	.L13\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	sxtw	x19, w0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	add	w22, w19, 1\n	sbfiz	x0, x19, 2, 32\n	sbfiz	x22, x22, 3, 32\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	bl	malloc\n	mov	x20, x0\n	mov	x0, x22\n	bl	malloc\n	mov	x21, x19\n	mov	x23, x0\n	mov	x0, x22\n	bl	malloc\n	mov	x24, x0\n	tbnz	w19, #31, .L2\n	str	x25, [sp, 64]\n	.cfi_offset 25, -16\n	mov	x25, 0\n	.p2align 3,,7\n.L3:\n	mov	x1, 4\n	mov	x0, 3\n	bl	calloc\n	mov	x2, x0\n	str	x2, [x23, x25, lsl 3]\n	mov	x1, 4\n	mov	x0, 3\n	bl	calloc\n	str	x0, [x24, x25, lsl 3]\n	cmp	x25, x19\n	add	x25, x25, 1\n	bne	.L3\n	ldr	x1, [x23]\n	movi	v0.2s, 0\n	ldr	x0, [x24]\n	str	wzr, [x1, 8]\n	str	d0, [x1]\n	str	wzr, [x0, 8]\n	str	d0, [x0]\n	cbz	w21, .L31\n	mov	w7, 43691\n	mov	x3, 1\n	mov	x2, 0\n	movk	w7, 0xaaaa, lsl 16\n	.p2align 3,,7\n.L5:\n	mul	w4, w2, w3\n	ldr	x5, [x23, x2, lsl 3]\n	add	w4, w4, 1\n	ldr	x0, [x23, x3, lsl 3]\n	add	x3, x3, 1\n	umull	x1, w4, w7\n	ldr	w6, [x5]\n	str	w6, [x0]\n	lsr	x1, x1, 33\n	ldr	w6, [x5, 4]\n	add	w1, w1, w1, lsl 1\n	str	w6, [x0, 4]\n	sub	w1, w4, w1\n	str	w1, [x20, x2, lsl 2]\n	ldr	w4, [x5, 8]\n	add	x2, x2, 1\n	sxtw	x1, w1\n	str	w4, [x0, 8]\n	ldr	w4, [x0, x1, lsl 2]\n	add	w4, w4, 1\n	str	w4, [x0, x1, lsl 2]\n	cmp	w21, w3\n	bge	.L5\n.L31:\n	ldr	x25, [sp, 64]\n	.cfi_restore 25\n.L17:\n	movi	v1.2s, 0\n	mov	w9, 21846\n	uxtw	x11, w21\n	add	x10, x24, 8\n	mov	w12, 2\n	movk	w9, 0x5555, lsl 16\n.L6:\n	cmp	w21, 0\n	ble	.L15\n	mov	x5, 0\n	.p2align 3,,7\n.L8:\n	ldr	x0, [x24, x5, lsl 3]\n	mov	x3, 0\n	ldr	x4, [x10, x5, lsl 3]\n	ldr	w1, [x0]\n	ldr	x7, [x23, x5, lsl 3]\n	str	w1, [x4]\n	ldr	w8, [x20, x5, lsl 2]\n	ldr	w1, [x0, 4]\n	str	w1, [x4, 4]\n	ldr	w0, [x0, 8]\n	str	w0, [x4, 8]\n.L7:\n	add	w1, w8, w3\n	ldr	w6, [x7, x3, lsl 2]\n	add	x3, x3, 1\n	smull	x2, w1, w9\n	lsr	x2, x2, 32\n	sub	w2, w2, w1, asr 31\n	add	w2, w2, w2, lsl 1\n	sub	w1, w1, w2\n	sxtw	x1, w1\n	ldr	w2, [x4, x1, lsl 2]\n	add	w2, w2, w6\n	str	w2, [x4, x1, lsl 2]\n	cmp	x3, 3\n	bne	.L7\n	add	x5, x5, 1\n	cmp	x11, x5\n	bne	.L8\n.L9:\n	mov	x1, 0\n	.p2align 3,,7\n.L11:\n	ldr	x2, [x24, x1, lsl 3]\n	cmp	x1, x19\n	ldr	x3, [x23, x1, lsl 3]\n	add	x1, x1, 1\n	ldr	d0, [x2]\n	ldr	w4, [x2, 8]\n	str	w4, [x3, 8]\n	str	wzr, [x2, 8]\n	str	d1, [x2]\n	str	d0, [x3]\n	bne	.L11\n	cmp	w12, 1\n	beq	.L14\n	mov	w12, 1\n	b	.L6\n.L14:\n	add	x22, x23, x22\n	mov	x21, 0\n	ldr	x0, [x22, -8]\n	ldr	w22, [x0]\n	.p2align 3,,7\n.L16:\n	ldr	x0, [x23, x21, lsl 3]\n	bl	free\n	ldr	x0, [x24, x21, lsl 3]\n	bl	free\n	cmp	x21, x19\n	add	x21, x21, 1\n	bne	.L16\n.L13:\n	mov	x0, x23\n	bl	free\n	mov	x0, x24\n	bl	free\n	mov	x0, x20\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	w0, w22\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L2:\n	.cfi_restore_state\n	ldr	x1, [x23]\n	movi	v0.2s, 0\n	ldr	x0, [x0]\n	str	wzr, [x1, 8]\n	str	d0, [x1]\n	str	d0, [x0]\n	str	wzr, [x0, 8]\n	b	.L17\n.L15:\n	beq	.L9\n	add	x22, x23, x22\n	ldr	x0, [x22, -8]\n	ldr	w22, [x0]\n	b	.L13\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem149", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	adrp	x3, .LANCHOR0\n	add	x3, x3, :lo12:.LANCHOR0\n	stp	x29, x30, [sp, -144]!\n	.cfi_def_cfa_offset 144\n	.cfi_offset 29, -144\n	.cfi_offset 30, -136\n	mov	x29, sp\n	ldp	q2, q3, [x3]\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -128\n	.cfi_offset 20, -120\n	mov	w19, 0\n	ldp	q0, q1, [x3, 32]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -112\n	.cfi_offset 22, -104\n	mov	w22, -1\n	mov	w20, w22\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -96\n	.cfi_offset 24, -88\n	mov	x24, x1\n	add	x23, sp, 80\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -80\n	.cfi_offset 26, -72\n	mov	x25, x0\n	mov	x26, x2\n	stp	q2, q3, [sp, 80]\n	stp	q0, q1, [sp, 112]\n	.p2align 3,,7\n.L4:\n	mov	x1, x25\n	ldr	x21, [x23], 8\n	mov	x0, x21\n	bl	strcmp\n	cmp	w0, 0\n	mov	x1, x24\n	csel	w20, w20, w19, ne\n	mov	x0, x21\n	bl	strcmp\n	cmp	w0, 0\n	csel	w22, w22, w19, ne\n	add	w19, w19, 1\n	cmp	w19, 8\n	bne	.L4\n	cmp	w20, w22\n	ccmn	w22, #1, 4, ne\n	ccmn	w20, #1, 4, ne\n	beq	.L8\n	cmp	w20, w22\n	csel	w21, w22, w20, gt\n	csel	w20, w20, w22, gt\n	sub	w0, w20, w21\n	sub	w0, w0, #1\n	str	w0, [x26]\n	cmp	w0, 0\n	ble	.L8\n	sbfiz	x0, x0, 3, 32\n	bl	malloc\n	add	w1, w21, 1\n	mov	x19, x0\n	cmp	w20, w1\n	ble	.L1\n	sub	w20, w20, #2\n	add	x2, sp, 80\n	sub	w20, w20, w21\n	add	x1, x2, w1, sxtw 3\n	add	x2, x20, 1\n	lsl	x2, x2, 3\n	bl	memcpy\n.L1:\n	ldp	x21, x22, [sp, 32]\n	mov	x0, x19\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 144\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L8:\n	.cfi_restore_state\n	str	wzr, [x26]\n	mov	x19, 0\n	ldp	x21, x22, [sp, 32]\n	mov	x0, x19\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 144\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"Mercury\"\n	.align	3\n.LC1:\n	.string	\"Venus\"\n	.align	3\n.LC2:\n	.string	\"Earth\"\n	.align	3\n.LC3:\n	.string	\"Mars\"\n	.align	3\n.LC4:\n	.string	\"Jupiter\"\n	.align	3\n.LC5:\n	.string	\"Saturn\"\n	.align	3\n.LC6:\n	.string	\"Uranus\"\n	.align	3\n.LC7:\n	.string	\"Neptune\"\n	.section	.rodata\n	.align	3\n	.set	.LANCHOR0,. + 0\n.LC9:\n	.xword	.LC0\n	.xword	.LC1\n	.xword	.LC2\n	.xword	.LC3\n	.xword	.LC4\n	.xword	.LC5\n	.xword	.LC6\n	.xword	.LC7\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	adrp	x3, .LANCHOR0\n	add	x3, x3, :lo12:.LANCHOR0\n	stp	x29, x30, [sp, -144]!\n	.cfi_def_cfa_offset 144\n	.cfi_offset 29, -144\n	.cfi_offset 30, -136\n	mov	x29, sp\n	ldp	q2, q3, [x3]\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -128\n	.cfi_offset 20, -120\n	mov	w19, 0\n	ldp	q0, q1, [x3, 32]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -112\n	.cfi_offset 22, -104\n	mov	w22, -1\n	mov	w20, w22\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -96\n	.cfi_offset 24, -88\n	mov	x24, x1\n	add	x23, sp, 80\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -80\n	.cfi_offset 26, -72\n	mov	x25, x0\n	mov	x26, x2\n	stp	q2, q3, [sp, 80]\n	stp	q0, q1, [sp, 112]\n	.p2align 3,,7\n.L4:\n	mov	x1, x25\n	ldr	x21, [x23], 8\n	mov	x0, x21\n	bl	strcmp\n	cmp	w0, 0\n	mov	x1, x24\n	csel	w20, w20, w19, ne\n	mov	x0, x21\n	bl	strcmp\n	cmp	w0, 0\n	csel	w22, w22, w19, ne\n	add	w19, w19, 1\n	cmp	w19, 8\n	bne	.L4\n	cmp	w20, w22\n	ccmn	w22, #1, 4, ne\n	ccmn	w20, #1, 4, ne\n	beq	.L8\n	cmp	w20, w22\n	csel	w21, w22, w20, gt\n	csel	w20, w20, w22, gt\n	sub	w0, w20, w21\n	sub	w0, w0, #1\n	str	w0, [x26]\n	cmp	w0, 0\n	ble	.L8\n	sbfiz	x0, x0, 3, 32\n	bl	malloc\n	add	w1, w21, 1\n	mov	x19, x0\n	cmp	w20, w1\n	ble	.L1\n	sub	w20, w20, #2\n	add	x2, sp, 80\n	sub	w20, w20, w21\n	add	x1, x2, w1, sxtw 3\n	add	x2, x20, 1\n	lsl	x2, x2, 3\n	bl	memcpy\n.L1:\n	ldp	x21, x22, [sp, 32]\n	mov	x0, x19\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 144\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L8:\n	.cfi_restore_state\n	str	wzr, [x26]\n	mov	x19, 0\n	ldp	x21, x22, [sp, 32]\n	mov	x0, x19\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 144\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"Mercury\"\n	.align	3\n.LC1:\n	.string	\"Venus\"\n	.align	3\n.LC2:\n	.string	\"Earth\"\n	.align	3\n.LC3:\n	.string	\"Mars\"\n	.align	3\n.LC4:\n	.string	\"Jupiter\"\n	.align	3\n.LC5:\n	.string	\"Saturn\"\n	.align	3\n.LC6:\n	.string	\"Uranus\"\n	.align	3\n.LC7:\n	.string	\"Neptune\"\n	.section	.rodata\n	.align	3\n	.set	.LANCHOR0,. + 0\n.LC9:\n	.xword	.LC0\n	.xword	.LC1\n	.xword	.LC2\n	.xword	.LC3\n	.xword	.LC4\n	.xword	.LC5\n	.xword	.LC6\n	.xword	.LC7\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem15", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x21, x22, [sp, 32]\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x23, x0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	mov	x26, x1\n	bl	strlen\n	mov	x25, x0\n	mov	w24, w0\n	sbfiz	x0, x0, 3, 32\n	bl	malloc\n	add	w1, w25, 1\n	mov	x22, x0\n	sxtw	x0, w1\n	bl	malloc\n	strb	wzr, [x0]\n	mov	x19, x0\n	cmp	w25, 0\n	ble	.L2\n	mov	x21, 0\n	.p2align 3,,7\n.L3:\n	mov	x0, x19\n	bl	strlen\n	mov	x20, x0\n	mov	x0, x19\n	add	x1, x20, 2\n	bl	realloc\n	add	x1, x0, x20\n	ldrb	w2, [x23, x21]\n	strb	w2, [x0, x20]\n	mov	x19, x0\n	strb	wzr, [x1, 1]\n	bl	strlen\n	add	x20, x0, 1\n	mov	x0, x20\n	bl	malloc\n	str	x0, [x22, x21, lsl 3]\n	mov	x2, x20\n	mov	x1, x19\n	add	x21, x21, 1\n	bl	memcpy\n	cmp	w24, w21\n	bgt	.L3\n.L2:\n	mov	x0, x19\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	str	w25, [x26]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x21, x22, [sp, 32]\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x23, x0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	mov	x26, x1\n	bl	strlen\n	mov	x25, x0\n	mov	w24, w0\n	sbfiz	x0, x0, 3, 32\n	bl	malloc\n	add	w1, w25, 1\n	mov	x22, x0\n	sxtw	x0, w1\n	bl	malloc\n	strb	wzr, [x0]\n	mov	x19, x0\n	cmp	w25, 0\n	ble	.L2\n	mov	x21, 0\n	.p2align 3,,7\n.L3:\n	mov	x0, x19\n	bl	strlen\n	mov	x20, x0\n	mov	x0, x19\n	add	x1, x20, 2\n	bl	realloc\n	add	x1, x0, x20\n	ldrb	w2, [x23, x21]\n	strb	w2, [x0, x20]\n	mov	x19, x0\n	strb	wzr, [x1, 1]\n	bl	strlen\n	add	x20, x0, 1\n	mov	x0, x20\n	bl	malloc\n	str	x0, [x22, x21, lsl 3]\n	mov	x2, x20\n	mov	x1, x19\n	add	x21, x21, 1\n	bl	memcpy\n	cmp	w24, w21\n	bgt	.L3\n.L2:\n	mov	x0, x19\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	str	w25, [x26]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem150", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -96]!\n	.cfi_def_cfa_offset 96\n	.cfi_offset 29, -96\n	.cfi_offset 30, -88\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 19, -80\n	.cfi_offset 20, -72\n	.cfi_offset 23, -48\n	.cfi_offset 24, -40\n	mov	x24, x0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -32\n	.cfi_offset 26, -24\n	mov	x25, x2\n	stp	x27, x28, [sp, 80]\n	str	wzr, [x2]\n	cmp	w1, 0\n	.cfi_offset 27, -16\n	.cfi_offset 28, -8\n	ble	.L16\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -56\n	.cfi_offset 21, -64\n	sxtw	x21, w1\n	mov	x19, 0\n	mov	w23, 0\n	.p2align 3,,7\n.L4:\n	ldr	x20, [x24, x19, lsl 3]\n	add	x19, x19, 1\n	mov	x0, x20\n	bl	strlen\n	tbnz	x0, 0, .L3\n	str	x20, [x24, w23, sxtw 3]\n	add	w23, w23, 1\n	str	w23, [x25]\n.L3:\n	cmp	x21, x19\n	bne	.L4\n	sbfiz	x27, x23, 3, 32\n	cmp	w23, 1\n	ble	.L23\n	add	x26, x24, 8\n	.p2align 3,,7\n.L6:\n	cmp	w23, 1\n	ble	.L25\n	sub	w22, w23, #2\n	mov	x19, x24\n	add	x22, x26, w22, uxtw 3\n	b	.L9\n	.p2align 2,,3\n.L28:\n	beq	.L26\n.L8:\n	add	x19, x19, 8\n	cmp	x22, x19\n	beq	.L27\n.L9:\n	ldr	x21, [x19]\n	mov	x0, x21\n	bl	strlen\n	ldr	x28, [x19, 8]\n	mov	x20, x0\n	mov	x0, x28\n	bl	strlen\n	cmp	x20, x0\n	bls	.L28\n	stp	x28, x21, [x19]\n.L29:\n	add	x19, x19, 8\n	cmp	x22, x19\n	bne	.L9\n.L27:\n	sub	w23, w23, #1\n	cmp	w23, 1\n	bne	.L6\n.L23:\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L2:\n	mov	x0, x27\n	bl	malloc\n	mov	x19, x0\n	ldr	w2, [x25]\n	cmp	w2, 0\n	ble	.L1\n	ubfiz	x2, x2, 3, 32\n	mov	x1, x24\n	bl	memcpy\n.L1:\n	ldp	x23, x24, [sp, 48]\n	mov	x0, x19\n	ldp	x19, x20, [sp, 16]\n	ldp	x25, x26, [sp, 64]\n	ldp	x27, x28, [sp, 80]\n	ldp	x29, x30, [sp], 96\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 27\n	.cfi_restore 28\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L26:\n	.cfi_def_cfa_offset 96\n	.cfi_offset 19, -80\n	.cfi_offset 20, -72\n	.cfi_offset 21, -64\n	.cfi_offset 22, -56\n	.cfi_offset 23, -48\n	.cfi_offset 24, -40\n	.cfi_offset 25, -32\n	.cfi_offset 26, -24\n	.cfi_offset 27, -16\n	.cfi_offset 28, -8\n	.cfi_offset 29, -96\n	.cfi_offset 30, -88\n	mov	x1, x28\n	mov	x0, x21\n	bl	strcmp\n	cmp	w0, 0\n	ble	.L8\n	stp	x28, x21, [x19]\n	b	.L29\n	.p2align 2,,3\n.L25:\n	sub	w23, w23, #1\n	b	.L6\n.L16:\n	.cfi_restore 21\n	.cfi_restore 22\n	mov	x27, 0\n	b	.L2\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -96]!\n	.cfi_def_cfa_offset 96\n	.cfi_offset 29, -96\n	.cfi_offset 30, -88\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 19, -80\n	.cfi_offset 20, -72\n	.cfi_offset 23, -48\n	.cfi_offset 24, -40\n	mov	x24, x0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -32\n	.cfi_offset 26, -24\n	mov	x25, x2\n	stp	x27, x28, [sp, 80]\n	str	wzr, [x2]\n	cmp	w1, 0\n	.cfi_offset 27, -16\n	.cfi_offset 28, -8\n	ble	.L16\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -56\n	.cfi_offset 21, -64\n	sxtw	x21, w1\n	mov	x19, 0\n	mov	w23, 0\n	.p2align 3,,7\n.L4:\n	ldr	x20, [x24, x19, lsl 3]\n	add	x19, x19, 1\n	mov	x0, x20\n	bl	strlen\n	tbnz	x0, 0, .L3\n	str	x20, [x24, w23, sxtw 3]\n	add	w23, w23, 1\n	str	w23, [x25]\n.L3:\n	cmp	x21, x19\n	bne	.L4\n	sbfiz	x27, x23, 3, 32\n	cmp	w23, 1\n	ble	.L23\n	add	x26, x24, 8\n	.p2align 3,,7\n.L6:\n	cmp	w23, 1\n	ble	.L25\n	sub	w22, w23, #2\n	mov	x19, x24\n	add	x22, x26, w22, uxtw 3\n	b	.L9\n	.p2align 2,,3\n.L28:\n	beq	.L26\n.L8:\n	add	x19, x19, 8\n	cmp	x22, x19\n	beq	.L27\n.L9:\n	ldr	x21, [x19]\n	mov	x0, x21\n	bl	strlen\n	ldr	x28, [x19, 8]\n	mov	x20, x0\n	mov	x0, x28\n	bl	strlen\n	cmp	x20, x0\n	bls	.L28\n	stp	x28, x21, [x19]\n.L29:\n	add	x19, x19, 8\n	cmp	x22, x19\n	bne	.L9\n.L27:\n	sub	w23, w23, #1\n	cmp	w23, 1\n	bne	.L6\n.L23:\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L2:\n	mov	x0, x27\n	bl	malloc\n	mov	x19, x0\n	ldr	w2, [x25]\n	cmp	w2, 0\n	ble	.L1\n	ubfiz	x2, x2, 3, 32\n	mov	x1, x24\n	bl	memcpy\n.L1:\n	ldp	x23, x24, [sp, 48]\n	mov	x0, x19\n	ldp	x19, x20, [sp, 16]\n	ldp	x25, x26, [sp, 64]\n	ldp	x27, x28, [sp, 80]\n	ldp	x29, x30, [sp], 96\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 27\n	.cfi_restore 28\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L26:\n	.cfi_def_cfa_offset 96\n	.cfi_offset 19, -80\n	.cfi_offset 20, -72\n	.cfi_offset 21, -64\n	.cfi_offset 22, -56\n	.cfi_offset 23, -48\n	.cfi_offset 24, -40\n	.cfi_offset 25, -32\n	.cfi_offset 26, -24\n	.cfi_offset 27, -16\n	.cfi_offset 28, -8\n	.cfi_offset 29, -96\n	.cfi_offset 30, -88\n	mov	x1, x28\n	mov	x0, x21\n	bl	strcmp\n	cmp	w0, 0\n	ble	.L8\n	stp	x28, x21, [x19]\n	b	.L29\n	.p2align 2,,3\n.L25:\n	sub	w23, w23, #1\n	b	.L6\n.L16:\n	.cfi_restore 21\n	.cfi_restore 22\n	mov	x27, 0\n	b	.L2\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem151", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w5, w0\n	cmp	w0, 3\n	ble	.L2\n	mov	w3, 2\n	mov	w6, 1\n	.p2align 3,,7\n.L4:\n	sdiv	w4, w5, w3\n	msub	w4, w4, w3, w5\n	add	w3, w3, 1\n	cmp	w4, 0\n	mul	w4, w3, w3\n	csel	w6, w6, wzr, ne\n	cmp	w5, w4\n	bge	.L4\n	cmp	w6, 0\n	csel	w0, w1, w2, ne\n	ret\n	.p2align 2,,3\n.L2:\n	cmp	w0, 1\n	cset	w6, gt\n	cmp	w6, 0\n	csel	w0, w1, w2, ne\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w5, w0\n	cmp	w0, 3\n	ble	.L2\n	mov	w3, 2\n	mov	w6, 1\n	.p2align 3,,7\n.L4:\n	sdiv	w4, w5, w3\n	msub	w4, w4, w3, w5\n	add	w3, w3, 1\n	cmp	w4, 0\n	mul	w4, w3, w3\n	csel	w6, w6, wzr, ne\n	cmp	w5, w4\n	bge	.L4\n	cmp	w6, 0\n	csel	w0, w1, w2, ne\n	ret\n	.p2align 2,,3\n.L2:\n	cmp	w0, 1\n	cset	w6, gt\n	cmp	w6, 0\n	csel	w0, w1, w2, ne\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem152", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L7\n	mov	x2, x0\n	mov	x0, 0\n	add	x3, x2, w1, sxtw 2\n	adrp	x1, .LC0\n	ldr	d4, [x1, #:lo12:.LC0]\n	.p2align 3,,7\n.L6:\n	ldr	s2, [x2]\n	frinta	s0, s2\n	fcvt	d1, s2\n	fcvt	d3, s0\n	fabd	d1, d1, d3\n	fcmpe	d1, d4\n	bmi	.L8\n.L3:\n	add	x2, x2, 4\n	cmp	x3, x2\n	bne	.L6\n	ret\n	.p2align 2,,3\n.L8:\n	fcmpe	s2, #0.0\n	bgt	.L9\n	b	.L3\n	.p2align 2,,3\n.L9:\n	fcvtzs	w1, s0\n	mul	w4, w1, w1\n	cmp	w1, 0\n	and	w1, w1, 1\n	csneg	w1, w1, w1, ge\n	cmp	w1, 1\n	add	x1, x0, w4, sxtw\n	csel	x0, x1, x0, eq\n	b	.L3\n	.p2align 2,,3\n.L7:\n	mov	x0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.section	.rodata.cst8,\"aM\",@progbits,8\n	.align	3\n.LC0:\n	.word	-350469331\n	.word	1058682594\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L7\n	mov	x2, x0\n	mov	x0, 0\n	add	x3, x2, w1, sxtw 2\n	adrp	x1, .LC0\n	ldr	d4, [x1, #:lo12:.LC0]\n	.p2align 3,,7\n.L6:\n	ldr	s2, [x2]\n	frinta	s0, s2\n	fcvt	d1, s2\n	fcvt	d3, s0\n	fabd	d1, d1, d3\n	fcmpe	d1, d4\n	bmi	.L8\n.L3:\n	add	x2, x2, 4\n	cmp	x3, x2\n	bne	.L6\n	ret\n	.p2align 2,,3\n.L8:\n	fcmpe	s2, #0.0\n	bgt	.L9\n	b	.L3\n	.p2align 2,,3\n.L9:\n	fcvtzs	w1, s0\n	mul	w4, w1, w1\n	cmp	w1, 0\n	and	w1, w1, 1\n	csneg	w1, w1, w1, ge\n	cmp	w1, 1\n	add	x1, x0, w4, sxtw\n	csel	x0, x1, x0, eq\n	b	.L3\n	.p2align 2,,3\n.L7:\n	mov	x0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.section	.rodata.cst8,\"aM\",@progbits,8\n	.align	3\n.LC0:\n	.word	-350469331\n	.word	1058682594\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem153", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w3, 0\n	ble	.L1\n	sbfiz	x6, x3, 2, 32\n	mov	x4, 0\n	.p2align 3,,7\n.L3:\n	ldr	w3, [x0, x4]\n	ldr	w5, [x1, x4]\n	subs	w3, w3, w5\n	csneg	w3, w3, w3, pl\n	str	w3, [x2, x4]\n	add	x4, x4, 4\n	cmp	x6, x4\n	bne	.L3\n.L1:\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w3, 0\n	ble	.L1\n	sbfiz	x6, x3, 2, 32\n	mov	x4, 0\n	.p2align 3,,7\n.L3:\n	ldr	w3, [x0, x4]\n	ldr	w5, [x1, x4]\n	subs	w3, w3, w5\n	csneg	w3, w3, w3, pl\n	str	w3, [x2, x4]\n	add	x4, x4, 4\n	cmp	x6, x4\n	bne	.L3\n.L1:\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem154", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"%s.%s\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	mov	w10, w2\n	mov	x2, x0\n	mov	x0, x3\n	cmp	w10, 0\n	ble	.L9\n	mov	x7, x1\n	add	x10, x1, w10, sxtw 3\n	mov	x3, 0\n	mov	w9, -1000\n	.p2align 3,,7\n.L8:\n	ldr	x8, [x7]\n	ldrb	w1, [x8]\n	cbz	w1, .L10\n	add	x6, x8, 1\n	mov	w5, 0\n	b	.L6\n	.p2align 2,,3\n.L15:\n	ldrb	w1, [x6], 1\n	add	w5, w5, 1\n	cbz	w1, .L3\n.L6:\n	sub	w4, w1, #97\n	sub	w1, w1, #65\n	and	w1, w1, 255\n	and	w4, w4, 255\n	cmp	w1, 25\n	bls	.L15\n	ldrb	w1, [x6], 1\n	cmp	w4, 26\n	sbc	w5, w5, wzr\n	cbnz	w1, .L6\n.L3:\n	cmp	w9, w5\n	add	x7, x7, 8\n	csel	x3, x8, x3, lt\n	csel	w9, w5, w9, lt\n	cmp	x10, x7\n	bne	.L8\n.L2:\n	adrp	x1, .LC0\n	add	x1, x1, :lo12:.LC0\n	b	sprintf\n	.p2align 2,,3\n.L10:\n	mov	w5, 0\n	add	x7, x7, 8\n	cmp	w9, w5\n	csel	x3, x8, x3, lt\n	csel	w9, w5, w9, lt\n	cmp	x10, x7\n	bne	.L8\n	b	.L2\n.L9:\n	mov	x3, 0\n	adrp	x1, .LC0\n	add	x1, x1, :lo12:.LC0\n	b	sprintf\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"%s.%s\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	mov	w10, w2\n	mov	x2, x0\n	mov	x0, x3\n	cmp	w10, 0\n	ble	.L9\n	mov	x7, x1\n	add	x10, x1, w10, sxtw 3\n	mov	x3, 0\n	mov	w9, -1000\n	.p2align 3,,7\n.L8:\n	ldr	x8, [x7]\n	ldrb	w1, [x8]\n	cbz	w1, .L10\n	add	x6, x8, 1\n	mov	w5, 0\n	b	.L6\n	.p2align 2,,3\n.L15:\n	ldrb	w1, [x6], 1\n	add	w5, w5, 1\n	cbz	w1, .L3\n.L6:\n	sub	w4, w1, #97\n	sub	w1, w1, #65\n	and	w1, w1, 255\n	and	w4, w4, 255\n	cmp	w1, 25\n	bls	.L15\n	ldrb	w1, [x6], 1\n	cmp	w4, 26\n	sbc	w5, w5, wzr\n	cbnz	w1, .L6\n.L3:\n	cmp	w9, w5\n	add	x7, x7, 8\n	csel	x3, x8, x3, lt\n	csel	w9, w5, w9, lt\n	cmp	x10, x7\n	bne	.L8\n.L2:\n	adrp	x1, .LC0\n	add	x1, x1, :lo12:.LC0\n	b	sprintf\n	.p2align 2,,3\n.L10:\n	mov	w5, 0\n	add	x7, x7, 8\n	cmp	w9, w5\n	csel	x3, x8, x3, lt\n	csel	w9, w5, w9, lt\n	cmp	x10, x7\n	bne	.L8\n	b	.L2\n.L9:\n	mov	x3, 0\n	adrp	x1, .LC0\n	add	x1, x1, :lo12:.LC0\n	b	sprintf\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem155", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	x22, x1\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x24, x0\n	mov	x0, x1\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	bl	strlen\n	mov	x20, x0\n	mov	w25, w0\n	lsl	w0, w0, 1\n	add	w0, w0, 1\n	sxtw	x0, w0\n	bl	malloc\n	mov	x21, x0\n	cmp	w20, 0\n	ble	.L6\n	add	x23, x0, w20, sxtw\n	mov	x19, 0\n	sxtw	x20, w20\n	mov	x26, x23\n	b	.L5\n	.p2align 2,,3\n.L4:\n	sub	x20, x20, #1\n	cmp	w25, w19\n	ble	.L6\n	add	x23, x21, x20\n.L5:\n	add	x1, x22, x19\n	mov	x2, x20\n	mov	x0, x21\n	bl	strncpy\n	mov	x2, x19\n	mov	x1, x22\n	mov	x0, x23\n	bl	strncpy\n	strb	wzr, [x26]\n	mov	x1, x21\n	mov	x0, x24\n	add	x19, x19, 1\n	bl	strstr\n	cbz	x0, .L4\n	mov	x0, x21\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	w0, 1\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L6:\n	.cfi_restore_state\n	mov	x0, x21\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	w0, 0\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	x22, x1\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x24, x0\n	mov	x0, x1\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	bl	strlen\n	mov	x20, x0\n	mov	w25, w0\n	lsl	w0, w0, 1\n	add	w0, w0, 1\n	sxtw	x0, w0\n	bl	malloc\n	mov	x21, x0\n	cmp	w20, 0\n	ble	.L6\n	add	x23, x0, w20, sxtw\n	mov	x19, 0\n	sxtw	x20, w20\n	mov	x26, x23\n	b	.L5\n	.p2align 2,,3\n.L4:\n	sub	x20, x20, #1\n	cmp	w25, w19\n	ble	.L6\n	add	x23, x21, x20\n.L5:\n	add	x1, x22, x19\n	mov	x2, x20\n	mov	x0, x21\n	bl	strncpy\n	mov	x2, x19\n	mov	x1, x22\n	mov	x0, x23\n	bl	strncpy\n	strb	wzr, [x26]\n	mov	x1, x21\n	mov	x0, x24\n	add	x19, x19, 1\n	bl	strstr\n	cbz	x0, .L4\n	mov	x0, x21\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	w0, 1\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L6:\n	.cfi_restore_state\n	mov	x0, x21\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	w0, 0\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem156", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w0, 0\n	mov	w5, 52429\n	csneg	w0, w0, w0, ge\n	mov	w3, 0\n	mov	w4, 0\n	movk	w5, 0xcccc, lsl 16\n	tbnz	x0, 0, .L2\n	.p2align 3,,7\n.L8:\n	umull	x2, w0, w5\n	add	w4, w4, 1\n	lsr	x2, x2, 35\n	cmp	w0, 9\n	ble	.L7\n.L5:\n	mov	w0, w2\n	tbz	x0, 0, .L8\n.L2:\n	umull	x2, w0, w5\n	add	w3, w3, 1\n	lsr	x2, x2, 35\n	cmp	w0, 9\n	bgt	.L5\n.L7:\n	stp	w4, w3, [x1]\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w0, 0\n	mov	w5, 52429\n	csneg	w0, w0, w0, ge\n	mov	w3, 0\n	mov	w4, 0\n	movk	w5, 0xcccc, lsl 16\n	tbnz	x0, 0, .L2\n	.p2align 3,,7\n.L8:\n	umull	x2, w0, w5\n	add	w4, w4, 1\n	lsr	x2, x2, 35\n	cmp	w0, 9\n	ble	.L7\n.L5:\n	mov	w0, w2\n	tbz	x0, 0, .L8\n.L2:\n	umull	x2, w0, w5\n	add	w3, w3, 1\n	lsr	x2, x2, 35\n	cmp	w0, 9\n	bgt	.L5\n.L7:\n	stp	w4, w3, [x1]\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem157", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	adrp	x3, .LANCHOR0\n	add	x3, x3, :lo12:.LANCHOR0\n	stp	x29, x30, [sp, -208]!\n	.cfi_def_cfa_offset 208\n	.cfi_offset 29, -208\n	.cfi_offset 30, -200\n	add	x4, x3, 104\n	mov	x2, x1\n	mov	x29, sp\n	ldp	q5, q6, [x3]\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -192\n	.cfi_offset 20, -184\n	mov	w19, w0\n	ldp	q2, q3, [x3, 32]\n	strb	wzr, [x1]\n	ldp	q0, q1, [x3, 64]\n	ldr	x0, [x3, 96]\n	add	x3, sp, 104\n	ldp	q7, q16, [x4]\n	str	x0, [sp, 200]\n	ldr	q4, [x4, 32]\n	stp	q5, q6, [x3]\n	ldr	w1, [x4, 48]\n	add	x3, sp, 136\n	str	w1, [sp, 96]\n	add	x1, sp, 168\n	stp	q7, q16, [sp, 48]\n	stp	q2, q3, [x3]\n	stp	q0, q1, [x1]\n	str	q4, [sp, 80]\n	cmp	w19, 0\n	ble	.L1\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -168\n	.cfi_offset 21, -176\n	mov	x22, 1\n	.p2align 3,,7\n.L2:\n	add	x0, sp, 48\n	add	x0, x0, x22, lsl 2\n	ldr	w20, [x0, -4]\n	cmp	w20, w19\n	bgt	.L6\n	add	x0, sp, 104\n	add	x0, x0, x22, lsl 3\n	ldr	x21, [x0, -8]\n	.p2align 3,,7\n.L4:\n	mov	x0, x2\n	mov	x1, x21\n	sub	w19, w19, w20\n	bl	strcat\n	mov	x2, x0\n	cmp	w19, w20\n	bge	.L4\n	cbz	w19, .L15\n.L6:\n	add	x22, x22, 1\n	b	.L2\n.L15:\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 208\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"m\"\n	.align	3\n.LC1:\n	.string	\"cm\"\n	.align	3\n.LC2:\n	.string	\"d\"\n	.align	3\n.LC3:\n	.string	\"cd\"\n	.align	3\n.LC4:\n	.string	\"c\"\n	.align	3\n.LC5:\n	.string	\"xc\"\n	.align	3\n.LC6:\n	.string	\"l\"\n	.align	3\n.LC7:\n	.string	\"xl\"\n	.align	3\n.LC8:\n	.string	\"x\"\n	.align	3\n.LC9:\n	.string	\"ix\"\n	.align	3\n.LC10:\n	.string	\"v\"\n	.align	3\n.LC11:\n	.string	\"iv\"\n	.align	3\n.LC12:\n	.string	\"i\"\n	.section	.rodata\n	.align	3\n	.set	.LANCHOR0,. + 0\n.LC15:\n	.xword	.LC0\n	.xword	.LC1\n	.xword	.LC2\n	.xword	.LC3\n	.xword	.LC4\n	.xword	.LC5\n	.xword	.LC6\n	.xword	.LC7\n	.xword	.LC8\n	.xword	.LC9\n	.xword	.LC10\n	.xword	.LC11\n	.xword	.LC12\n.LC14:\n	.word	1000\n	.word	900\n	.word	500\n	.word	400\n	.word	100\n	.word	90\n	.word	50\n	.word	40\n	.word	10\n	.word	9\n	.word	5\n	.word	4\n	.word	1\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	adrp	x3, .LANCHOR0\n	add	x3, x3, :lo12:.LANCHOR0\n	stp	x29, x30, [sp, -208]!\n	.cfi_def_cfa_offset 208\n	.cfi_offset 29, -208\n	.cfi_offset 30, -200\n	add	x4, x3, 104\n	mov	x2, x1\n	mov	x29, sp\n	ldp	q5, q6, [x3]\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -192\n	.cfi_offset 20, -184\n	mov	w19, w0\n	ldp	q2, q3, [x3, 32]\n	strb	wzr, [x1]\n	ldp	q0, q1, [x3, 64]\n	ldr	x0, [x3, 96]\n	add	x3, sp, 104\n	ldp	q7, q16, [x4]\n	str	x0, [sp, 200]\n	ldr	q4, [x4, 32]\n	stp	q5, q6, [x3]\n	ldr	w1, [x4, 48]\n	add	x3, sp, 136\n	str	w1, [sp, 96]\n	add	x1, sp, 168\n	stp	q7, q16, [sp, 48]\n	stp	q2, q3, [x3]\n	stp	q0, q1, [x1]\n	str	q4, [sp, 80]\n	cmp	w19, 0\n	ble	.L1\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -168\n	.cfi_offset 21, -176\n	mov	x22, 1\n	.p2align 3,,7\n.L2:\n	add	x0, sp, 48\n	add	x0, x0, x22, lsl 2\n	ldr	w20, [x0, -4]\n	cmp	w20, w19\n	bgt	.L6\n	add	x0, sp, 104\n	add	x0, x0, x22, lsl 3\n	ldr	x21, [x0, -8]\n	.p2align 3,,7\n.L4:\n	mov	x0, x2\n	mov	x1, x21\n	sub	w19, w19, w20\n	bl	strcat\n	mov	x2, x0\n	cmp	w19, w20\n	bge	.L4\n	cbz	w19, .L15\n.L6:\n	add	x22, x22, 1\n	b	.L2\n.L15:\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 208\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"m\"\n	.align	3\n.LC1:\n	.string	\"cm\"\n	.align	3\n.LC2:\n	.string	\"d\"\n	.align	3\n.LC3:\n	.string	\"cd\"\n	.align	3\n.LC4:\n	.string	\"c\"\n	.align	3\n.LC5:\n	.string	\"xc\"\n	.align	3\n.LC6:\n	.string	\"l\"\n	.align	3\n.LC7:\n	.string	\"xl\"\n	.align	3\n.LC8:\n	.string	\"x\"\n	.align	3\n.LC9:\n	.string	\"ix\"\n	.align	3\n.LC10:\n	.string	\"v\"\n	.align	3\n.LC11:\n	.string	\"iv\"\n	.align	3\n.LC12:\n	.string	\"i\"\n	.section	.rodata\n	.align	3\n	.set	.LANCHOR0,. + 0\n.LC15:\n	.xword	.LC0\n	.xword	.LC1\n	.xword	.LC2\n	.xword	.LC3\n	.xword	.LC4\n	.xword	.LC5\n	.xword	.LC6\n	.xword	.LC7\n	.xword	.LC8\n	.xword	.LC9\n	.xword	.LC10\n	.xword	.LC11\n	.xword	.LC12\n.LC14:\n	.word	1000\n	.word	900\n	.word	500\n	.word	400\n	.word	100\n	.word	90\n	.word	50\n	.word	40\n	.word	10\n	.word	9\n	.word	5\n	.word	4\n	.word	1\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem158", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	fmul	s0, s0, s0\n	fmul	s1, s1, s1\n	fmul	s2, s2, s2\n	adrp	x0, .LC0\n	ldr	d4, [x0, #:lo12:.LC0]\n	mov	w0, 1\n	fadd	s3, s0, s1\n	fabd	s3, s3, s2\n	fcvt	d3, s3\n	fcmpe	d3, d4\n	bmi	.L1\n	fadd	s3, s0, s2\n	fabd	s3, s3, s1\n	fcvt	d3, s3\n	fcmpe	d3, d4\n	bmi	.L1\n	fadd	s1, s1, s2\n	fabd	s1, s1, s0\n	fcvt	d1, s1\n	fcmpe	d1, d4\n	cset	w0, mi\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.section	.rodata.cst8,\"aM\",@progbits,8\n	.align	3\n.LC0:\n	.word	-350469331\n	.word	1058682594\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	fmul	s0, s0, s0\n	fmul	s1, s1, s1\n	fmul	s2, s2, s2\n	adrp	x0, .LC0\n	ldr	d4, [x0, #:lo12:.LC0]\n	mov	w0, 1\n	fadd	s3, s0, s1\n	fabd	s3, s3, s2\n	fcvt	d3, s3\n	fcmpe	d3, d4\n	bmi	.L1\n	fadd	s3, s0, s2\n	fabd	s3, s3, s1\n	fcvt	d3, s3\n	fcmpe	d3, d4\n	bmi	.L1\n	fadd	s1, s1, s2\n	fabd	s1, s1, s0\n	fcvt	d1, s1\n	fcmpe	d1, d4\n	cset	w0, mi\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.section	.rodata.cst8,\"aM\",@progbits,8\n	.align	3\n.LC0:\n	.word	-350469331\n	.word	1058682594\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem159", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -352]!\n	.cfi_def_cfa_offset 352\n	.cfi_offset 29, -352\n	.cfi_offset 30, -344\n	mov	x29, sp\n	str	x27, [sp, 80]\n	cmp	w1, 0\n	.cfi_offset 27, -272\n	ble	.L8\n	adrp	x27, .LC0\n	add	x27, x27, :lo12:.LC0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -328\n	.cfi_offset 19, -336\n	add	x19, sp, 96\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 24, -296\n	.cfi_offset 23, -304\n	mov	x23, x0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 26, -280\n	.cfi_offset 25, -288\n	add	x25, x0, w1, sxtw 3\n	mov	w26, 0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -312\n	.cfi_offset 21, -320\n	.p2align 3,,7\n.L7:\n	ldr	x24, [x23]\n	movi	v0.4s, 0\n	ldrb	w20, [x24]\n	stp	q0, q0, [x19]\n	stp	q0, q0, [x19, 32]\n	stp	q0, q0, [x19, 64]\n	stp	q0, q0, [x19, 96]\n	stp	q0, q0, [x19, 128]\n	stp	q0, q0, [x19, 160]\n	stp	q0, q0, [x19, 192]\n	stp	q0, q0, [x19, 224]\n	cbz	w20, .L9\n	add	x21, x24, 1\n	mov	w22, 0\n	b	.L5\n	.p2align 2,,3\n.L4:\n	ldrb	w20, [x21], 1\n	cbz	w20, .L3\n.L5:\n	mov	w1, w20\n	mov	x0, x19\n	bl	strchr\n	cbnz	x0, .L4\n	mov	x0, x19\n	bl	strlen\n	add	w1, w0, 1\n	strb	w20, [x19, w0, sxtw]\n	ldrb	w20, [x21], 1\n	add	w22, w22, 1\n	strb	wzr, [x19, w1, sxtw]\n	cbnz	w20, .L5\n.L3:\n	cmp	w26, w22\n	blt	.L10\n	bne	.L6\n	mov	x1, x27\n	mov	x0, x24\n	bl	strcmp\n	cmp	w0, 0\n	csel	x27, x27, x24, ge\n	.p2align 3,,7\n.L6:\n	add	x23, x23, 8\n	cmp	x23, x25\n	bne	.L7\n	ldp	x19, x20, [sp, 16]\n	.cfi_remember_state\n	.cfi_restore 20\n	.cfi_restore 19\n	mov	x0, x27\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	ldp	x23, x24, [sp, 48]\n	.cfi_restore 24\n	.cfi_restore 23\n	ldp	x25, x26, [sp, 64]\n	.cfi_restore 26\n	.cfi_restore 25\n	ldr	x27, [sp, 80]\n	ldp	x29, x30, [sp], 352\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 27\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	.cfi_restore_state\n	mov	w26, w22\n	mov	x27, x24\n	b	.L6\n	.p2align 2,,3\n.L9:\n	mov	w22, 0\n	b	.L3\n.L8:\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 25\n	.cfi_restore 26\n	adrp	x27, .LC0\n	add	x27, x27, :lo12:.LC0\n	mov	x0, x27\n	ldr	x27, [sp, 80]\n	ldp	x29, x30, [sp], 352\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 27\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -352]!\n	.cfi_def_cfa_offset 352\n	.cfi_offset 29, -352\n	.cfi_offset 30, -344\n	mov	x29, sp\n	str	x27, [sp, 80]\n	cmp	w1, 0\n	.cfi_offset 27, -272\n	ble	.L8\n	adrp	x27, .LC0\n	add	x27, x27, :lo12:.LC0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -328\n	.cfi_offset 19, -336\n	add	x19, sp, 96\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 24, -296\n	.cfi_offset 23, -304\n	mov	x23, x0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 26, -280\n	.cfi_offset 25, -288\n	add	x25, x0, w1, sxtw 3\n	mov	w26, 0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -312\n	.cfi_offset 21, -320\n	.p2align 3,,7\n.L7:\n	ldr	x24, [x23]\n	movi	v0.4s, 0\n	ldrb	w20, [x24]\n	stp	q0, q0, [x19]\n	stp	q0, q0, [x19, 32]\n	stp	q0, q0, [x19, 64]\n	stp	q0, q0, [x19, 96]\n	stp	q0, q0, [x19, 128]\n	stp	q0, q0, [x19, 160]\n	stp	q0, q0, [x19, 192]\n	stp	q0, q0, [x19, 224]\n	cbz	w20, .L9\n	add	x21, x24, 1\n	mov	w22, 0\n	b	.L5\n	.p2align 2,,3\n.L4:\n	ldrb	w20, [x21], 1\n	cbz	w20, .L3\n.L5:\n	mov	w1, w20\n	mov	x0, x19\n	bl	strchr\n	cbnz	x0, .L4\n	mov	x0, x19\n	bl	strlen\n	add	w1, w0, 1\n	strb	w20, [x19, w0, sxtw]\n	ldrb	w20, [x21], 1\n	add	w22, w22, 1\n	strb	wzr, [x19, w1, sxtw]\n	cbnz	w20, .L5\n.L3:\n	cmp	w26, w22\n	blt	.L10\n	bne	.L6\n	mov	x1, x27\n	mov	x0, x24\n	bl	strcmp\n	cmp	w0, 0\n	csel	x27, x27, x24, ge\n	.p2align 3,,7\n.L6:\n	add	x23, x23, 8\n	cmp	x23, x25\n	bne	.L7\n	ldp	x19, x20, [sp, 16]\n	.cfi_remember_state\n	.cfi_restore 20\n	.cfi_restore 19\n	mov	x0, x27\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	ldp	x23, x24, [sp, 48]\n	.cfi_restore 24\n	.cfi_restore 23\n	ldp	x25, x26, [sp, 64]\n	.cfi_restore 26\n	.cfi_restore 25\n	ldr	x27, [sp, 80]\n	ldp	x29, x30, [sp], 352\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 27\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	.cfi_restore_state\n	mov	w26, w22\n	mov	x27, x24\n	b	.L6\n	.p2align 2,,3\n.L9:\n	mov	w22, 0\n	b	.L3\n.L8:\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 25\n	.cfi_restore 26\n	adrp	x27, .LC0\n	add	x27, x27, :lo12:.LC0\n	mov	x0, x27\n	ldr	x27, [sp, 80]\n	ldp	x29, x30, [sp], 352\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 27\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem16", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\" %d\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	cmp	w0, 0\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	ble	.L2\n	add	w21, w0, 1\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	adrp	x23, .LC0\n	add	x23, x23, :lo12:.LC0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -40\n	.cfi_offset 19, -48\n	mov	w19, 1\n	mov	w20, 2\n	.p2align 3,,7\n.L3:\n	mov	w3, w19\n	mov	x2, x23\n	mov	x1, 0\n	mov	x0, 0\n	add	w19, w19, 1\n	bl	snprintf\n	add	w20, w20, w0\n	cmp	w19, w21\n	bne	.L3\n	sxtw	x0, w20\n	bl	malloc\n	mov	x22, x0\n	cbz	x0, .L16\n	mov	x20, x0\n	mov	w19, 1\n	mov	w0, 48\n	strh	w0, [x20], 1\n	.p2align 3,,7\n.L8:\n	mov	w2, w19\n	mov	x0, x20\n	mov	x1, x23\n	add	w19, w19, 1\n	bl	sprintf\n	add	x20, x20, w0, sxtw\n	cmp	w21, w19\n	bne	.L8\n.L16:\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n	ldr	x23, [sp, 48]\n	.cfi_restore 23\n.L1:\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	.cfi_restore_state\n	mov	x0, 2\n	bl	malloc\n	mov	x22, x0\n	cbz	x0, .L1\n	mov	w0, 48\n	strh	w0, [x22]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\" %d\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	cmp	w0, 0\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	ble	.L2\n	add	w21, w0, 1\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	adrp	x23, .LC0\n	add	x23, x23, :lo12:.LC0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -40\n	.cfi_offset 19, -48\n	mov	w19, 1\n	mov	w20, 2\n	.p2align 3,,7\n.L3:\n	mov	w3, w19\n	mov	x2, x23\n	mov	x1, 0\n	mov	x0, 0\n	add	w19, w19, 1\n	bl	snprintf\n	add	w20, w20, w0\n	cmp	w19, w21\n	bne	.L3\n	sxtw	x0, w20\n	bl	malloc\n	mov	x22, x0\n	cbz	x0, .L16\n	mov	x20, x0\n	mov	w19, 1\n	mov	w0, 48\n	strh	w0, [x20], 1\n	.p2align 3,,7\n.L8:\n	mov	w2, w19\n	mov	x0, x20\n	mov	x1, x23\n	add	w19, w19, 1\n	bl	sprintf\n	add	x20, x20, w0, sxtw\n	cmp	w21, w19\n	bne	.L8\n.L16:\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n	ldr	x23, [sp, 48]\n	.cfi_restore 23\n.L1:\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	.cfi_restore_state\n	mov	x0, 2\n	bl	malloc\n	mov	x22, x0\n	cbz	x0, .L1\n	mov	w0, 48\n	strh	w0, [x22]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem160", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, w2\n	ble	.L2\n	add	w0, w2, w0\n	mov	w2, 0\n	stp	w0, w2, [x3]\n	ret\n	.p2align 2,,3\n.L2:\n	add	w0, w1, w0\n	sub	w2, w2, w1\n	stp	w0, w2, [x3]\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, w2\n	ble	.L2\n	add	w0, w2, w0\n	mov	w2, 0\n	stp	w0, w2, [x3]\n	ret\n	.p2align 2,,3\n.L2:\n	add	w0, w1, w0\n	sub	w2, w2, w1\n	stp	w0, w2, [x3]\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem161", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	sxtw	x20, w3\n	sbfiz	x19, x20, 2, 32\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	x21, x0\n	mov	x0, x19\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	w24, w2\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	mov	x25, x1\n	bl	malloc\n	mov	x22, x0\n	mov	x0, x19\n	bl	malloc\n	mov	x19, x0\n	cmp	w20, 0\n	ble	.L6\n	mov	x1, x25\n	ubfiz	x2, x20, 2, 32\n	mov	x0, x22\n	bl	memcpy\n	mov	x1, 0\n	.p2align 3,,7\n.L5:\n	str	w1, [x19, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x20, x1\n	bne	.L5\n.L6:\n	sxtw	x23, w24\n	mov	x20, 0\n	cmp	w24, 0\n	bgt	.L12\n	b	.L4\n	.p2align 2,,3\n.L33:\n	mov	x20, x1\n.L12:\n	ldr	x1, [x21, x20, lsl 3]\n	ldrb	w0, [x1]\n	cmp	w0, 42\n	bne	.L7\n	ldrb	w0, [x1, 1]\n	cmp	w0, 42\n	bne	.L7\n	ldrb	w0, [x1, 2]\n	cbz	w0, .L61\n	.p2align 3,,7\n.L7:\n	add	x1, x20, 1\n	cmp	x23, x1\n	bne	.L33\n	add	x0, x19, 4\n	mov	x2, 0\n	b	.L22\n	.p2align 2,,3\n.L63:\n	ldrb	w4, [x3, 1]\n	cbz	w4, .L18\n.L14:\n	add	x1, x2, 1\n	cmp	x20, x2\n	beq	.L62\n.L34:\n	mov	x2, x1\n.L22:\n	ldr	x3, [x21, x2, lsl 3]\n	ldrb	w1, [x3]\n	subs	w6, w1, #42\n	beq	.L63\n	cmp	w1, 47\n	bne	.L14\n	ldrb	w4, [x3, 1]\n	cmp	w4, 47\n	bne	.L14\n	ldrb	w1, [x3, 2]\n	cbnz	w1, .L14\n.L18:\n	ldr	w3, [x19, x2, lsl 2]\n	ldr	w1, [x19, w3, sxtw 2]\n	cmp	w3, w1\n	beq	.L19\n	.p2align 3,,7\n.L15:\n	str	w1, [x19, x2, lsl 2]\n	mov	w3, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w3\n	bne	.L15\n.L19:\n	ldr	w3, [x0, x2, lsl 2]\n	sbfiz	x5, x3, 2, 32\n	ldr	w1, [x19, w3, sxtw 2]\n	cmp	w1, w3\n	beq	.L17\n	.p2align 3,,7\n.L16:\n	str	w1, [x0, x2, lsl 2]\n	sbfiz	x5, x1, 2, 32\n	mov	w3, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w3\n	bne	.L16\n.L17:\n	ldr	w3, [x19, x2, lsl 2]\n	ldr	w7, [x22, x5]\n	sxtw	x5, w3\n	ldr	w1, [x22, x5, lsl 2]\n	cbnz	w6, .L20\n	cbz	w4, .L64\n.L20:\n	sdiv	w1, w1, w7\n.L21:\n	str	w1, [x22, x5, lsl 2]\n	add	x1, x2, 1\n	str	w3, [x0, x2, lsl 2]\n	cmp	x20, x2\n	bne	.L34\n	.p2align 3,,7\n.L62:\n	add	x4, x19, 4\n	mov	x2, 0\n	b	.L32\n	.p2align 2,,3\n.L24:\n	add	x0, x2, 1\n	cmp	x20, x2\n	beq	.L4\n.L35:\n	mov	x2, x0\n.L32:\n	ldr	x3, [x21, x2, lsl 3]\n	ldrb	w1, [x3]\n	subs	w5, w1, #43\n	beq	.L59\n	cmp	w1, 45\n	bne	.L24\n.L59:\n	ldrb	w0, [x3, 1]\n	cbnz	w0, .L24\n	ldr	w0, [x19, x2, lsl 2]\n	ldr	w1, [x19, w0, sxtw 2]\n	cmp	w1, w0\n	beq	.L29\n	.p2align 3,,7\n.L25:\n	str	w1, [x19, x2, lsl 2]\n	mov	w3, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w3\n	bne	.L25\n.L29:\n	ldr	w3, [x4, x2, lsl 2]\n	sbfiz	x0, x3, 2, 32\n	ldr	w1, [x19, w3, sxtw 2]\n	cmp	w1, w3\n	beq	.L27\n	.p2align 3,,7\n.L26:\n	str	w1, [x4, x2, lsl 2]\n	sbfiz	x0, x1, 2, 32\n	mov	w3, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w3\n	bne	.L26\n.L27:\n	ldr	w1, [x19, x2, lsl 2]\n	cmp	w5, 0\n	str	w1, [x4, x2, lsl 2]\n	ldr	w3, [x22, x0]\n	sxtw	x1, w1\n	ldr	w0, [x22, x1, lsl 2]\n	add	w5, w0, w3\n	sub	w0, w0, w3\n	csel	w0, w0, w5, ne\n	str	w0, [x22, x1, lsl 2]\n	add	x0, x2, 1\n	cmp	x20, x2\n	bne	.L35\n.L4:\n	ldr	w20, [x22]\n	mov	x0, x22\n	bl	free\n	mov	x0, x19\n	bl	free\n	ldp	x21, x22, [sp, 32]\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L61:\n	.cfi_restore_state\n	ldr	w0, [x19, x20, lsl 2]\n	ldr	w1, [x19, w0, sxtw 2]\n	cmp	w0, w1\n	beq	.L11\n	.p2align 3,,7\n.L8:\n	str	w1, [x19, x20, lsl 2]\n	mov	w0, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w0\n	bne	.L8\n.L11:\n	add	x24, x19, 4\n	ldr	w0, [x24, x20, lsl 2]\n	sbfiz	x2, x0, 2, 32\n	ldr	w1, [x19, w0, sxtw 2]\n	cmp	w0, w1\n	beq	.L10\n	.p2align 3,,7\n.L9:\n	str	w1, [x24, x20, lsl 2]\n	sbfiz	x2, x1, 2, 32\n	mov	w0, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w0\n	bne	.L9\n.L10:\n	ldr	w26, [x19, x20, lsl 2]\n	ldr	w0, [x22, x2]\n	sxtw	x25, w26\n	scvtf	d1, w0\n	ldr	w0, [x22, x25, lsl 2]\n	scvtf	d0, w0\n	bl	pow\n	fcvtzs	w0, d0\n	str	w26, [x24, x20, lsl 2]\n	str	w0, [x22, x25, lsl 2]\n	b	.L7\n	.p2align 2,,3\n.L64:\n	mul	w1, w1, w7\n	b	.L21\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	sxtw	x20, w3\n	sbfiz	x19, x20, 2, 32\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	x21, x0\n	mov	x0, x19\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	w24, w2\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	mov	x25, x1\n	bl	malloc\n	mov	x22, x0\n	mov	x0, x19\n	bl	malloc\n	mov	x19, x0\n	cmp	w20, 0\n	ble	.L6\n	mov	x1, x25\n	ubfiz	x2, x20, 2, 32\n	mov	x0, x22\n	bl	memcpy\n	mov	x1, 0\n	.p2align 3,,7\n.L5:\n	str	w1, [x19, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x20, x1\n	bne	.L5\n.L6:\n	sxtw	x23, w24\n	mov	x20, 0\n	cmp	w24, 0\n	bgt	.L12\n	b	.L4\n	.p2align 2,,3\n.L33:\n	mov	x20, x1\n.L12:\n	ldr	x1, [x21, x20, lsl 3]\n	ldrb	w0, [x1]\n	cmp	w0, 42\n	bne	.L7\n	ldrb	w0, [x1, 1]\n	cmp	w0, 42\n	bne	.L7\n	ldrb	w0, [x1, 2]\n	cbz	w0, .L61\n	.p2align 3,,7\n.L7:\n	add	x1, x20, 1\n	cmp	x23, x1\n	bne	.L33\n	add	x0, x19, 4\n	mov	x2, 0\n	b	.L22\n	.p2align 2,,3\n.L63:\n	ldrb	w4, [x3, 1]\n	cbz	w4, .L18\n.L14:\n	add	x1, x2, 1\n	cmp	x20, x2\n	beq	.L62\n.L34:\n	mov	x2, x1\n.L22:\n	ldr	x3, [x21, x2, lsl 3]\n	ldrb	w1, [x3]\n	subs	w6, w1, #42\n	beq	.L63\n	cmp	w1, 47\n	bne	.L14\n	ldrb	w4, [x3, 1]\n	cmp	w4, 47\n	bne	.L14\n	ldrb	w1, [x3, 2]\n	cbnz	w1, .L14\n.L18:\n	ldr	w3, [x19, x2, lsl 2]\n	ldr	w1, [x19, w3, sxtw 2]\n	cmp	w3, w1\n	beq	.L19\n	.p2align 3,,7\n.L15:\n	str	w1, [x19, x2, lsl 2]\n	mov	w3, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w3\n	bne	.L15\n.L19:\n	ldr	w3, [x0, x2, lsl 2]\n	sbfiz	x5, x3, 2, 32\n	ldr	w1, [x19, w3, sxtw 2]\n	cmp	w1, w3\n	beq	.L17\n	.p2align 3,,7\n.L16:\n	str	w1, [x0, x2, lsl 2]\n	sbfiz	x5, x1, 2, 32\n	mov	w3, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w3\n	bne	.L16\n.L17:\n	ldr	w3, [x19, x2, lsl 2]\n	ldr	w7, [x22, x5]\n	sxtw	x5, w3\n	ldr	w1, [x22, x5, lsl 2]\n	cbnz	w6, .L20\n	cbz	w4, .L64\n.L20:\n	sdiv	w1, w1, w7\n.L21:\n	str	w1, [x22, x5, lsl 2]\n	add	x1, x2, 1\n	str	w3, [x0, x2, lsl 2]\n	cmp	x20, x2\n	bne	.L34\n	.p2align 3,,7\n.L62:\n	add	x4, x19, 4\n	mov	x2, 0\n	b	.L32\n	.p2align 2,,3\n.L24:\n	add	x0, x2, 1\n	cmp	x20, x2\n	beq	.L4\n.L35:\n	mov	x2, x0\n.L32:\n	ldr	x3, [x21, x2, lsl 3]\n	ldrb	w1, [x3]\n	subs	w5, w1, #43\n	beq	.L59\n	cmp	w1, 45\n	bne	.L24\n.L59:\n	ldrb	w0, [x3, 1]\n	cbnz	w0, .L24\n	ldr	w0, [x19, x2, lsl 2]\n	ldr	w1, [x19, w0, sxtw 2]\n	cmp	w1, w0\n	beq	.L29\n	.p2align 3,,7\n.L25:\n	str	w1, [x19, x2, lsl 2]\n	mov	w3, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w3\n	bne	.L25\n.L29:\n	ldr	w3, [x4, x2, lsl 2]\n	sbfiz	x0, x3, 2, 32\n	ldr	w1, [x19, w3, sxtw 2]\n	cmp	w1, w3\n	beq	.L27\n	.p2align 3,,7\n.L26:\n	str	w1, [x4, x2, lsl 2]\n	sbfiz	x0, x1, 2, 32\n	mov	w3, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w3\n	bne	.L26\n.L27:\n	ldr	w1, [x19, x2, lsl 2]\n	cmp	w5, 0\n	str	w1, [x4, x2, lsl 2]\n	ldr	w3, [x22, x0]\n	sxtw	x1, w1\n	ldr	w0, [x22, x1, lsl 2]\n	add	w5, w0, w3\n	sub	w0, w0, w3\n	csel	w0, w0, w5, ne\n	str	w0, [x22, x1, lsl 2]\n	add	x0, x2, 1\n	cmp	x20, x2\n	bne	.L35\n.L4:\n	ldr	w20, [x22]\n	mov	x0, x22\n	bl	free\n	mov	x0, x19\n	bl	free\n	ldp	x21, x22, [sp, 32]\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L61:\n	.cfi_restore_state\n	ldr	w0, [x19, x20, lsl 2]\n	ldr	w1, [x19, w0, sxtw 2]\n	cmp	w0, w1\n	beq	.L11\n	.p2align 3,,7\n.L8:\n	str	w1, [x19, x20, lsl 2]\n	mov	w0, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w0\n	bne	.L8\n.L11:\n	add	x24, x19, 4\n	ldr	w0, [x24, x20, lsl 2]\n	sbfiz	x2, x0, 2, 32\n	ldr	w1, [x19, w0, sxtw 2]\n	cmp	w0, w1\n	beq	.L10\n	.p2align 3,,7\n.L9:\n	str	w1, [x24, x20, lsl 2]\n	sbfiz	x2, x1, 2, 32\n	mov	w0, w1\n	ldr	w1, [x19, w1, sxtw 2]\n	cmp	w1, w0\n	bne	.L9\n.L10:\n	ldr	w26, [x19, x20, lsl 2]\n	ldr	w0, [x22, x2]\n	sxtw	x25, w26\n	scvtf	d1, w0\n	ldr	w0, [x22, x25, lsl 2]\n	scvtf	d0, w0\n	bl	pow\n	fcvtzs	w0, d0\n	str	w26, [x24, x20, lsl 2]\n	str	w0, [x22, x25, lsl 2]\n	b	.L7\n	.p2align 2,,3\n.L64:\n	mul	w1, w1, w7\n	b	.L21\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem162", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x23, x0\n	bl	strlen\n	cmp	w0, 0\n	ble	.L11\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -56\n	.cfi_offset 19, -64\n	mov	x19, x23\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -40\n	.cfi_offset 21, -48\n	sub	w22, w0, #1\n	mov	x21, x0\n	str	x25, [sp, 64]\n	.cfi_offset 25, -16\n	bl	__ctype_b_loc\n	add	x1, x23, 1\n	mov	x24, x0\n	add	x22, x22, x1\n	mov	w25, 0\n	b	.L7\n	.p2align 2,,3\n.L21:\n	tbz	x1, 8, .L4\n	bl	__ctype_tolower_loc\n	ldr	x0, [x0]\n	ldr	w0, [x0, x20, lsl 2]\n	strb	w0, [x19]\n.L5:\n	add	x19, x19, 1\n	cmp	x19, x22\n	beq	.L20\n.L7:\n	ldr	x1, [x24]\n	ldrb	w20, [x19]\n	ldrh	w1, [x1, x20, lsl 1]\n	tbnz	x1, 10, .L21\n	add	x19, x19, 1\n	add	w25, w25, 1\n	cmp	x19, x22\n	bne	.L7\n.L20:\n	cmp	w21, w25\n	beq	.L22\n.L18:\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	ldr	x25, [sp, 64]\n	.cfi_restore 25\n.L11:\n	mov	x0, x23\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L4:\n	.cfi_def_cfa_offset 80\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	tbz	x1, 9, .L5\n	bl	__ctype_toupper_loc\n	ldr	x0, [x0]\n	ldr	w0, [x0, x20, lsl 2]\n	strb	w0, [x19]\n	b	.L5\n	.p2align 2,,3\n.L22:\n	asr	w4, w21, 1\n	cmp	w21, 1\n	beq	.L18\n	add	x2, x23, w21, sxtw\n	mov	x1, 0\n	.p2align 3,,7\n.L9:\n	ldrb	w3, [x2, -1]\n	ldrb	w0, [x23, x1]\n	strb	w3, [x23, x1]\n	add	x1, x1, 1\n	strb	w0, [x2, -1]!\n	cmp	w4, w1\n	bgt	.L9\n	b	.L18\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x23, x0\n	bl	strlen\n	cmp	w0, 0\n	ble	.L11\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -56\n	.cfi_offset 19, -64\n	mov	x19, x23\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -40\n	.cfi_offset 21, -48\n	sub	w22, w0, #1\n	mov	x21, x0\n	str	x25, [sp, 64]\n	.cfi_offset 25, -16\n	bl	__ctype_b_loc\n	add	x1, x23, 1\n	mov	x24, x0\n	add	x22, x22, x1\n	mov	w25, 0\n	b	.L7\n	.p2align 2,,3\n.L21:\n	tbz	x1, 8, .L4\n	bl	__ctype_tolower_loc\n	ldr	x0, [x0]\n	ldr	w0, [x0, x20, lsl 2]\n	strb	w0, [x19]\n.L5:\n	add	x19, x19, 1\n	cmp	x19, x22\n	beq	.L20\n.L7:\n	ldr	x1, [x24]\n	ldrb	w20, [x19]\n	ldrh	w1, [x1, x20, lsl 1]\n	tbnz	x1, 10, .L21\n	add	x19, x19, 1\n	add	w25, w25, 1\n	cmp	x19, x22\n	bne	.L7\n.L20:\n	cmp	w21, w25\n	beq	.L22\n.L18:\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	ldr	x25, [sp, 64]\n	.cfi_restore 25\n.L11:\n	mov	x0, x23\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L4:\n	.cfi_def_cfa_offset 80\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	tbz	x1, 9, .L5\n	bl	__ctype_toupper_loc\n	ldr	x0, [x0]\n	ldr	w0, [x0, x20, lsl 2]\n	strb	w0, [x19]\n	b	.L5\n	.p2align 2,,3\n.L22:\n	asr	w4, w21, 1\n	cmp	w21, 1\n	beq	.L18\n	add	x2, x23, w21, sxtw\n	mov	x1, 0\n	.p2align 3,,7\n.L9:\n	ldrb	w3, [x2, -1]\n	ldrb	w0, [x23, x1]\n	strb	w3, [x23, x1]\n	add	x1, x1, 1\n	strb	w0, [x2, -1]!\n	cmp	w4, w1\n	bgt	.L9\n	b	.L18\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem164", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, w0\n	str	wzr, [x3]\n	csel	w4, w1, w0, lt\n	csel	w0, w0, w1, lt\n	add	w0, w0, 1\n	mov	w1, w4\n	.p2align 3,,7\n.L4:\n	cmp	w1, 9\n	bgt	.L3\n	tbnz	x1, 0, .L3\n	ldr	w4, [x3]\n	add	w5, w4, 1\n	str	w5, [x3]\n	str	w1, [x2, w4, sxtw 2]\n.L3:\n	add	w1, w1, 1\n	cmp	w1, w0\n	bne	.L4\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, w0\n	str	wzr, [x3]\n	csel	w4, w1, w0, lt\n	csel	w0, w0, w1, lt\n	add	w0, w0, 1\n	mov	w1, w4\n	.p2align 3,,7\n.L4:\n	cmp	w1, 9\n	bgt	.L3\n	tbnz	x1, 0, .L3\n	ldr	w4, [x3]\n	add	w5, w4, 1\n	str	w5, [x3]\n	str	w1, [x2, w4, sxtw 2]\n.L3:\n	add	w1, w1, 1\n	cmp	w1, w0\n	bne	.L4\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem17", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	sub	sp, sp, #1104\n	.cfi_def_cfa_offset 1104\n	mov	x2, 1024\n	mov	w1, 0\n	stp	x29, x30, [sp]\n	.cfi_offset 29, -1104\n	.cfi_offset 30, -1096\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -1088\n	.cfi_offset 20, -1080\n	mov	x20, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -1072\n	.cfi_offset 22, -1064\n	add	x22, sp, 80\n	mov	x0, x22\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -1056\n	.cfi_offset 24, -1048\n	bl	memset\n	ldrb	w19, [x20]\n	cbz	w19, .L5\n	str	x25, [sp, 64]\n	.cfi_offset 25, -1040\n	bl	__ctype_tolower_loc\n	ldr	x25, [x0]\n	add	x20, x20, 1\n	mov	w23, 0\n	mov	w24, 1\n	.p2align 3,,7\n.L4:\n	ldr	w19, [x25, x19, lsl 2]\n	and	x21, x19, 255\n	ldr	w0, [x22, x21, lsl 2]\n	cbnz	w0, .L3\n	bl	__ctype_b_loc\n	ubfiz	x19, x19, 1, 8\n	ldr	x0, [x0]\n	ldrh	w0, [x0, x19]\n	tbz	x0, 10, .L3\n	add	w23, w23, 1\n	str	w24, [x22, x21, lsl 2]\n.L3:\n	ldrb	w19, [x20], 1\n	cbnz	w19, .L4\n	ldp	x29, x30, [sp]\n	mov	w0, w23\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	.cfi_restore 25\n	add	sp, sp, 1104\n	.cfi_restore 29\n	.cfi_restore 30\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 1104\n	.cfi_offset 19, -1088\n	.cfi_offset 20, -1080\n	.cfi_offset 21, -1072\n	.cfi_offset 22, -1064\n	.cfi_offset 23, -1056\n	.cfi_offset 24, -1048\n	.cfi_offset 29, -1104\n	.cfi_offset 30, -1096\n	mov	w23, 0\n	mov	w0, w23\n	ldp	x29, x30, [sp]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	add	sp, sp, 1104\n	.cfi_restore 29\n	.cfi_restore 30\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	sub	sp, sp, #1104\n	.cfi_def_cfa_offset 1104\n	mov	x2, 1024\n	mov	w1, 0\n	stp	x29, x30, [sp]\n	.cfi_offset 29, -1104\n	.cfi_offset 30, -1096\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -1088\n	.cfi_offset 20, -1080\n	mov	x20, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -1072\n	.cfi_offset 22, -1064\n	add	x22, sp, 80\n	mov	x0, x22\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -1056\n	.cfi_offset 24, -1048\n	bl	memset\n	ldrb	w19, [x20]\n	cbz	w19, .L5\n	str	x25, [sp, 64]\n	.cfi_offset 25, -1040\n	bl	__ctype_tolower_loc\n	ldr	x25, [x0]\n	add	x20, x20, 1\n	mov	w23, 0\n	mov	w24, 1\n	.p2align 3,,7\n.L4:\n	ldr	w19, [x25, x19, lsl 2]\n	and	x21, x19, 255\n	ldr	w0, [x22, x21, lsl 2]\n	cbnz	w0, .L3\n	bl	__ctype_b_loc\n	ubfiz	x19, x19, 1, 8\n	ldr	x0, [x0]\n	ldrh	w0, [x0, x19]\n	tbz	x0, 10, .L3\n	add	w23, w23, 1\n	str	w24, [x22, x21, lsl 2]\n.L3:\n	ldrb	w19, [x20], 1\n	cbnz	w19, .L4\n	ldp	x29, x30, [sp]\n	mov	w0, w23\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	.cfi_restore 25\n	add	sp, sp, 1104\n	.cfi_restore 29\n	.cfi_restore 30\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 1104\n	.cfi_offset 19, -1088\n	.cfi_offset 20, -1080\n	.cfi_offset 21, -1072\n	.cfi_offset 22, -1064\n	.cfi_offset 23, -1056\n	.cfi_offset 24, -1048\n	.cfi_offset 29, -1104\n	.cfi_offset 30, -1096\n	mov	w23, 0\n	mov	w0, w23\n	ldp	x29, x30, [sp]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	add	sp, sp, 1104\n	.cfi_restore 29\n	.cfi_restore 30\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem18", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -112]!\n	.cfi_def_cfa_offset 112\n	.cfi_offset 29, -112\n	.cfi_offset 30, -104\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -96\n	.cfi_offset 20, -88\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 21, -80\n	.cfi_offset 22, -72\n	.cfi_offset 23, -64\n	.cfi_offset 24, -56\n	mov	x24, x1\n	strh	wzr, [sp, 104]\n	strb	wzr, [sp, 106]\n	bl	strlen\n	mov	x20, x0\n	add	w0, w0, 2\n	sxtw	x0, w0\n	bl	malloc\n	mov	x22, x0\n	mov	x1, x19\n	mov	x2, x20\n	bl	memcpy\n	mov	w1, 32\n	add	w0, w20, 1\n	strh	w1, [x22, x20]\n	cmp	w0, 0\n	ble	.L17\n	add	x0, x22, 1\n	mov	x19, x22\n	add	x20, x0, w20, uxtw\n	mov	w21, 0\n	mov	x23, 0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 26, -40\n	.cfi_offset 25, -48\n	add	x26, sp, 105\n	mov	w25, 0\n	str	x27, [sp, 80]\n	.cfi_offset 27, -32\n	b	.L16\n	.p2align 2,,3\n.L3:\n	add	x0, sp, 104\n	bl	strlen\n	cmp	x0, 2\n	beq	.L14\n	add	x1, sp, 104\n	strb	w27, [x1, x0]\n	strb	wzr, [x26, x0]\n.L14:\n	add	x19, x19, 1\n	cmp	x20, x19\n	beq	.L27\n.L16:\n	ldrb	w27, [x19]\n	cmp	w27, 32\n	bne	.L3\n	ldrb	w0, [sp, 104]\n	cmp	w0, 111\n	beq	.L4\n	cmp	w0, 46\n	bne	.L6\n	ldrb	w0, [sp, 105]\n	cmp	w0, 124\n	bne	.L6\n	ldrb	w0, [sp, 106]\n	cbnz	w0, .L6\n	cmp	w25, w21\n	beq	.L28\n.L12:\n	mov	w0, 1\n	str	w0, [x23, w21, sxtw 2]\n	add	w21, w21, w0\n	.p2align 3,,7\n.L6:\n	strb	wzr, [sp, 104]\n.L30:\n	add	x19, x19, 1\n	cmp	x20, x19\n	bne	.L16\n.L27:\n	ldp	x25, x26, [sp, 64]\n	.cfi_restore 26\n	.cfi_restore 25\n	ldr	x27, [sp, 80]\n	.cfi_restore 27\n.L2:\n	mov	x0, x22\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	str	w21, [x24]\n	ldp	x21, x22, [sp, 32]\n	mov	x0, x23\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 112\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L4:\n	.cfi_def_cfa_offset 112\n	.cfi_offset 19, -96\n	.cfi_offset 20, -88\n	.cfi_offset 21, -80\n	.cfi_offset 22, -72\n	.cfi_offset 23, -64\n	.cfi_offset 24, -56\n	.cfi_offset 25, -48\n	.cfi_offset 26, -40\n	.cfi_offset 27, -32\n	.cfi_offset 29, -112\n	.cfi_offset 30, -104\n	ldrb	w0, [sp, 105]\n	cbnz	w0, .L7\n	cmp	w25, w21\n	beq	.L29\n	mov	w0, 4\n	str	w0, [x23, w21, sxtw 2]\n	add	w21, w21, 1\n.L32:\n	strb	wzr, [sp, 104]\n	b	.L30\n	.p2align 2,,3\n.L7:\n	cmp	w0, 124\n	bne	.L6\n	ldrb	w0, [sp, 106]\n	cbnz	w0, .L6\n	cmp	w25, w21\n	beq	.L31\n.L10:\n	mov	w0, 2\n	str	w0, [x23, w21, sxtw 2]\n	add	w21, w21, 1\n	strb	wzr, [sp, 104]\n	b	.L30\n	.p2align 2,,3\n.L29:\n	cmp	w25, 0\n	ble	.L18\n	lsl	w25, w25, 1\n	sbfiz	x1, x25, 2, 32\n.L9:\n	mov	x0, x23\n	bl	realloc\n	mov	x23, x0\n	mov	w0, 4\n	str	w0, [x23, w21, sxtw 2]\n	add	w21, w21, 1\n	b	.L32\n	.p2align 2,,3\n.L18:\n	mov	x1, 16\n	mov	w25, 4\n	b	.L9\n	.p2align 2,,3\n.L28:\n	cmp	w25, 0\n	ble	.L20\n	lsl	w25, w25, 1\n	sbfiz	x1, x25, 2, 32\n.L13:\n	mov	x0, x23\n	bl	realloc\n	mov	x23, x0\n	b	.L12\n	.p2align 2,,3\n.L31:\n	cmp	w25, 0\n	ble	.L19\n	lsl	w25, w25, 1\n	sbfiz	x1, x25, 2, 32\n.L11:\n	mov	x0, x23\n	bl	realloc\n	mov	x23, x0\n	b	.L10\n	.p2align 2,,3\n.L17:\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 27\n	mov	w21, 0\n	mov	x23, 0\n	b	.L2\n.L20:\n	.cfi_offset 25, -48\n	.cfi_offset 26, -40\n	.cfi_offset 27, -32\n	mov	x1, 16\n	mov	w25, 4\n	b	.L13\n.L19:\n	mov	x1, 16\n	mov	w25, 4\n	b	.L11\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -112]!\n	.cfi_def_cfa_offset 112\n	.cfi_offset 29, -112\n	.cfi_offset 30, -104\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -96\n	.cfi_offset 20, -88\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 21, -80\n	.cfi_offset 22, -72\n	.cfi_offset 23, -64\n	.cfi_offset 24, -56\n	mov	x24, x1\n	strh	wzr, [sp, 104]\n	strb	wzr, [sp, 106]\n	bl	strlen\n	mov	x20, x0\n	add	w0, w0, 2\n	sxtw	x0, w0\n	bl	malloc\n	mov	x22, x0\n	mov	x1, x19\n	mov	x2, x20\n	bl	memcpy\n	mov	w1, 32\n	add	w0, w20, 1\n	strh	w1, [x22, x20]\n	cmp	w0, 0\n	ble	.L17\n	add	x0, x22, 1\n	mov	x19, x22\n	add	x20, x0, w20, uxtw\n	mov	w21, 0\n	mov	x23, 0\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 26, -40\n	.cfi_offset 25, -48\n	add	x26, sp, 105\n	mov	w25, 0\n	str	x27, [sp, 80]\n	.cfi_offset 27, -32\n	b	.L16\n	.p2align 2,,3\n.L3:\n	add	x0, sp, 104\n	bl	strlen\n	cmp	x0, 2\n	beq	.L14\n	add	x1, sp, 104\n	strb	w27, [x1, x0]\n	strb	wzr, [x26, x0]\n.L14:\n	add	x19, x19, 1\n	cmp	x20, x19\n	beq	.L27\n.L16:\n	ldrb	w27, [x19]\n	cmp	w27, 32\n	bne	.L3\n	ldrb	w0, [sp, 104]\n	cmp	w0, 111\n	beq	.L4\n	cmp	w0, 46\n	bne	.L6\n	ldrb	w0, [sp, 105]\n	cmp	w0, 124\n	bne	.L6\n	ldrb	w0, [sp, 106]\n	cbnz	w0, .L6\n	cmp	w25, w21\n	beq	.L28\n.L12:\n	mov	w0, 1\n	str	w0, [x23, w21, sxtw 2]\n	add	w21, w21, w0\n	.p2align 3,,7\n.L6:\n	strb	wzr, [sp, 104]\n.L30:\n	add	x19, x19, 1\n	cmp	x20, x19\n	bne	.L16\n.L27:\n	ldp	x25, x26, [sp, 64]\n	.cfi_restore 26\n	.cfi_restore 25\n	ldr	x27, [sp, 80]\n	.cfi_restore 27\n.L2:\n	mov	x0, x22\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	str	w21, [x24]\n	ldp	x21, x22, [sp, 32]\n	mov	x0, x23\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 112\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L4:\n	.cfi_def_cfa_offset 112\n	.cfi_offset 19, -96\n	.cfi_offset 20, -88\n	.cfi_offset 21, -80\n	.cfi_offset 22, -72\n	.cfi_offset 23, -64\n	.cfi_offset 24, -56\n	.cfi_offset 25, -48\n	.cfi_offset 26, -40\n	.cfi_offset 27, -32\n	.cfi_offset 29, -112\n	.cfi_offset 30, -104\n	ldrb	w0, [sp, 105]\n	cbnz	w0, .L7\n	cmp	w25, w21\n	beq	.L29\n	mov	w0, 4\n	str	w0, [x23, w21, sxtw 2]\n	add	w21, w21, 1\n.L32:\n	strb	wzr, [sp, 104]\n	b	.L30\n	.p2align 2,,3\n.L7:\n	cmp	w0, 124\n	bne	.L6\n	ldrb	w0, [sp, 106]\n	cbnz	w0, .L6\n	cmp	w25, w21\n	beq	.L31\n.L10:\n	mov	w0, 2\n	str	w0, [x23, w21, sxtw 2]\n	add	w21, w21, 1\n	strb	wzr, [sp, 104]\n	b	.L30\n	.p2align 2,,3\n.L29:\n	cmp	w25, 0\n	ble	.L18\n	lsl	w25, w25, 1\n	sbfiz	x1, x25, 2, 32\n.L9:\n	mov	x0, x23\n	bl	realloc\n	mov	x23, x0\n	mov	w0, 4\n	str	w0, [x23, w21, sxtw 2]\n	add	w21, w21, 1\n	b	.L32\n	.p2align 2,,3\n.L18:\n	mov	x1, 16\n	mov	w25, 4\n	b	.L9\n	.p2align 2,,3\n.L28:\n	cmp	w25, 0\n	ble	.L20\n	lsl	w25, w25, 1\n	sbfiz	x1, x25, 2, 32\n.L13:\n	mov	x0, x23\n	bl	realloc\n	mov	x23, x0\n	b	.L12\n	.p2align 2,,3\n.L31:\n	cmp	w25, 0\n	ble	.L19\n	lsl	w25, w25, 1\n	sbfiz	x1, x25, 2, 32\n.L11:\n	mov	x0, x23\n	bl	realloc\n	mov	x23, x0\n	b	.L10\n	.p2align 2,,3\n.L17:\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 27\n	mov	w21, 0\n	mov	x23, 0\n	b	.L2\n.L20:\n	.cfi_offset 25, -48\n	.cfi_offset 26, -40\n	.cfi_offset 27, -32\n	mov	x1, 16\n	mov	w25, 4\n	b	.L13\n.L19:\n	mov	x1, 16\n	mov	w25, 4\n	b	.L11\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem19", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x22, x1\n	bl	strlen\n	mov	w21, w0\n	cbz	w0, .L1\n	mov	x0, x22\n	bl	strlen\n	subs	w20, w21, w0\n	bmi	.L5\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	sxtw	x23, w0\n	add	x0, x19, 1\n	mov	w21, 0\n	add	x20, x0, w20, sxtw\n	.p2align 3,,7\n.L4:\n	mov	x0, x19\n	mov	x2, x23\n	mov	x1, x22\n	add	x19, x19, 1\n	bl	strncmp\n	cmp	w0, 0\n	cinc	w21, w21, eq\n	cmp	x19, x20\n	bne	.L4\n	ldr	x23, [sp, 48]\n	.cfi_restore 23\n.L1:\n	mov	w0, w21\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_restore_state\n	mov	w21, 0\n	b	.L1\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x22, x1\n	bl	strlen\n	mov	w21, w0\n	cbz	w0, .L1\n	mov	x0, x22\n	bl	strlen\n	subs	w20, w21, w0\n	bmi	.L5\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	sxtw	x23, w0\n	add	x0, x19, 1\n	mov	w21, 0\n	add	x20, x0, w20, sxtw\n	.p2align 3,,7\n.L4:\n	mov	x0, x19\n	mov	x2, x23\n	mov	x1, x22\n	add	x19, x19, 1\n	bl	strncmp\n	cmp	w0, 0\n	cinc	w21, w21, eq\n	cmp	x19, x20\n	bne	.L4\n	ldr	x23, [sp, 48]\n	.cfi_restore 23\n.L1:\n	mov	w0, w21\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_restore_state\n	mov	w21, 0\n	b	.L1\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem20", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -192]!\n	.cfi_def_cfa_offset 192\n	.cfi_offset 29, -192\n	.cfi_offset 30, -184\n	adrp	x1, .LANCHOR0\n	add	x1, x1, :lo12:.LANCHOR0\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -176\n	.cfi_offset 20, -168\n	add	x19, sp, 72\n	str	x23, [sp, 48]\n	.cfi_offset 23, -144\n	mov	x23, x0\n	ldp	q3, q4, [x1]\n	stp	xzr, xzr, [sp, 72]\n	ldrb	w0, [x0]\n	ldp	q1, q2, [x1, 32]\n	stp	xzr, xzr, [sp, 88]\n	ldr	q0, [x1, 64]\n	str	xzr, [sp, 104]\n	stp	q3, q4, [sp, 112]\n	stp	q1, q2, [sp, 144]\n	str	q0, [sp, 176]\n	cbz	w0, .L2\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -152\n	.cfi_offset 21, -160\n	and	w1, w0, -33\n	mov	x20, 1\n	cbz	w1, .L19\n	.p2align 3,,7\n.L4:\n	add	x1, sp, 64\n	mov	x2, x20\n	add	x1, x1, x20\n	strb	w0, [x1, -1]\n	ldrb	w0, [x23, x20]\n	add	x20, x20, 1\n	and	w1, w0, -33\n	cbnz	w1, .L4\n.L3:\n	add	x0, sp, 64\n	add	x22, sp, 112\n	mov	w21, 0\n	strb	wzr, [x0, w2, sxtw]\n	.p2align 3,,7\n.L7:\n	ldr	x1, [x22]\n	add	x0, sp, 64\n	bl	strcmp\n	cbz	w0, .L29\n	add	w21, w21, 1\n	add	x22, x22, 8\n	cmp	w21, 10\n	bne	.L7\n	add	x23, x23, x20\n	ldrb	w0, [x23, -1]\n	cbz	w0, .L30\n.L8:\n	ldrb	w0, [x23]\n	mov	x20, 1\n	and	w1, w0, -33\n	cbnz	w1, .L4\n.L19:\n	mov	w2, 0\n	b	.L3\n.L29:\n	sxtw	x21, w21\n	add	x23, x23, x20\n	ldr	w0, [x19, x21, lsl 2]\n	add	w0, w0, 1\n	str	w0, [x19, x21, lsl 2]\n	ldrb	w0, [x23, -1]\n	cbnz	w0, .L8\n.L30:\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L2:\n	adrp	x11, .LANCHOR1\n	add	x0, x11, :lo12:.LANCHOR1\n	mov	x10, 1\n	mov	w4, 0\n	mov	w9, 32\n	.p2align 3,,7\n.L9:\n	add	x1, x19, x10, lsl 2\n	ldr	w8, [x1, -4]\n	cmp	w8, 0\n	ble	.L12\n	add	x1, sp, 112\n	mov	w6, 0\n	add	x1, x1, x10, lsl 3\n	ldr	x7, [x1, -8]\n	.p2align 3,,7\n.L16:\n	sxtw	x5, w4\n	ldrb	w2, [x7]\n	add	w1, w4, 1\n	mvn	x5, x5\n	add	x5, x7, x5\n	sxtw	x1, w1\n	cbz	w2, .L14\n	.p2align 3,,7\n.L11:\n	add	x3, x0, x1\n	mov	x4, x1\n	add	x1, x1, 1\n	strb	w2, [x3, -1]\n	ldrb	w2, [x5, x1]\n	cbnz	w2, .L11\n.L14:\n	add	w6, w6, 1\n	strb	w9, [x0, w4, sxtw]\n	add	w4, w4, 1\n	cmp	w6, w8\n	bne	.L16\n.L12:\n	add	x10, x10, 1\n	cmp	x10, 11\n	bne	.L9\n	cmp	w4, 0\n	ble	.L17\n	sub	w4, w4, #1\n	strb	wzr, [x0, w4, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 192\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L17:\n	.cfi_restore_state\n	strb	wzr, [x11, #:lo12:.LANCHOR1]\n	ldp	x19, x20, [sp, 16]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 192\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"zero\"\n	.align	3\n.LC1:\n	.string	\"one\"\n	.align	3\n.LC2:\n	.string	\"two\"\n	.align	3\n.LC3:\n	.string	\"three\"\n	.align	3\n.LC4:\n	.string	\"four\"\n	.align	3\n.LC5:\n	.string	\"five\"\n	.align	3\n.LC6:\n	.string	\"six\"\n	.align	3\n.LC7:\n	.string	\"seven\"\n	.align	3\n.LC8:\n	.string	\"eight\"\n	.align	3\n.LC9:\n	.string	\"nine\"\n	.section	.rodata\n	.align	3\n	.set	.LANCHOR0,. + 0\n.LC11:\n	.xword	.LC0\n	.xword	.LC1\n	.xword	.LC2\n	.xword	.LC3\n	.xword	.LC4\n	.xword	.LC5\n	.xword	.LC6\n	.xword	.LC7\n	.xword	.LC8\n	.xword	.LC9\n	.bss\n	.align	4\n	.set	.LANCHOR1,. + 0\n	.type	out.0, %object\n	.size	out.0, 1000\nout.0:\n	.zero	1000\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -192]!\n	.cfi_def_cfa_offset 192\n	.cfi_offset 29, -192\n	.cfi_offset 30, -184\n	adrp	x1, .LANCHOR0\n	add	x1, x1, :lo12:.LANCHOR0\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -176\n	.cfi_offset 20, -168\n	add	x19, sp, 72\n	str	x23, [sp, 48]\n	.cfi_offset 23, -144\n	mov	x23, x0\n	ldp	q3, q4, [x1]\n	stp	xzr, xzr, [sp, 72]\n	ldrb	w0, [x0]\n	ldp	q1, q2, [x1, 32]\n	stp	xzr, xzr, [sp, 88]\n	ldr	q0, [x1, 64]\n	str	xzr, [sp, 104]\n	stp	q3, q4, [sp, 112]\n	stp	q1, q2, [sp, 144]\n	str	q0, [sp, 176]\n	cbz	w0, .L2\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -152\n	.cfi_offset 21, -160\n	and	w1, w0, -33\n	mov	x20, 1\n	cbz	w1, .L19\n	.p2align 3,,7\n.L4:\n	add	x1, sp, 64\n	mov	x2, x20\n	add	x1, x1, x20\n	strb	w0, [x1, -1]\n	ldrb	w0, [x23, x20]\n	add	x20, x20, 1\n	and	w1, w0, -33\n	cbnz	w1, .L4\n.L3:\n	add	x0, sp, 64\n	add	x22, sp, 112\n	mov	w21, 0\n	strb	wzr, [x0, w2, sxtw]\n	.p2align 3,,7\n.L7:\n	ldr	x1, [x22]\n	add	x0, sp, 64\n	bl	strcmp\n	cbz	w0, .L29\n	add	w21, w21, 1\n	add	x22, x22, 8\n	cmp	w21, 10\n	bne	.L7\n	add	x23, x23, x20\n	ldrb	w0, [x23, -1]\n	cbz	w0, .L30\n.L8:\n	ldrb	w0, [x23]\n	mov	x20, 1\n	and	w1, w0, -33\n	cbnz	w1, .L4\n.L19:\n	mov	w2, 0\n	b	.L3\n.L29:\n	sxtw	x21, w21\n	add	x23, x23, x20\n	ldr	w0, [x19, x21, lsl 2]\n	add	w0, w0, 1\n	str	w0, [x19, x21, lsl 2]\n	ldrb	w0, [x23, -1]\n	cbnz	w0, .L8\n.L30:\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L2:\n	adrp	x11, .LANCHOR1\n	add	x0, x11, :lo12:.LANCHOR1\n	mov	x10, 1\n	mov	w4, 0\n	mov	w9, 32\n	.p2align 3,,7\n.L9:\n	add	x1, x19, x10, lsl 2\n	ldr	w8, [x1, -4]\n	cmp	w8, 0\n	ble	.L12\n	add	x1, sp, 112\n	mov	w6, 0\n	add	x1, x1, x10, lsl 3\n	ldr	x7, [x1, -8]\n	.p2align 3,,7\n.L16:\n	sxtw	x5, w4\n	ldrb	w2, [x7]\n	add	w1, w4, 1\n	mvn	x5, x5\n	add	x5, x7, x5\n	sxtw	x1, w1\n	cbz	w2, .L14\n	.p2align 3,,7\n.L11:\n	add	x3, x0, x1\n	mov	x4, x1\n	add	x1, x1, 1\n	strb	w2, [x3, -1]\n	ldrb	w2, [x5, x1]\n	cbnz	w2, .L11\n.L14:\n	add	w6, w6, 1\n	strb	w9, [x0, w4, sxtw]\n	add	w4, w4, 1\n	cmp	w6, w8\n	bne	.L16\n.L12:\n	add	x10, x10, 1\n	cmp	x10, 11\n	bne	.L9\n	cmp	w4, 0\n	ble	.L17\n	sub	w4, w4, #1\n	strb	wzr, [x0, w4, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 192\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L17:\n	.cfi_restore_state\n	strb	wzr, [x11, #:lo12:.LANCHOR1]\n	ldp	x19, x20, [sp, 16]\n	ldr	x23, [sp, 48]\n	ldp	x29, x30, [sp], 192\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"zero\"\n	.align	3\n.LC1:\n	.string	\"one\"\n	.align	3\n.LC2:\n	.string	\"two\"\n	.align	3\n.LC3:\n	.string	\"three\"\n	.align	3\n.LC4:\n	.string	\"four\"\n	.align	3\n.LC5:\n	.string	\"five\"\n	.align	3\n.LC6:\n	.string	\"six\"\n	.align	3\n.LC7:\n	.string	\"seven\"\n	.align	3\n.LC8:\n	.string	\"eight\"\n	.align	3\n.LC9:\n	.string	\"nine\"\n	.section	.rodata\n	.align	3\n	.set	.LANCHOR0,. + 0\n.LC11:\n	.xword	.LC0\n	.xword	.LC1\n	.xword	.LC2\n	.xword	.LC3\n	.xword	.LC4\n	.xword	.LC5\n	.xword	.LC6\n	.xword	.LC7\n	.xword	.LC8\n	.xword	.LC9\n	.bss\n	.align	4\n	.set	.LANCHOR1,. + 0\n	.type	out.0, %object\n	.size	out.0, 1000\nout.0:\n	.zero	1000\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem21", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	ldr	s0, [x0]\n	str	s0, [x2]\n	ldr	s1, [x0, 4]\n	str	s1, [x2, 4]\n	cmp	w1, 0\n	ble	.L2\n	cmp	w1, 1\n	beq	.L7\n	sub	x5, x0, #4\n	mov	w3, 2139095039\n	mov	x4, 1\n	fmov	s2, w3\n	.p2align 3,,7\n.L3:\n	mov	x3, x4\n	.p2align 3,,7\n.L6:\n	ldr	s1, [x5, x4, lsl 2]\n	ldr	s0, [x0, x3, lsl 2]\n	fabd	s0, s1, s0\n	fcmpe	s0, s2\n	bmi	.L11\n.L4:\n	add	x3, x3, 1\n	cmp	w1, w3\n	bgt	.L6\n	add	x4, x4, 1\n	cmp	w1, w4\n	bgt	.L3\n.L7:\n	ldp	s0, s1, [x2]\n.L2:\n	fcmpe	s0, s1\n	bgt	.L12\n	ret\n	.p2align 2,,3\n.L11:\n	fmov	s2, s0\n	str	s1, [x2]\n	ldr	s0, [x0, x3, lsl 2]\n	str	s0, [x2, 4]\n	b	.L4\n.L12:\n	stp	s1, s0, [x2]\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	ldr	s0, [x0]\n	str	s0, [x2]\n	ldr	s1, [x0, 4]\n	str	s1, [x2, 4]\n	cmp	w1, 0\n	ble	.L2\n	cmp	w1, 1\n	beq	.L7\n	sub	x5, x0, #4\n	mov	w3, 2139095039\n	mov	x4, 1\n	fmov	s2, w3\n	.p2align 3,,7\n.L3:\n	mov	x3, x4\n	.p2align 3,,7\n.L6:\n	ldr	s1, [x5, x4, lsl 2]\n	ldr	s0, [x0, x3, lsl 2]\n	fabd	s0, s1, s0\n	fcmpe	s0, s2\n	bmi	.L11\n.L4:\n	add	x3, x3, 1\n	cmp	w1, w3\n	bgt	.L6\n	add	x4, x4, 1\n	cmp	w1, w4\n	bgt	.L3\n.L7:\n	ldp	s0, s1, [x2]\n.L2:\n	fcmpe	s0, s1\n	bgt	.L12\n	ret\n	.p2align 2,,3\n.L11:\n	fmov	s2, s0\n	str	s1, [x2]\n	ldr	s0, [x0, x3, lsl 2]\n	str	s0, [x2, 4]\n	b	.L4\n.L12:\n	stp	s1, s0, [x2]\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem22", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	ldr	s1, [x0]\n	cmp	w1, 1\n	ble	.L2\n	fmov	s2, s1\n	mov	x2, 1\n	.p2align 3,,7\n.L7:\n	ldr	s0, [x0, x2, lsl 2]\n	fcmpe	s1, s0\n	bgt	.L11\n.L3:\n	fcmpe	s2, s0\n	bmi	.L12\n.L5:\n	add	x2, x2, 1\n	cmp	w1, w2\n	bgt	.L7\n.L8:\n	fsub	s2, s2, s1\n	add	x1, x0, w1, sxtw 2\n	.p2align 3,,7\n.L10:\n	ldr	s0, [x0]\n	fsub	s0, s0, s1\n	fdiv	s0, s0, s2\n	str	s0, [x0], 4\n	cmp	x1, x0\n	bne	.L10\n.L1:\n	ret\n	.p2align 2,,3\n.L12:\n	fmov	s2, s0\n	b	.L5\n	.p2align 2,,3\n.L11:\n	fmov	s1, s0\n	b	.L3\n	.p2align 2,,3\n.L2:\n	bne	.L1\n	fmov	s2, s1\n	b	.L8\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	ldr	s1, [x0]\n	cmp	w1, 1\n	ble	.L2\n	fmov	s2, s1\n	mov	x2, 1\n	.p2align 3,,7\n.L7:\n	ldr	s0, [x0, x2, lsl 2]\n	fcmpe	s1, s0\n	bgt	.L11\n.L3:\n	fcmpe	s2, s0\n	bmi	.L12\n.L5:\n	add	x2, x2, 1\n	cmp	w1, w2\n	bgt	.L7\n.L8:\n	fsub	s2, s2, s1\n	add	x1, x0, w1, sxtw 2\n	.p2align 3,,7\n.L10:\n	ldr	s0, [x0]\n	fsub	s0, s0, s1\n	fdiv	s0, s0, s2\n	str	s0, [x0], 4\n	cmp	x1, x0\n	bne	.L10\n.L1:\n	ret\n	.p2align 2,,3\n.L12:\n	fmov	s2, s0\n	b	.L5\n	.p2align 2,,3\n.L11:\n	fmov	s1, s0\n	b	.L3\n	.p2align 2,,3\n.L2:\n	bne	.L1\n	fmov	s2, s1\n	b	.L8\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem23", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB34:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	mov	x20, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	adrp	x22, .LANCHOR0\n	mov	w21, 0\n	str	x23, [sp, 48]\n	.cfi_offset 23, -32\n	add	x22, x22, :lo12:.LANCHOR0\n	mov	x23, x1\n	ldrb	w19, [x0]\n	cbz	w19, .L3\n	.p2align 3,,7\n.L2:\n	bl	__ctype_b_loc\n	ldr	x2, [x0]\n	b	.L10\n	.p2align 2,,3\n.L26:\n	cmp	w19, 45\n	beq	.L4\n	ldrb	w19, [x20, 1]!\n	cbz	w19, .L3\n.L10:\n	ubfiz	x0, x19, 1, 8\n	ldrh	w0, [x2, x0]\n	tbz	x0, 11, .L26\n.L4:\n	mov	w2, 10\n	add	x1, sp, 72\n	mov	x0, x20\n	bl	strtol\n	ldr	x2, [sp, 72]\n	cmp	x2, x20\n	beq	.L27\n	ldrb	w1, [x2]\n	cmp	w1, 44\n	ccmp	w1, 0, 4, ne\n	bne	.L7\n	str	w0, [x22, w21, sxtw 2]\n	mov	x20, x2\n	add	w21, w21, 1\n	ldrb	w19, [x2]\n.L8:\n	cbnz	w19, .L2\n.L3:\n	ldp	x19, x20, [sp, 16]\n	str	w21, [x23]\n	ldr	x23, [sp, 48]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L27:\n	.cfi_restore_state\n	ldrb	w19, [x20]\n	cmp	w19, 44\n	ccmp	w19, 0, 4, ne\n	beq	.L8\n.L7:\n	add	x0, x2, 1\n	.p2align 3,,7\n.L9:\n	str	x0, [sp, 72]\n	mov	x20, x0\n	ldrb	w19, [x0], 1\n	cmp	w19, 44\n	ccmp	w19, 0, 4, ne\n	bne	.L9\n	cbnz	w19, .L2\n	b	.L3\n	.cfi_endproc\n.LFE34:\n	.size	func0, .-func0\n	.bss\n	.align	4\n	.set	.LANCHOR0,. + 0\n	.type	out.0, %object\n	.size	out.0, 1024\nout.0:\n	.zero	1024\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB34:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	mov	x20, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	adrp	x22, .LANCHOR0\n	mov	w21, 0\n	str	x23, [sp, 48]\n	.cfi_offset 23, -32\n	add	x22, x22, :lo12:.LANCHOR0\n	mov	x23, x1\n	ldrb	w19, [x0]\n	cbz	w19, .L3\n	.p2align 3,,7\n.L2:\n	bl	__ctype_b_loc\n	ldr	x2, [x0]\n	b	.L10\n	.p2align 2,,3\n.L26:\n	cmp	w19, 45\n	beq	.L4\n	ldrb	w19, [x20, 1]!\n	cbz	w19, .L3\n.L10:\n	ubfiz	x0, x19, 1, 8\n	ldrh	w0, [x2, x0]\n	tbz	x0, 11, .L26\n.L4:\n	mov	w2, 10\n	add	x1, sp, 72\n	mov	x0, x20\n	bl	strtol\n	ldr	x2, [sp, 72]\n	cmp	x2, x20\n	beq	.L27\n	ldrb	w1, [x2]\n	cmp	w1, 44\n	ccmp	w1, 0, 4, ne\n	bne	.L7\n	str	w0, [x22, w21, sxtw 2]\n	mov	x20, x2\n	add	w21, w21, 1\n	ldrb	w19, [x2]\n.L8:\n	cbnz	w19, .L2\n.L3:\n	ldp	x19, x20, [sp, 16]\n	str	w21, [x23]\n	ldr	x23, [sp, 48]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L27:\n	.cfi_restore_state\n	ldrb	w19, [x20]\n	cmp	w19, 44\n	ccmp	w19, 0, 4, ne\n	beq	.L8\n.L7:\n	add	x0, x2, 1\n	.p2align 3,,7\n.L9:\n	str	x0, [sp, 72]\n	mov	x20, x0\n	ldrb	w19, [x0], 1\n	cmp	w19, 44\n	ccmp	w19, 0, 4, ne\n	bne	.L9\n	cbnz	w19, .L2\n	b	.L3\n	.cfi_endproc\n.LFE34:\n	.size	func0, .-func0\n	.bss\n	.align	4\n	.set	.LANCHOR0,. + 0\n	.type	out.0, %object\n	.size	out.0, 1024\nout.0:\n	.zero	1024\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem24", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	ldrb	w1, [x0]\n	cbz	w1, .L3\n	stp	x29, x30, [sp, -16]!\n	.cfi_def_cfa_offset 16\n	.cfi_offset 29, -16\n	.cfi_offset 30, -8\n	add	x0, x0, 1\n	mov	x29, sp\n	bl	strlen\n	add	w0, w0, 1\n	ldp	x29, x30, [sp], 16\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L3:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	ldrb	w1, [x0]\n	cbz	w1, .L3\n	stp	x29, x30, [sp, -16]!\n	.cfi_def_cfa_offset 16\n	.cfi_offset 29, -16\n	.cfi_offset 30, -8\n	add	x0, x0, 1\n	mov	x29, sp\n	bl	strlen\n	add	w0, w0, 1\n	ldp	x29, x30, [sp], 16\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L3:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem25", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, w0\n	cmp	w0, 3\n	ble	.L6\n	and	w0, w0, 1\n	mov	w1, 2\n	tbnz	x2, 0, .L4\n	b	.L7\n	.p2align 2,,3\n.L5:\n	sdiv	w3, w2, w1\n	msub	w4, w3, w1, w2\n	cbz	w4, .L3\n.L4:\n	add	w1, w1, 1\n	mul	w3, w1, w1\n	cmp	w3, w2\n	ble	.L5\n	ret\n.L7:\n	sdiv	w3, w2, w1\n.L3:\n	mov	w0, w3\n	ret\n.L6:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, w0\n	cmp	w0, 3\n	ble	.L6\n	and	w0, w0, 1\n	mov	w1, 2\n	tbnz	x2, 0, .L4\n	b	.L7\n	.p2align 2,,3\n.L5:\n	sdiv	w3, w2, w1\n	msub	w4, w3, w1, w2\n	cbz	w4, .L3\n.L4:\n	add	w1, w1, 1\n	mul	w3, w1, w1\n	cmp	w3, w2\n	ble	.L5\n	ret\n.L7:\n	sdiv	w3, w2, w1\n.L3:\n	mov	w0, w3\n	ret\n.L6:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem26", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	mov	x20, x1\n	mov	w19, w0\n	mov	x0, 256\n	bl	malloc\n	str	wzr, [x20]\n	sub	x7, x0, #4\n	mov	w3, 2\n	cmp	w19, 3\n	ble	.L3\n	.p2align 3,,7\n.L2:\n	udiv	w2, w19, w3\n	msub	w2, w2, w3, w19\n	cbnz	w2, .L6\n	sdiv	w4, w19, w3\n	ldr	w2, [x20]\n	add	w2, w2, 1\n	sxtw	x2, w2\n	.p2align 3,,7\n.L4:\n	mov	w19, w4\n	str	w3, [x7, x2, lsl 2]\n	sdiv	w4, w4, w3\n	mov	x6, x2\n	add	x2, x2, 1\n	msub	w5, w4, w3, w19\n	cbz	w5, .L4\n	str	w6, [x20]\n.L6:\n	add	w3, w3, 1\n	mul	w1, w3, w3\n	cmp	w1, w19\n	ble	.L2\n.L3:\n	cmp	w19, 1\n	ble	.L1\n	ldr	w1, [x20]\n	add	w2, w1, 1\n	str	w2, [x20]\n	str	w19, [x0, w1, sxtw 2]\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	mov	x20, x1\n	mov	w19, w0\n	mov	x0, 256\n	bl	malloc\n	str	wzr, [x20]\n	sub	x7, x0, #4\n	mov	w3, 2\n	cmp	w19, 3\n	ble	.L3\n	.p2align 3,,7\n.L2:\n	udiv	w2, w19, w3\n	msub	w2, w2, w3, w19\n	cbnz	w2, .L6\n	sdiv	w4, w19, w3\n	ldr	w2, [x20]\n	add	w2, w2, 1\n	sxtw	x2, w2\n	.p2align 3,,7\n.L4:\n	mov	w19, w4\n	str	w3, [x7, x2, lsl 2]\n	sdiv	w4, w4, w3\n	mov	x6, x2\n	add	x2, x2, 1\n	msub	w5, w4, w3, w19\n	cbz	w5, .L4\n	str	w6, [x20]\n.L6:\n	add	w3, w3, 1\n	mul	w1, w3, w3\n	cmp	w1, w19\n	ble	.L2\n.L3:\n	cmp	w19, 1\n	ble	.L1\n	ldr	w1, [x20]\n	add	w2, w1, 1\n	str	w2, [x20]\n	str	w19, [x0, w1, sxtw 2]\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem27", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	sxtw	x20, w1\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	sbfiz	x21, x20, 2, 32\n	mov	x0, x21\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x24, x20\n	str	x25, [sp, 64]\n	.cfi_offset 25, -16\n	mov	x25, x2\n	bl	malloc\n	mov	x23, x0\n	mov	x1, 4\n	mov	x0, x20\n	bl	calloc\n	mov	x22, x0\n	mov	x1, 4\n	mov	x0, x20\n	bl	calloc\n	mov	x20, x0\n	cmp	w24, 0\n	ble	.L18\n	mov	x6, x19\n	add	x8, x19, x21\n	mov	x7, x19\n	mov	w9, 0\n	mov	w10, 0\n	.p2align 3,,7\n.L9:\n	ldr	w5, [x7]\n	cmp	w9, 0\n	ble	.L3\n	add	x4, x20, w9, sxtw 2\n.L17:\n	mov	x1, x20\n	b	.L5\n	.p2align 2,,3\n.L28:\n	cmp	x1, x4\n	beq	.L3\n.L5:\n	ldr	w3, [x1]\n	add	x1, x1, 4\n	cmp	w3, w5\n	bne	.L28\n	add	x7, x7, 4\n	cmp	x7, x8\n	beq	.L16\n	ldr	w5, [x7]\n	b	.L17\n	.p2align 2,,3\n.L3:\n	cmp	w10, 0\n	ble	.L6\n	mov	x1, x22\n	add	x4, x22, w10, sxtw 2\n	b	.L8\n	.p2align 2,,3\n.L29:\n	cmp	x1, x4\n	beq	.L6\n.L8:\n	ldr	w3, [x1]\n	add	x1, x1, 4\n	cmp	w5, w3\n	bne	.L29\n	str	w5, [x20, w9, sxtw 2]\n	add	w9, w9, 1\n.L15:\n	add	x7, x7, 4\n	cmp	x7, x8\n	bne	.L9\n	add	x4, x20, w9, sxtw 2\n.L16:\n	mov	w7, 0\n	.p2align 3,,7\n.L13:\n	ldr	w5, [x6]\n	cmp	w9, 0\n	ble	.L10\n.L14:\n	mov	x1, x20\n	b	.L12\n	.p2align 2,,3\n.L30:\n	cmp	x4, x1\n	beq	.L10\n.L12:\n	ldr	w3, [x1]\n	add	x1, x1, 4\n	cmp	w5, w3\n	bne	.L30\n	add	x6, x6, 4\n	cmp	x6, x8\n	beq	.L2\n	ldr	w5, [x6]\n	b	.L14\n	.p2align 2,,3\n.L6:\n	str	w5, [x22, w10, sxtw 2]\n	add	w10, w10, 1\n	b	.L15\n	.p2align 2,,3\n.L10:\n	add	x6, x6, 4\n	str	w5, [x23, w7, sxtw 2]\n	add	w7, w7, 1\n	cmp	x6, x8\n	bne	.L13\n.L2:\n	str	w7, [x25]\n	mov	x0, x22\n	bl	free\n	mov	x0, x20\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x23\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L18:\n	.cfi_restore_state\n	mov	w7, 0\n	b	.L2\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	sxtw	x20, w1\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	sbfiz	x21, x20, 2, 32\n	mov	x0, x21\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x24, x20\n	str	x25, [sp, 64]\n	.cfi_offset 25, -16\n	mov	x25, x2\n	bl	malloc\n	mov	x23, x0\n	mov	x1, 4\n	mov	x0, x20\n	bl	calloc\n	mov	x22, x0\n	mov	x1, 4\n	mov	x0, x20\n	bl	calloc\n	mov	x20, x0\n	cmp	w24, 0\n	ble	.L18\n	mov	x6, x19\n	add	x8, x19, x21\n	mov	x7, x19\n	mov	w9, 0\n	mov	w10, 0\n	.p2align 3,,7\n.L9:\n	ldr	w5, [x7]\n	cmp	w9, 0\n	ble	.L3\n	add	x4, x20, w9, sxtw 2\n.L17:\n	mov	x1, x20\n	b	.L5\n	.p2align 2,,3\n.L28:\n	cmp	x1, x4\n	beq	.L3\n.L5:\n	ldr	w3, [x1]\n	add	x1, x1, 4\n	cmp	w3, w5\n	bne	.L28\n	add	x7, x7, 4\n	cmp	x7, x8\n	beq	.L16\n	ldr	w5, [x7]\n	b	.L17\n	.p2align 2,,3\n.L3:\n	cmp	w10, 0\n	ble	.L6\n	mov	x1, x22\n	add	x4, x22, w10, sxtw 2\n	b	.L8\n	.p2align 2,,3\n.L29:\n	cmp	x1, x4\n	beq	.L6\n.L8:\n	ldr	w3, [x1]\n	add	x1, x1, 4\n	cmp	w5, w3\n	bne	.L29\n	str	w5, [x20, w9, sxtw 2]\n	add	w9, w9, 1\n.L15:\n	add	x7, x7, 4\n	cmp	x7, x8\n	bne	.L9\n	add	x4, x20, w9, sxtw 2\n.L16:\n	mov	w7, 0\n	.p2align 3,,7\n.L13:\n	ldr	w5, [x6]\n	cmp	w9, 0\n	ble	.L10\n.L14:\n	mov	x1, x20\n	b	.L12\n	.p2align 2,,3\n.L30:\n	cmp	x4, x1\n	beq	.L10\n.L12:\n	ldr	w3, [x1]\n	add	x1, x1, 4\n	cmp	w5, w3\n	bne	.L30\n	add	x6, x6, 4\n	cmp	x6, x8\n	beq	.L2\n	ldr	w5, [x6]\n	b	.L14\n	.p2align 2,,3\n.L6:\n	str	w5, [x22, w10, sxtw 2]\n	add	w10, w10, 1\n	b	.L15\n	.p2align 2,,3\n.L10:\n	add	x6, x6, 4\n	str	w5, [x23, w7, sxtw 2]\n	add	w7, w7, 1\n	cmp	x6, x8\n	bne	.L13\n.L2:\n	str	w7, [x25]\n	mov	x0, x22\n	bl	free\n	mov	x0, x20\n	bl	free\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x23\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L18:\n	.cfi_restore_state\n	mov	w7, 0\n	b	.L2\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem28", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	mov	x19, x1\n	mov	x20, x0\n	bl	strlen\n	cmp	w0, 0\n	ble	.L2\n	mov	w1, w0\n	mov	x3, 0\n	b	.L5\n	.p2align 2,,3\n.L9:\n	and	w2, w7, 255\n	strb	w2, [x19, x3]\n	add	x3, x3, 1\n	cmp	w1, w3\n	ble	.L2\n.L5:\n	ldrb	w2, [x20, x3]\n	sub	w5, w2, #65\n	add	w4, w2, 32\n	and	w6, w5, 255\n	and	w5, w4, 255\n	sub	w4, w2, #97\n	sub	w7, w2, #32\n	and	w4, w4, 255\n	cmp	w4, 25\n	bls	.L9\n	cmp	w6, 26\n	csel	w2, w5, w2, cc\n	strb	w2, [x19, x3]\n	add	x3, x3, 1\n	cmp	w1, w3\n	bgt	.L5\n.L2:\n	strb	wzr, [x19, w0, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	mov	x19, x1\n	mov	x20, x0\n	bl	strlen\n	cmp	w0, 0\n	ble	.L2\n	mov	w1, w0\n	mov	x3, 0\n	b	.L5\n	.p2align 2,,3\n.L9:\n	and	w2, w7, 255\n	strb	w2, [x19, x3]\n	add	x3, x3, 1\n	cmp	w1, w3\n	ble	.L2\n.L5:\n	ldrb	w2, [x20, x3]\n	sub	w5, w2, #65\n	add	w4, w2, 32\n	and	w6, w5, 255\n	and	w5, w4, 255\n	sub	w4, w2, #97\n	sub	w7, w2, #32\n	and	w4, w4, 255\n	cmp	w4, 25\n	bls	.L9\n	cmp	w6, 26\n	csel	w2, w5, w2, cc\n	strb	w2, [x19, x3]\n	add	x3, x3, 1\n	cmp	w1, w3\n	bgt	.L5\n.L2:\n	strb	wzr, [x19, w0, sxtw]\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem29", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	cmp	w1, 0\n	ble	.L16\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -24\n	.cfi_offset 19, -32\n	mov	x19, x0\n	mov	x20, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -8\n	.cfi_offset 21, -16\n	add	x21, x0, w1, sxtw 3\n	mov	w22, 0\n	.p2align 3,,7\n.L5:\n	ldr	x0, [x20], 8\n	bl	strlen\n	add	w22, w22, w0\n	cmp	x21, x20\n	bne	.L5\n	add	w0, w22, 1\n	sxtw	x0, w0\n	bl	malloc\n	mov	x2, x0\n	cbz	x0, .L14\n	strb	wzr, [x0]\n	.p2align 3,,7\n.L7:\n	ldr	x1, [x19], 8\n	mov	x0, x2\n	bl	strcat\n	mov	x2, x0\n	cmp	x21, x19\n	bne	.L7\n.L14:\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L1:\n	mov	x0, x2\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L16:\n	.cfi_restore_state\n	mov	x0, 1\n	bl	malloc\n	mov	x2, x0\n	cbz	x0, .L1\n	strb	wzr, [x0]\n	mov	x0, x2\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	cmp	w1, 0\n	ble	.L16\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -24\n	.cfi_offset 19, -32\n	mov	x19, x0\n	mov	x20, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -8\n	.cfi_offset 21, -16\n	add	x21, x0, w1, sxtw 3\n	mov	w22, 0\n	.p2align 3,,7\n.L5:\n	ldr	x0, [x20], 8\n	bl	strlen\n	add	w22, w22, w0\n	cmp	x21, x20\n	bne	.L5\n	add	w0, w22, 1\n	sxtw	x0, w0\n	bl	malloc\n	mov	x2, x0\n	cbz	x0, .L14\n	strb	wzr, [x0]\n	.p2align 3,,7\n.L7:\n	ldr	x1, [x19], 8\n	mov	x0, x2\n	bl	strcat\n	mov	x2, x0\n	cmp	x21, x19\n	bne	.L7\n.L14:\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L1:\n	mov	x0, x2\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L16:\n	.cfi_restore_state\n	mov	x0, 1\n	bl	malloc\n	mov	x2, x0\n	cbz	x0, .L1\n	strb	wzr, [x0]\n	mov	x0, x2\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem3", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	fcvtzs	s1, s0\n	scvtf	s1, s1\n	fsub	s0, s0, s1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	fcvtzs	s1, s0\n	scvtf	s1, s1\n	fsub	s0, s0, s1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem30", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	mov	w20, w1\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	x21, x3\n	mov	x0, x2\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x23, x2\n	sbfiz	x24, x20, 3, 32\n	bl	strlen\n	mov	x22, x0\n	mov	x0, x24\n	bl	malloc\n	str	x0, [x21]\n	cmp	w20, 0\n	ble	.L5\n	sxtw	x22, w22\n	add	x24, x19, x24\n	str	x25, [sp, 64]\n	.cfi_offset 25, -16\n	mov	x25, x0\n	mov	w21, 0\n	.p2align 3,,7\n.L4:\n	ldr	x20, [x19]\n	mov	x2, x22\n	mov	x1, x23\n	add	x19, x19, 8\n	mov	x0, x20\n	bl	strncmp\n	cbnz	w0, .L3\n	str	x20, [x25, w21, sxtw 3]\n	add	w21, w21, 1\n.L3:\n	cmp	x19, x24\n	bne	.L4\n	ldp	x19, x20, [sp, 16]\n	mov	w0, w21\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	.cfi_restore 25\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 80\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	w21, 0\n	mov	w0, w21\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	mov	w20, w1\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	x21, x3\n	mov	x0, x2\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x23, x2\n	sbfiz	x24, x20, 3, 32\n	bl	strlen\n	mov	x22, x0\n	mov	x0, x24\n	bl	malloc\n	str	x0, [x21]\n	cmp	w20, 0\n	ble	.L5\n	sxtw	x22, w22\n	add	x24, x19, x24\n	str	x25, [sp, 64]\n	.cfi_offset 25, -16\n	mov	x25, x0\n	mov	w21, 0\n	.p2align 3,,7\n.L4:\n	ldr	x20, [x19]\n	mov	x2, x22\n	mov	x1, x23\n	add	x19, x19, 8\n	mov	x0, x20\n	bl	strncmp\n	cbnz	w0, .L3\n	str	x20, [x25, w21, sxtw 3]\n	add	w21, w21, 1\n.L3:\n	cmp	x19, x24\n	bne	.L4\n	ldp	x19, x20, [sp, 16]\n	mov	w0, w21\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	.cfi_restore 25\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 80\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	w21, 0\n	mov	w0, w21\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem31", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x2\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	sbfiz	x21, x1, 2, 32\n	mov	w22, w1\n	mov	x0, x21\n	bl	malloc\n	str	wzr, [x20]\n	cmp	w22, 0\n	ble	.L1\n	mov	x1, x19\n	add	x2, x19, x21\n	.p2align 3,,7\n.L5:\n	ldr	s0, [x1]\n	fcmpe	s0, #0.0\n	bgt	.L6\n.L3:\n	add	x1, x1, 4\n	cmp	x1, x2\n	bne	.L5\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L6:\n	.cfi_restore_state\n	ldr	w3, [x20]\n	add	w4, w3, 1\n	str	w4, [x20]\n	str	s0, [x0, w3, sxtw 2]\n	b	.L3\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x2\n	mov	x19, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	sbfiz	x21, x1, 2, 32\n	mov	w22, w1\n	mov	x0, x21\n	bl	malloc\n	str	wzr, [x20]\n	cmp	w22, 0\n	ble	.L1\n	mov	x1, x19\n	add	x2, x19, x21\n	.p2align 3,,7\n.L5:\n	ldr	s0, [x1]\n	fcmpe	s0, #0.0\n	bgt	.L6\n.L3:\n	add	x1, x1, 4\n	cmp	x1, x2\n	bne	.L5\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L6:\n	.cfi_restore_state\n	ldr	w3, [x20]\n	add	w4, w3, 1\n	str	w4, [x20]\n	str	s0, [x0, w3, sxtw 2]\n	b	.L3\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem32", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB0:\n	.cfi_startproc\n	cmp	x0, 1\n	ble	.L8\n	cmp	x0, 3\n	ble	.L6\n	tbz	x0, 0, .L8\n	mov	x1, 2\n	b	.L3\n	.p2align 2,,3\n.L4:\n	sdiv	x2, x0, x1\n	msub	x2, x2, x1, x0\n	cbz	x2, .L8\n.L3:\n	add	x1, x1, 1\n	mul	x2, x1, x1\n	cmp	x2, x0\n	ble	.L4\n.L6:\n	mov	w0, 1\n	ret\n	.p2align 2,,3\n.L8:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE0:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB0:\n	.cfi_startproc\n	cmp	x0, 1\n	ble	.L8\n	cmp	x0, 3\n	ble	.L6\n	tbz	x0, 0, .L8\n	mov	x1, 2\n	b	.L3\n	.p2align 2,,3\n.L4:\n	sdiv	x2, x0, x1\n	msub	x2, x2, x1, x0\n	cbz	x2, .L8\n.L3:\n	add	x1, x1, 1\n	mul	x2, x1, x1\n	cmp	x2, x0\n	ble	.L4\n.L6:\n	mov	w0, 1\n	ret\n	.p2align 2,,3\n.L8:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE0:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem33", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	ldr	d6, [x0]\n	mov	w3, w1\n	movi	d1, #0\n	mov	x4, x0\n	mov	x1, 1\n	fmov	d3, d6\n	cmp	w3, 1\n	ble	.L3\n	.p2align 3,,7\n.L2:\n	mov	w0, 0\n	fmov	d0, 1.0e+0\n	.p2align 3,,7\n.L4:\n	add	w0, w0, 1\n	fmul	d0, d0, d1\n	cmp	w0, w1\n	bne	.L4\n	ldr	d2, [x4, x1, lsl 3]\n	add	x1, x1, 1\n	fmadd	d3, d2, d0, d3\n	cmp	w3, w1\n	bgt	.L2\n.L3:\n	adrp	x0, .LC0\n	fabs	d0, d3\n	ldr	d7, [x0, #:lo12:.LC0]\n	fcmpe	d0, d7\n	movi	d0, #0\n	bgt	.L5\n	ret\n.L5:\n	cmp	w3, 1\n	ble	.L19\n	.p2align 3,,7\n.L14:\n	movi	d4, #0\n	mov	x2, 1\n	.p2align 3,,7\n.L15:\n	mov	w5, w2\n	mov	w1, w2\n	mov	w0, 1\n	fmov	d1, 1.0e+0\n	cmp	w2, w0\n	beq	.L9\n	.p2align 3,,7\n.L7:\n	add	w0, w0, 1\n	fmul	d1, d1, d0\n	cmp	w0, w1\n	bne	.L7\n.L9:\n	scvtf	d2, w5\n	ldr	d5, [x4, x2, lsl 3]\n	add	x2, x2, 1\n	fmul	d2, d2, d5\n	fmadd	d4, d2, d1, d4\n	cmp	w3, w2\n	bgt	.L15\n	fdiv	d4, d3, d4\n	fmov	d3, d6\n	mov	x1, 1\n	fsub	d0, d0, d4\n	.p2align 3,,7\n.L11:\n	mov	w0, 0\n	fmov	d1, 1.0e+0\n	.p2align 3,,7\n.L12:\n	add	w0, w0, 1\n	fmul	d1, d1, d0\n	cmp	w0, w1\n	bne	.L12\n	ldr	d2, [x4, x1, lsl 3]\n	add	x1, x1, 1\n	fmadd	d3, d2, d1, d3\n	cmp	w3, w1\n	bgt	.L11\n	fabs	d1, d3\n	fcmpe	d1, d7\n	bgt	.L14\n	ret\n.L19:\n	fabs	d2, d6\n	fmov	d1, d0\n.L10:\n	fdiv	d4, d3, d1\n	fcmpe	d2, d7\n	fmov	d3, d6\n	fsub	d0, d0, d4\n	bgt	.L10\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.section	.rodata.cst8,\"aM\",@progbits,8\n	.align	3\n.LC0:\n	.word	-1598689907\n	.word	1051772663\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	ldr	d6, [x0]\n	mov	w3, w1\n	movi	d1, #0\n	mov	x4, x0\n	mov	x1, 1\n	fmov	d3, d6\n	cmp	w3, 1\n	ble	.L3\n	.p2align 3,,7\n.L2:\n	mov	w0, 0\n	fmov	d0, 1.0e+0\n	.p2align 3,,7\n.L4:\n	add	w0, w0, 1\n	fmul	d0, d0, d1\n	cmp	w0, w1\n	bne	.L4\n	ldr	d2, [x4, x1, lsl 3]\n	add	x1, x1, 1\n	fmadd	d3, d2, d0, d3\n	cmp	w3, w1\n	bgt	.L2\n.L3:\n	adrp	x0, .LC0\n	fabs	d0, d3\n	ldr	d7, [x0, #:lo12:.LC0]\n	fcmpe	d0, d7\n	movi	d0, #0\n	bgt	.L5\n	ret\n.L5:\n	cmp	w3, 1\n	ble	.L19\n	.p2align 3,,7\n.L14:\n	movi	d4, #0\n	mov	x2, 1\n	.p2align 3,,7\n.L15:\n	mov	w5, w2\n	mov	w1, w2\n	mov	w0, 1\n	fmov	d1, 1.0e+0\n	cmp	w2, w0\n	beq	.L9\n	.p2align 3,,7\n.L7:\n	add	w0, w0, 1\n	fmul	d1, d1, d0\n	cmp	w0, w1\n	bne	.L7\n.L9:\n	scvtf	d2, w5\n	ldr	d5, [x4, x2, lsl 3]\n	add	x2, x2, 1\n	fmul	d2, d2, d5\n	fmadd	d4, d2, d1, d4\n	cmp	w3, w2\n	bgt	.L15\n	fdiv	d4, d3, d4\n	fmov	d3, d6\n	mov	x1, 1\n	fsub	d0, d0, d4\n	.p2align 3,,7\n.L11:\n	mov	w0, 0\n	fmov	d1, 1.0e+0\n	.p2align 3,,7\n.L12:\n	add	w0, w0, 1\n	fmul	d1, d1, d0\n	cmp	w0, w1\n	bne	.L12\n	ldr	d2, [x4, x1, lsl 3]\n	add	x1, x1, 1\n	fmadd	d3, d2, d1, d3\n	cmp	w3, w1\n	bgt	.L11\n	fabs	d1, d3\n	fcmpe	d1, d7\n	bgt	.L14\n	ret\n.L19:\n	fabs	d2, d6\n	fmov	d1, d0\n.L10:\n	fdiv	d4, d3, d1\n	fcmpe	d2, d7\n	fmov	d3, d6\n	fsub	d0, d0, d4\n	bgt	.L10\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.section	.rodata.cst8,\"aM\",@progbits,8\n	.align	3\n.LC0:\n	.word	-1598689907\n	.word	1051772663\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem34", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	w3, 21846\n	movk	w3, 0x5555, lsl 16\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	sxtw	x19, w1\n	mov	x20, x0\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	mov	x21, x2\n	smull	x0, w19, w3\n	lsr	x0, x0, 32\n	sub	w0, w0, w19, asr 31\n	add	w0, w0, 1\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	mov	x3, 0\n	mov	x4, x0\n	mov	w1, 0\n	cmp	w19, 0\n	ble	.L12\n	.p2align 3,,7\n.L3:\n	ldr	w5, [x20, x3, lsl 2]\n	add	x3, x3, 3\n	str	w5, [x4], 4\n	mov	w9, w1\n	add	w1, w1, 1\n	cmp	w19, w3\n	bgt	.L3\n	mov	x8, 0\n	cmp	w1, 1\n	beq	.L9\n	.p2align 3,,7\n.L4:\n	add	x10, x8, 1\n	sub	w7, w9, w8\n	mov	w4, w8\n	mov	w1, w8\n	mov	x3, x10\n	add	x7, x7, x10\n	cmp	w8, w9\n	bge	.L6\n	.p2align 3,,7\n.L8:\n	ldr	w6, [x0, w4, sxtw 2]\n	ldr	w5, [x0, x3, lsl 2]\n	cmp	w6, w5\n	csel	w4, w4, w3, le\n	add	x3, x3, 1\n	cmp	x3, x7\n	bne	.L8\n	cmp	w4, w1\n	beq	.L6\n	sxtw	x4, w4\n	ldr	w1, [x0, x8, lsl 2]\n	ldr	w2, [x0, x4, lsl 2]\n	str	w2, [x0, x8, lsl 2]\n	str	w1, [x0, x4, lsl 2]\n.L6:\n	mov	x8, x10\n	cmp	w9, w10\n	bgt	.L4\n.L9:\n	mov	w4, 43691\n	mov	x1, 0\n	movk	w4, 0xaaaa, lsl 16\n	mov	w2, 1431655765\n	b	.L5\n	.p2align 2,,3\n.L25:\n	ldr	w3, [x0, x3, lsl 2]\n	str	w3, [x21, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x19, x1\n	beq	.L12\n.L5:\n	umull	x3, w1, w4\n	mul	w5, w4, w1\n	lsr	x3, x3, 33\n	cmp	w5, w2\n	bls	.L25\n	ldr	w3, [x20, x1, lsl 2]\n	str	w3, [x21, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x19, x1\n	bne	.L5\n.L12:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	b	free\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	w3, 21846\n	movk	w3, 0x5555, lsl 16\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	sxtw	x19, w1\n	mov	x20, x0\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	mov	x21, x2\n	smull	x0, w19, w3\n	lsr	x0, x0, 32\n	sub	w0, w0, w19, asr 31\n	add	w0, w0, 1\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	mov	x3, 0\n	mov	x4, x0\n	mov	w1, 0\n	cmp	w19, 0\n	ble	.L12\n	.p2align 3,,7\n.L3:\n	ldr	w5, [x20, x3, lsl 2]\n	add	x3, x3, 3\n	str	w5, [x4], 4\n	mov	w9, w1\n	add	w1, w1, 1\n	cmp	w19, w3\n	bgt	.L3\n	mov	x8, 0\n	cmp	w1, 1\n	beq	.L9\n	.p2align 3,,7\n.L4:\n	add	x10, x8, 1\n	sub	w7, w9, w8\n	mov	w4, w8\n	mov	w1, w8\n	mov	x3, x10\n	add	x7, x7, x10\n	cmp	w8, w9\n	bge	.L6\n	.p2align 3,,7\n.L8:\n	ldr	w6, [x0, w4, sxtw 2]\n	ldr	w5, [x0, x3, lsl 2]\n	cmp	w6, w5\n	csel	w4, w4, w3, le\n	add	x3, x3, 1\n	cmp	x3, x7\n	bne	.L8\n	cmp	w4, w1\n	beq	.L6\n	sxtw	x4, w4\n	ldr	w1, [x0, x8, lsl 2]\n	ldr	w2, [x0, x4, lsl 2]\n	str	w2, [x0, x8, lsl 2]\n	str	w1, [x0, x4, lsl 2]\n.L6:\n	mov	x8, x10\n	cmp	w9, w10\n	bgt	.L4\n.L9:\n	mov	w4, 43691\n	mov	x1, 0\n	movk	w4, 0xaaaa, lsl 16\n	mov	w2, 1431655765\n	b	.L5\n	.p2align 2,,3\n.L25:\n	ldr	w3, [x0, x3, lsl 2]\n	str	w3, [x21, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x19, x1\n	beq	.L12\n.L5:\n	umull	x3, w1, w4\n	mul	w5, w4, w1\n	lsr	x3, x3, 33\n	cmp	w5, w2\n	bls	.L25\n	ldr	w3, [x20, x1, lsl 2]\n	str	w3, [x21, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x19, x1\n	bne	.L5\n.L12:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	b	free\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem35", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	sbfiz	x20, x1, 2, 32\n	mov	x19, x0\n	mov	x0, x20\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	mov	w21, w1\n	mov	x22, x2\n	bl	malloc\n	cmp	w21, 0\n	ble	.L14\n	mov	x7, x19\n	add	x8, x19, x20\n	mov	w6, 0\n	.p2align 3,,7\n.L3:\n	ldr	w4, [x7]\n	add	x5, x0, w6, sxtw 2\n	cmp	w6, 0\n	ble	.L8\n.L7:\n	mov	x1, x0\n	b	.L5\n	.p2align 2,,3\n.L26:\n	cmp	x5, x1\n	beq	.L8\n.L5:\n	ldr	w3, [x1]\n	add	x1, x1, 4\n	cmp	w3, w4\n	bne	.L26\n	add	x7, x7, 4\n	cmp	x7, x8\n	beq	.L6\n	ldr	w4, [x7]\n	b	.L7\n	.p2align 2,,3\n.L8:\n	add	x7, x7, 4\n	str	w4, [x0, w6, sxtw 2]\n	add	w6, w6, 1\n	cmp	x7, x8\n	bne	.L3\n.L6:\n	cmp	w6, 1\n	ble	.L2\n	uxtw	x8, w6\n	sub	x7, x0, #4\n	mov	x5, 1\n	.p2align 3,,7\n.L11:\n	mov	x1, x5\n	cmp	w6, w5\n	ble	.L13\n	.p2align 3,,7\n.L10:\n	ldr	w3, [x7, x5, lsl 2]\n	ldr	w4, [x0, x1, lsl 2]\n	cmp	w3, w4\n	ble	.L12\n	str	w4, [x7, x5, lsl 2]\n	str	w3, [x0, x1, lsl 2]\n.L12:\n	add	x1, x1, 1\n	cmp	w6, w1\n	bgt	.L10\n.L13:\n	add	x5, x5, 1\n	cmp	x5, x8\n	bne	.L11\n.L2:\n	ldp	x19, x20, [sp, 16]\n	str	w6, [x22]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L14:\n	.cfi_restore_state\n	ldp	x19, x20, [sp, 16]\n	mov	w6, 0\n	str	w6, [x22]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	sbfiz	x20, x1, 2, 32\n	mov	x19, x0\n	mov	x0, x20\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -16\n	.cfi_offset 22, -8\n	mov	w21, w1\n	mov	x22, x2\n	bl	malloc\n	cmp	w21, 0\n	ble	.L14\n	mov	x7, x19\n	add	x8, x19, x20\n	mov	w6, 0\n	.p2align 3,,7\n.L3:\n	ldr	w4, [x7]\n	add	x5, x0, w6, sxtw 2\n	cmp	w6, 0\n	ble	.L8\n.L7:\n	mov	x1, x0\n	b	.L5\n	.p2align 2,,3\n.L26:\n	cmp	x5, x1\n	beq	.L8\n.L5:\n	ldr	w3, [x1]\n	add	x1, x1, 4\n	cmp	w3, w4\n	bne	.L26\n	add	x7, x7, 4\n	cmp	x7, x8\n	beq	.L6\n	ldr	w4, [x7]\n	b	.L7\n	.p2align 2,,3\n.L8:\n	add	x7, x7, 4\n	str	w4, [x0, w6, sxtw 2]\n	add	w6, w6, 1\n	cmp	x7, x8\n	bne	.L3\n.L6:\n	cmp	w6, 1\n	ble	.L2\n	uxtw	x8, w6\n	sub	x7, x0, #4\n	mov	x5, 1\n	.p2align 3,,7\n.L11:\n	mov	x1, x5\n	cmp	w6, w5\n	ble	.L13\n	.p2align 3,,7\n.L10:\n	ldr	w3, [x7, x5, lsl 2]\n	ldr	w4, [x0, x1, lsl 2]\n	cmp	w3, w4\n	ble	.L12\n	str	w4, [x7, x5, lsl 2]\n	str	w3, [x0, x1, lsl 2]\n.L12:\n	add	x1, x1, 1\n	cmp	w6, w1\n	bgt	.L10\n.L13:\n	add	x5, x5, 1\n	cmp	x5, x8\n	bne	.L11\n.L2:\n	ldp	x19, x20, [sp, 16]\n	str	w6, [x22]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L14:\n	.cfi_restore_state\n	ldp	x19, x20, [sp, 16]\n	mov	w6, 0\n	str	w6, [x22]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem36", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L6\n	mov	w2, 16384\n	add	x1, x0, w1, sxtw 2\n	movk	w2, 0xc61c, lsl 16\n	fmov	s0, w2\n	.p2align 3,,7\n.L5:\n	ldr	s1, [x0]\n	fcmpe	s0, s1\n	bmi	.L7\n.L3:\n	add	x0, x0, 4\n	cmp	x1, x0\n	bne	.L5\n	ret\n	.p2align 2,,3\n.L7:\n	fmov	s0, s1\n	b	.L3\n	.p2align 2,,3\n.L6:\n	mov	w0, 16384\n	movk	w0, 0xc61c, lsl 16\n	fmov	s0, w0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L6\n	mov	w2, 16384\n	add	x1, x0, w1, sxtw 2\n	movk	w2, 0xc61c, lsl 16\n	fmov	s0, w2\n	.p2align 3,,7\n.L5:\n	ldr	s1, [x0]\n	fcmpe	s0, s1\n	bmi	.L7\n.L3:\n	add	x0, x0, 4\n	cmp	x1, x0\n	bne	.L5\n	ret\n	.p2align 2,,3\n.L7:\n	fmov	s0, s1\n	b	.L3\n	.p2align 2,,3\n.L6:\n	mov	w0, 16384\n	movk	w0, 0xc61c, lsl 16\n	fmov	s0, w0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem37", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w6, w0\n	mov	w4, 0\n	mov	w0, 0\n	cmp	w6, 0\n	ble	.L1\n	mov	w8, 35747\n	mov	w7, 53620\n	mov	w5, 52429\n	mov	w10, 20165\n	mov	w9, 15123\n	movk	w8, 0xba2e, lsl 16\n	movk	w7, 0x1745, lsl 16\n	movk	w5, 0xcccc, lsl 16\n	movk	w10, 0xc4ec, lsl 16\n	movk	w9, 0x13b1, lsl 16\n	.p2align 3,,7\n.L2:\n	add	w4, w4, 1\n	cmp	w6, w4\n	beq	.L1\n.L15:\n	mul	w1, w4, w8\n	cmp	w1, w7\n	bls	.L10\n	mul	w1, w4, w10\n	cmp	w1, w9\n	bhi	.L2\n.L10:\n	mov	w2, w4\n	.p2align 3,,7\n.L6:\n	umull	x1, w2, w5\n	lsr	x1, x1, 35\n	add	w3, w1, w1, lsl 2\n	sub	w3, w2, w3, lsl 1\n	mov	w2, w1\n	cmp	w3, 7\n	cinc	w0, w0, eq\n	cbnz	w1, .L6\n	add	w4, w4, 1\n	cmp	w6, w4\n	bne	.L15\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w6, w0\n	mov	w4, 0\n	mov	w0, 0\n	cmp	w6, 0\n	ble	.L1\n	mov	w8, 35747\n	mov	w7, 53620\n	mov	w5, 52429\n	mov	w10, 20165\n	mov	w9, 15123\n	movk	w8, 0xba2e, lsl 16\n	movk	w7, 0x1745, lsl 16\n	movk	w5, 0xcccc, lsl 16\n	movk	w10, 0xc4ec, lsl 16\n	movk	w9, 0x13b1, lsl 16\n	.p2align 3,,7\n.L2:\n	add	w4, w4, 1\n	cmp	w6, w4\n	beq	.L1\n.L15:\n	mul	w1, w4, w8\n	cmp	w1, w7\n	bls	.L10\n	mul	w1, w4, w10\n	cmp	w1, w9\n	bhi	.L2\n.L10:\n	mov	w2, w4\n	.p2align 3,,7\n.L6:\n	umull	x1, w2, w5\n	lsr	x1, x1, 35\n	add	w3, w1, w1, lsl 2\n	sub	w3, w2, w3, lsl 1\n	mov	w2, w1\n	cmp	w3, 7\n	cinc	w0, w0, eq\n	cbnz	w1, .L6\n	add	w4, w4, 1\n	cmp	w6, w4\n	bne	.L15\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem38", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	sxtw	x19, w1\n	mov	x20, x0\n	add	w0, w19, w19, lsr 31\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	mov	x21, x2\n	asr	w0, w0, 1\n	add	w0, w0, 1\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	mov	x3, 0\n	cmp	w19, 0\n	ble	.L13\n	.p2align 3,,7\n.L2:\n	ldr	s0, [x20, x3, lsl 2]\n	lsl	x1, x3, 1\n	add	x3, x3, 2\n	str	s0, [x0, x1]\n	cmp	w19, w3\n	bgt	.L2\n	sub	w6, w19, #1\n	add	x8, x0, 4\n	mov	w5, 0\n	lsr	w6, w6, 1\n	add	w2, w6, 1\n	sub	w7, w6, #1\n	cbz	w6, .L4\n	.p2align 3,,7\n.L3:\n	sub	w1, w2, w5\n	cmp	w1, 1\n	ble	.L9\n	sub	w4, w7, w5\n	mov	x3, x0\n	add	x4, x8, w4, uxtw 2\n	.p2align 3,,7\n.L7:\n	ldp	s0, s1, [x3]\n	fcmpe	s0, s1\n	bgt	.L16\n.L5:\n	add	x3, x3, 4\n	cmp	x4, x3\n	bne	.L7\n.L9:\n	add	w5, w5, 1\n	cmp	w5, w6\n	blt	.L3\n.L4:\n	mov	x1, 0\n	b	.L12\n	.p2align 2,,3\n.L25:\n	ldr	s0, [x0, w3, sxtw 2]\n	str	s0, [x21, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x19, x1\n	beq	.L13\n.L12:\n	asr	w3, w1, 1\n	tbz	x1, 0, .L25\n	ldr	s0, [x20, x1, lsl 2]\n	str	s0, [x21, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x19, x1\n	bne	.L12\n.L13:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	b	free\n	.p2align 2,,3\n.L16:\n	.cfi_restore_state\n	stp	s1, s0, [x3]\n	b	.L5\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	sxtw	x19, w1\n	mov	x20, x0\n	add	w0, w19, w19, lsr 31\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	mov	x21, x2\n	asr	w0, w0, 1\n	add	w0, w0, 1\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	mov	x3, 0\n	cmp	w19, 0\n	ble	.L13\n	.p2align 3,,7\n.L2:\n	ldr	s0, [x20, x3, lsl 2]\n	lsl	x1, x3, 1\n	add	x3, x3, 2\n	str	s0, [x0, x1]\n	cmp	w19, w3\n	bgt	.L2\n	sub	w6, w19, #1\n	add	x8, x0, 4\n	mov	w5, 0\n	lsr	w6, w6, 1\n	add	w2, w6, 1\n	sub	w7, w6, #1\n	cbz	w6, .L4\n	.p2align 3,,7\n.L3:\n	sub	w1, w2, w5\n	cmp	w1, 1\n	ble	.L9\n	sub	w4, w7, w5\n	mov	x3, x0\n	add	x4, x8, w4, uxtw 2\n	.p2align 3,,7\n.L7:\n	ldp	s0, s1, [x3]\n	fcmpe	s0, s1\n	bgt	.L16\n.L5:\n	add	x3, x3, 4\n	cmp	x4, x3\n	bne	.L7\n.L9:\n	add	w5, w5, 1\n	cmp	w5, w6\n	blt	.L3\n.L4:\n	mov	x1, 0\n	b	.L12\n	.p2align 2,,3\n.L25:\n	ldr	s0, [x0, w3, sxtw 2]\n	str	s0, [x21, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x19, x1\n	beq	.L13\n.L12:\n	asr	w3, w1, 1\n	tbz	x1, 0, .L25\n	ldr	s0, [x20, x1, lsl 2]\n	str	s0, [x21, x1, lsl 2]\n	add	x1, x1, 1\n	cmp	x19, x1\n	bne	.L12\n.L13:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	b	free\n	.p2align 2,,3\n.L16:\n	.cfi_restore_state\n	stp	s1, s0, [x3]\n	b	.L5\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem39", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -96]!\n	.cfi_def_cfa_offset 96\n	.cfi_offset 29, -96\n	.cfi_offset 30, -88\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -80\n	.cfi_offset 20, -72\n	mov	x20, x0\n	stp	x23, x24, [sp, 48]\n	str	x25, [sp, 64]\n	.cfi_offset 23, -48\n	.cfi_offset 24, -40\n	.cfi_offset 25, -32\n	mov	w25, w1\n	bl	strlen\n	add	w23, w0, 2\n	mov	w1, 21846\n	movk	w1, 0x5555, lsl 16\n	smull	x1, w23, w1\n	lsr	x1, x1, 32\n	sub	w23, w1, w23, asr 31\n	cmp	w0, 0\n	ble	.L1\n	mov	w24, w0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -56\n	.cfi_offset 21, -64\n	mov	x21, x0\n	mov	w19, 0\n	.p2align 3,,7\n.L8:\n	add	w19, w19, 1\n	sxtw	x22, w21\n	mov	x2, x22\n	mov	x1, x20\n	add	w3, w19, w19, lsl 1\n	add	x0, sp, 88\n	cmp	w3, w24\n	bgt	.L3\n	mov	x2, 3\n	bl	strncpy\n	strb	wzr, [sp, 91]\n	ldrb	w2, [sp, 89]\n	ldrb	w1, [sp, 90]\n	ldrb	w0, [sp, 88]\n	cbz	w25, .L6\n.L13:\n	strb	w1, [sp, 88]\n	strb	w0, [sp, 89]\n	strb	w2, [sp, 90]\n.L7:\n	mov	x22, 3\n.L5:\n	mov	x0, x20\n	mov	x2, x22\n	add	x1, sp, 88\n	bl	strncpy\n	add	x20, x20, 3\n	sub	w21, w21, #3\n	cmp	w19, w23\n	blt	.L8\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 96\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L3:\n	.cfi_def_cfa_offset 96\n	.cfi_offset 19, -80\n	.cfi_offset 20, -72\n	.cfi_offset 21, -64\n	.cfi_offset 22, -56\n	.cfi_offset 23, -48\n	.cfi_offset 24, -40\n	.cfi_offset 25, -32\n	.cfi_offset 29, -96\n	.cfi_offset 30, -88\n	bl	strncpy\n	add	x0, sp, 88\n	strb	wzr, [x0, w21, sxtw]\n	cmp	w21, 3\n	bne	.L5\n	ldrb	w2, [sp, 89]\n	ldrb	w1, [sp, 90]\n	ldrb	w0, [sp, 88]\n	cbnz	w25, .L13\n	.p2align 3,,7\n.L6:\n	strb	w2, [sp, 88]\n	strb	w1, [sp, 89]\n	strb	w0, [sp, 90]\n	b	.L7\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -96]!\n	.cfi_def_cfa_offset 96\n	.cfi_offset 29, -96\n	.cfi_offset 30, -88\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -80\n	.cfi_offset 20, -72\n	mov	x20, x0\n	stp	x23, x24, [sp, 48]\n	str	x25, [sp, 64]\n	.cfi_offset 23, -48\n	.cfi_offset 24, -40\n	.cfi_offset 25, -32\n	mov	w25, w1\n	bl	strlen\n	add	w23, w0, 2\n	mov	w1, 21846\n	movk	w1, 0x5555, lsl 16\n	smull	x1, w23, w1\n	lsr	x1, x1, 32\n	sub	w23, w1, w23, asr 31\n	cmp	w0, 0\n	ble	.L1\n	mov	w24, w0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -56\n	.cfi_offset 21, -64\n	mov	x21, x0\n	mov	w19, 0\n	.p2align 3,,7\n.L8:\n	add	w19, w19, 1\n	sxtw	x22, w21\n	mov	x2, x22\n	mov	x1, x20\n	add	w3, w19, w19, lsl 1\n	add	x0, sp, 88\n	cmp	w3, w24\n	bgt	.L3\n	mov	x2, 3\n	bl	strncpy\n	strb	wzr, [sp, 91]\n	ldrb	w2, [sp, 89]\n	ldrb	w1, [sp, 90]\n	ldrb	w0, [sp, 88]\n	cbz	w25, .L6\n.L13:\n	strb	w1, [sp, 88]\n	strb	w0, [sp, 89]\n	strb	w2, [sp, 90]\n.L7:\n	mov	x22, 3\n.L5:\n	mov	x0, x20\n	mov	x2, x22\n	add	x1, sp, 88\n	bl	strncpy\n	add	x20, x20, 3\n	sub	w21, w21, #3\n	cmp	w19, w23\n	blt	.L8\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 96\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L3:\n	.cfi_def_cfa_offset 96\n	.cfi_offset 19, -80\n	.cfi_offset 20, -72\n	.cfi_offset 21, -64\n	.cfi_offset 22, -56\n	.cfi_offset 23, -48\n	.cfi_offset 24, -40\n	.cfi_offset 25, -32\n	.cfi_offset 29, -96\n	.cfi_offset 30, -88\n	bl	strncpy\n	add	x0, sp, 88\n	strb	wzr, [x0, w21, sxtw]\n	cmp	w21, 3\n	bne	.L5\n	ldrb	w2, [sp, 89]\n	ldrb	w1, [sp, 90]\n	ldrb	w0, [sp, 88]\n	cbnz	w25, .L13\n	.p2align 3,,7\n.L6:\n	strb	w2, [sp, 88]\n	strb	w1, [sp, 89]\n	strb	w0, [sp, 90]\n	b	.L7\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem4", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L5\n	ldr	w2, [x0]\n	tbnz	w2, #31, .L7\n	sub	w1, w1, #1\n	add	x3, x0, w1, uxtw 2\n	b	.L3\n	.p2align 2,,3\n.L4:\n	ldr	w1, [x0, 4]!\n	adds	w2, w2, w1\n	bmi	.L7\n.L3:\n	cmp	x0, x3\n	bne	.L4\n.L5:\n	mov	w0, 0\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L5\n	ldr	w2, [x0]\n	tbnz	w2, #31, .L7\n	sub	w1, w1, #1\n	add	x3, x0, w1, uxtw 2\n	b	.L3\n	.p2align 2,,3\n.L4:\n	ldr	w1, [x0, 4]!\n	adds	w2, w2, w1\n	bmi	.L7\n.L3:\n	cmp	x0, x3\n	bne	.L4\n.L5:\n	mov	w0, 0\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem40", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w5, w0\n	mov	w3, 0\n	mov	w0, 2\n	mov	w1, 1\n	cmp	w3, w5\n	bge	.L16\n	.p2align 3,,7\n.L8:\n	add	w4, w1, w0\n	cmp	w0, 3\n	ble	.L3\n	tbz	x0, 0, .L4\n	mov	w1, 2\n	b	.L5\n	.p2align 2,,3\n.L6:\n	sdiv	w2, w0, w1\n	msub	w2, w2, w1, w0\n	cbz	w2, .L4\n.L5:\n	add	w1, w1, 1\n	mul	w2, w1, w1\n	cmp	w2, w0\n	ble	.L6\n.L3:\n	add	w3, w3, 1\n	cmp	w5, w3\n	beq	.L1\n.L4:\n	mov	w1, w0\n	mov	w0, w4\n	cmp	w3, w5\n	blt	.L8\n.L16:\n	mov	w0, 0\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w5, w0\n	mov	w3, 0\n	mov	w0, 2\n	mov	w1, 1\n	cmp	w3, w5\n	bge	.L16\n	.p2align 3,,7\n.L8:\n	add	w4, w1, w0\n	cmp	w0, 3\n	ble	.L3\n	tbz	x0, 0, .L4\n	mov	w1, 2\n	b	.L5\n	.p2align 2,,3\n.L6:\n	sdiv	w2, w0, w1\n	msub	w2, w2, w1, w0\n	cbz	w2, .L4\n.L5:\n	add	w1, w1, 1\n	mul	w2, w1, w1\n	cmp	w2, w0\n	ble	.L6\n.L3:\n	add	w3, w3, 1\n	cmp	w5, w3\n	beq	.L1\n.L4:\n	mov	w1, w0\n	mov	w0, w4\n	cmp	w3, w5\n	blt	.L8\n.L16:\n	mov	w0, 0\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem41", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L7\n	sub	x7, x0, #4\n	mov	x6, 1\n.L3:\n	cmp	w1, w6\n	ble	.L7\n	add	x8, x6, 1\n	mov	x5, x8\n	cmp	w1, w5\n	ble	.L8\n.L14:\n	ldr	w4, [x7, x6, lsl 2]\n	mov	x2, x5\n	ldr	w3, [x7, x5, lsl 2]\n	add	w4, w4, w3\n	b	.L4\n	.p2align 2,,3\n.L13:\n	cmp	w1, w2\n	ble	.L12\n.L4:\n	ldr	w3, [x0, x2, lsl 2]\n	add	x2, x2, 1\n	cmn	w4, w3\n	bne	.L13\n	mov	w0, 1\n	ret\n	.p2align 2,,3\n.L12:\n	add	x5, x5, 1\n	cmp	w1, w5\n	bgt	.L14\n.L8:\n	mov	x6, x8\n	b	.L3\n.L7:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L7\n	sub	x7, x0, #4\n	mov	x6, 1\n.L3:\n	cmp	w1, w6\n	ble	.L7\n	add	x8, x6, 1\n	mov	x5, x8\n	cmp	w1, w5\n	ble	.L8\n.L14:\n	ldr	w4, [x7, x6, lsl 2]\n	mov	x2, x5\n	ldr	w3, [x7, x5, lsl 2]\n	add	w4, w4, w3\n	b	.L4\n	.p2align 2,,3\n.L13:\n	cmp	w1, w2\n	ble	.L12\n.L4:\n	ldr	w3, [x0, x2, lsl 2]\n	add	x2, x2, 1\n	cmn	w4, w3\n	bne	.L13\n	mov	w0, 1\n	ret\n	.p2align 2,,3\n.L12:\n	add	x5, x5, 1\n	cmp	w1, w5\n	bgt	.L14\n.L8:\n	mov	x6, x8\n	b	.L3\n.L7:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem42", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mul	w0, w0, w0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mul	w0, w0, w0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem43", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L1\n	add	x2, x0, w1, sxtw 2\n	.p2align 3,,7\n.L3:\n	ldr	w1, [x0]\n	add	w1, w1, 1\n	str	w1, [x0], 4\n	cmp	x0, x2\n	bne	.L3\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L1\n	add	x2, x0, w1, sxtw 2\n	.p2align 3,,7\n.L3:\n	ldr	w1, [x0]\n	add	w1, w1, 1\n	str	w1, [x0], 4\n	cmp	x0, x2\n	bne	.L3\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem44", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L6\n	sub	x6, x0, #4\n	mov	x5, 1\n	cmp	w1, w5\n	ble	.L6\n.L12:\n	ldr	w4, [x6, x5, lsl 2]\n	mov	x2, x5\n	b	.L3\n	.p2align 2,,3\n.L11:\n	cmp	w1, w2\n	ble	.L10\n.L3:\n	ldr	w3, [x0, x2, lsl 2]\n	add	x2, x2, 1\n	cmn	w4, w3\n	bne	.L11\n	mov	w0, 1\n	ret\n	.p2align 2,,3\n.L10:\n	add	x5, x5, 1\n	cmp	w1, w5\n	bgt	.L12\n.L6:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L6\n	sub	x6, x0, #4\n	mov	x5, 1\n	cmp	w1, w5\n	ble	.L6\n.L12:\n	ldr	w4, [x6, x5, lsl 2]\n	mov	x2, x5\n	b	.L3\n	.p2align 2,,3\n.L11:\n	cmp	w1, w2\n	ble	.L10\n.L3:\n	ldr	w3, [x0, x2, lsl 2]\n	add	x2, x2, 1\n	cmn	w4, w3\n	bne	.L11\n	mov	w0, 1\n	ret\n	.p2align 2,,3\n.L10:\n	add	x5, x5, 1\n	cmp	w1, w5\n	bgt	.L12\n.L6:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem45", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	cmp	w0, 0\n	ble	.L5\n	sub	sp, sp, #48\n	.cfi_def_cfa_offset 48\n	mov	x4, 1\n	.p2align 3,,7\n.L3:\n	sdiv	w7, w0, w1\n	add	x3, sp, 8\n	add	x5, x3, x4\n	mov	x3, x4\n	add	x4, x4, 1\n	msub	w6, w7, w1, w0\n	mov	w0, w7\n	add	w6, w6, 48\n	strb	w6, [x5, -1]\n	cmp	w7, 0\n	bgt	.L3\n	add	x4, x2, w3, sxtw\n	sxtw	x0, w3\n	mov	x3, x4\n	.p2align 3,,7\n.L4:\n	add	x1, sp, 8\n	add	x2, x1, x0\n	neg	x1, x0\n	sub	x0, x0, #1\n	ldrb	w2, [x2, -1]\n	strb	w2, [x4, x1]\n	cbnz	w0, .L4\n	strb	wzr, [x3]\n	add	sp, sp, 48\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	strb	wzr, [x2]\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	cmp	w0, 0\n	ble	.L5\n	sub	sp, sp, #48\n	.cfi_def_cfa_offset 48\n	mov	x4, 1\n	.p2align 3,,7\n.L3:\n	sdiv	w7, w0, w1\n	add	x3, sp, 8\n	add	x5, x3, x4\n	mov	x3, x4\n	add	x4, x4, 1\n	msub	w6, w7, w1, w0\n	mov	w0, w7\n	add	w6, w6, 48\n	strb	w6, [x5, -1]\n	cmp	w7, 0\n	bgt	.L3\n	add	x4, x2, w3, sxtw\n	sxtw	x0, w3\n	mov	x3, x4\n	.p2align 3,,7\n.L4:\n	add	x1, sp, 8\n	add	x2, x1, x0\n	neg	x1, x0\n	sub	x0, x0, #1\n	ldrb	w2, [x2, -1]\n	strb	w2, [x4, x1]\n	cbnz	w0, .L4\n	strb	wzr, [x3]\n	add	sp, sp, 48\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	strb	wzr, [x2]\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem46", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	fmul	s0, s0, s1\n	fmov	s2, 5.0e-1\n	fmul	s0, s0, s2\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	fmul	s0, s0, s1\n	fmov	s2, 5.0e-1\n	fmul	s0, s0, s2\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem47", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	adrp	x1, .LC0\n	sub	sp, sp, #400\n	.cfi_def_cfa_offset 400\n	mov	x9, sp\n	ldr	q0, [x1, #:lo12:.LC0]\n	str	q0, [sp]\n	cmp	w0, 3\n	ble	.L2\n	sub	w8, w0, #4\n	add	x1, sp, 4\n	mov	x9, sp\n	mov	w2, 0\n	add	x8, x1, w8, uxtw 2\n	mov	x1, x9\n	mov	w5, 2\n	mov	w4, 0\n	mov	w6, 0\n	.p2align 3,,7\n.L3:\n	add	w3, w2, w5\n	mov	w7, w2\n	add	w2, w3, w4\n	add	x1, x1, 4\n	add	w2, w2, w6\n	str	w2, [x1, 12]\n	mov	w6, w4\n	mov	w4, w5\n	mov	w5, w7\n	cmp	x1, x8\n	bne	.L3\n.L2:\n	ldr	w0, [x9, w0, sxtw 2]\n	add	sp, sp, 400\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.section	.rodata.cst16,\"aM\",@progbits,16\n	.align	4\n.LC0:\n	.word	0\n	.word	0\n	.word	2\n	.word	0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	adrp	x1, .LC0\n	sub	sp, sp, #400\n	.cfi_def_cfa_offset 400\n	mov	x9, sp\n	ldr	q0, [x1, #:lo12:.LC0]\n	str	q0, [sp]\n	cmp	w0, 3\n	ble	.L2\n	sub	w8, w0, #4\n	add	x1, sp, 4\n	mov	x9, sp\n	mov	w2, 0\n	add	x8, x1, w8, uxtw 2\n	mov	x1, x9\n	mov	w5, 2\n	mov	w4, 0\n	mov	w6, 0\n	.p2align 3,,7\n.L3:\n	add	w3, w2, w5\n	mov	w7, w2\n	add	w2, w3, w4\n	add	x1, x1, 4\n	add	w2, w2, w6\n	str	w2, [x1, 12]\n	mov	w6, w4\n	mov	w4, w5\n	mov	w5, w7\n	cmp	x1, x8\n	bne	.L3\n.L2:\n	ldr	w0, [x9, w0, sxtw 2]\n	add	sp, sp, 400\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.section	.rodata.cst16,\"aM\",@progbits,16\n	.align	4\n.LC0:\n	.word	0\n	.word	0\n	.word	2\n	.word	0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem48", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L2\n	cmp	w1, 1\n	beq	.L3\n	sub	x4, x0, #4\n	mov	x3, 1\n	.p2align 3,,7\n.L7:\n	mov	x2, x3\n	.p2align 3,,7\n.L6:\n	ldr	s0, [x4, x3, lsl 2]\n	ldr	s1, [x0, x2, lsl 2]\n	fcmpe	s0, s1\n	bgt	.L9\n.L4:\n	add	x2, x2, 1\n	cmp	w1, w2\n	bgt	.L6\n	add	x3, x3, 1\n	cmp	w1, w3\n	bgt	.L7\n	tbnz	x1, 0, .L3\n.L2:\n	add	w1, w1, w1, lsr 31\n	fmov	s1, 5.0e-1\n	asr	w1, w1, 1\n	add	x2, x0, w1, sxtw 2\n	ldr	s2, [x0, w1, sxtw 2]\n	ldr	s0, [x2, -4]\n	fadd	s0, s0, s2\n	fmul	s0, s0, s1\n	ret\n	.p2align 2,,3\n.L9:\n	str	s1, [x4, x3, lsl 2]\n	str	s0, [x0, x2, lsl 2]\n	b	.L4\n.L3:\n	asr	w1, w1, 1\n	ldr	s0, [x0, w1, sxtw 2]\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L2\n	cmp	w1, 1\n	beq	.L3\n	sub	x4, x0, #4\n	mov	x3, 1\n	.p2align 3,,7\n.L7:\n	mov	x2, x3\n	.p2align 3,,7\n.L6:\n	ldr	s0, [x4, x3, lsl 2]\n	ldr	s1, [x0, x2, lsl 2]\n	fcmpe	s0, s1\n	bgt	.L9\n.L4:\n	add	x2, x2, 1\n	cmp	w1, w2\n	bgt	.L6\n	add	x3, x3, 1\n	cmp	w1, w3\n	bgt	.L7\n	tbnz	x1, 0, .L3\n.L2:\n	add	w1, w1, w1, lsr 31\n	fmov	s1, 5.0e-1\n	asr	w1, w1, 1\n	add	x2, x0, w1, sxtw 2\n	ldr	s2, [x0, w1, sxtw 2]\n	ldr	s0, [x2, -4]\n	fadd	s0, s0, s2\n	fmul	s0, s0, s1\n	ret\n	.p2align 2,,3\n.L9:\n	str	s1, [x4, x3, lsl 2]\n	str	s0, [x0, x2, lsl 2]\n	b	.L4\n.L3:\n	asr	w1, w1, 1\n	ldr	s0, [x0, w1, sxtw 2]\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem49", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	x19, x0\n	bl	strlen\n	add	w5, w0, w0, lsr 31\n	cmp	w0, 1\n	ble	.L4\n	sxtw	x4, w0\n	asr	w5, w5, 1\n	sub	x4, x4, #1\n	mov	x1, 0\n	add	x4, x19, x4\n	b	.L3\n	.p2align 2,,3\n.L9:\n	cmp	w5, w1\n	ble	.L4\n.L3:\n	neg	x2, x1\n	ldrb	w3, [x19, x1]\n	add	x1, x1, 1\n	ldrb	w2, [x4, x2]\n	cmp	w3, w2\n	beq	.L9\n	ldr	x19, [sp, 16]\n	mov	w0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L4:\n	.cfi_restore_state\n	ldr	x19, [sp, 16]\n	mov	w0, 1\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	x19, x0\n	bl	strlen\n	add	w5, w0, w0, lsr 31\n	cmp	w0, 1\n	ble	.L4\n	sxtw	x4, w0\n	asr	w5, w5, 1\n	sub	x4, x4, #1\n	mov	x1, 0\n	add	x4, x19, x4\n	b	.L3\n	.p2align 2,,3\n.L9:\n	cmp	w5, w1\n	ble	.L4\n.L3:\n	neg	x2, x1\n	ldrb	w3, [x19, x1]\n	add	x1, x1, 1\n	ldrb	w2, [x4, x2]\n	cmp	w3, w2\n	beq	.L9\n	ldr	x19, [sp, 16]\n	mov	w0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L4:\n	.cfi_restore_state\n	ldr	x19, [sp, 16]\n	mov	w0, 1\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem5", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	scvtf	s3, w1\n	cmp	w1, 0\n	ble	.L5\n	movi	v1.2s, #0\n	add	x2, x0, w1, sxtw 2\n	mov	x1, x0\n	.p2align 3,,7\n.L3:\n	ldr	s2, [x1], 4\n	fadd	s1, s1, s2\n	cmp	x2, x1\n	bne	.L3\n	fdiv	s2, s1, s3\n	movi	v0.2s, #0\n	.p2align 3,,7\n.L4:\n	ldr	s1, [x0], 4\n	fabd	s1, s1, s2\n	fadd	s0, s0, s1\n	cmp	x2, x0\n	bne	.L4\n	fdiv	s0, s0, s3\n	ret\n	.p2align 2,,3\n.L5:\n	movi	v0.2s, #0\n	fdiv	s0, s0, s3\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	scvtf	s3, w1\n	cmp	w1, 0\n	ble	.L5\n	movi	v1.2s, #0\n	add	x2, x0, w1, sxtw 2\n	mov	x1, x0\n	.p2align 3,,7\n.L3:\n	ldr	s2, [x1], 4\n	fadd	s1, s1, s2\n	cmp	x2, x1\n	bne	.L3\n	fdiv	s2, s1, s3\n	movi	v0.2s, #0\n	.p2align 3,,7\n.L4:\n	ldr	s1, [x0], 4\n	fabd	s1, s1, s2\n	fadd	s0, s0, s1\n	cmp	x2, x0\n	bne	.L4\n	fdiv	s0, s0, s3\n	ret\n	.p2align 2,,3\n.L5:\n	movi	v0.2s, #0\n	fdiv	s0, s0, s3\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem50", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w4, w0\n	cmp	w0, 0\n	ble	.L4\n	mov	w2, 0\n	mov	w0, 1\n	.p2align 3,,7\n.L3:\n	lsl	w0, w0, 1\n	add	w2, w2, 1\n	sdiv	w3, w0, w1\n	msub	w0, w3, w1, w0\n	cmp	w4, w2\n	bne	.L3\n	ret\n	.p2align 2,,3\n.L4:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w4, w0\n	cmp	w0, 0\n	ble	.L4\n	mov	w2, 0\n	mov	w0, 1\n	.p2align 3,,7\n.L3:\n	lsl	w0, w0, 1\n	add	w2, w2, 1\n	sdiv	w3, w0, w1\n	msub	w0, w3, w1, w0\n	cmp	w4, w2\n	bne	.L3\n	ret\n	.p2align 2,,3\n.L4:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem51", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	cmp	w1, 0\n	mov	w1, 5\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	mov	w20, 21\n	mov	x19, x0\n	csel	w20, w20, w1, eq\n	bl	strlen\n	cbz	x0, .L1\n	mov	w5, 60495\n	mov	x3, x19\n	add	x0, x19, x0\n	movk	w5, 0x4ec4, lsl 16\n	mov	w4, 26\n	.p2align 3,,7\n.L4:\n	ldrb	w2, [x3]\n	sub	w2, w2, #97\n	add	w2, w2, w20\n	smull	x1, w2, w5\n	asr	x1, x1, 35\n	sub	w1, w1, w2, asr 31\n	msub	w1, w1, w4, w2\n	add	w1, w1, 97\n	strb	w1, [x3], 1\n	cmp	x3, x0\n	bne	.L4\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	cmp	w1, 0\n	mov	w1, 5\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	mov	w20, 21\n	mov	x19, x0\n	csel	w20, w20, w1, eq\n	bl	strlen\n	cbz	x0, .L1\n	mov	w5, 60495\n	mov	x3, x19\n	add	x0, x19, x0\n	movk	w5, 0x4ec4, lsl 16\n	mov	w4, 26\n	.p2align 3,,7\n.L4:\n	ldrb	w2, [x3]\n	sub	w2, w2, #97\n	add	w2, w2, w20\n	smull	x1, w2, w5\n	asr	x1, x1, 35\n	sub	w1, w1, w2, asr 31\n	msub	w1, w1, w4, w2\n	add	w1, w1, 97\n	strb	w1, [x3], 1\n	cmp	x3, x0\n	bne	.L4\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem52", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"AEIOUaeiou\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x0\n	ldrb	w19, [x0]\n	cbz	w19, .L2\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -8\n	.cfi_offset 21, -16\n	adrp	x22, .LC0\n	mov	x21, x0\n	add	x22, x22, :lo12:.LC0\n	b	.L4\n	.p2align 2,,3\n.L3:\n	ldrb	w19, [x21, 1]!\n	cbz	w19, .L11\n.L4:\n	mov	w1, w19\n	mov	x0, x22\n	bl	strchr\n	cbnz	x0, .L3\n	mov	x0, x20\n	strb	w19, [x0], 1\n	ldrb	w19, [x21, 1]!\n	mov	x20, x0\n	cbnz	w19, .L4\n.L11:\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L2:\n	strb	wzr, [x20]\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"AEIOUaeiou\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x0\n	ldrb	w19, [x0]\n	cbz	w19, .L2\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -8\n	.cfi_offset 21, -16\n	adrp	x22, .LC0\n	mov	x21, x0\n	add	x22, x22, :lo12:.LC0\n	b	.L4\n	.p2align 2,,3\n.L3:\n	ldrb	w19, [x21, 1]!\n	cbz	w19, .L11\n.L4:\n	mov	w1, w19\n	mov	x0, x22\n	bl	strchr\n	cbnz	x0, .L3\n	mov	x0, x20\n	strb	w19, [x0], 1\n	ldrb	w19, [x21, 1]!\n	mov	x20, x0\n	cbnz	w19, .L4\n.L11:\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n.L2:\n	strb	wzr, [x20]\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem53", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L4\n	add	x3, x0, w1, sxtw 2\n	b	.L3\n	.p2align 2,,3\n.L8:\n	cmp	x0, x3\n	beq	.L4\n.L3:\n	ldr	w1, [x0]\n	add	x0, x0, 4\n	cmp	w1, w2\n	blt	.L8\n	mov	w0, 0\n	ret\n	.p2align 2,,3\n.L4:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L4\n	add	x3, x0, w1, sxtw 2\n	b	.L3\n	.p2align 2,,3\n.L8:\n	cmp	x0, x3\n	beq	.L4\n.L3:\n	ldr	w1, [x0]\n	add	x0, x0, 4\n	cmp	w1, w2\n	blt	.L8\n	mov	w0, 0\n	ret\n	.p2align 2,,3\n.L4:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem54", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	add	w0, w0, w1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	add	w0, w0, w1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem55", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x1\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	mov	x21, x0\n	bl	strlen\n	mov	x19, x0\n	mov	x0, x20\n	bl	strlen\n	mov	x2, x0\n	cmp	w19, 0\n	ble	.L2\n	add	x1, x21, 1\n	sub	w0, w19, #1\n	add	x1, x1, x0\n	mov	x6, x21\n	cmp	w2, 0\n	ble	.L13\n	add	x0, x20, 1\n	sub	w5, w2, #1\n	add	x5, x0, x5\n	sub	w7, w2, #1\n	.p2align 3,,7\n.L6:\n	ldrb	w4, [x6]\n	mov	x2, x20\n	b	.L5\n	.p2align 2,,3\n.L20:\n	cmp	x2, x5\n	beq	.L13\n.L5:\n	ldrb	w3, [x2]\n	add	x2, x2, 1\n	cmp	w3, w4\n	bne	.L20\n	add	x6, x6, 1\n	cmp	x6, x1\n	bne	.L6\n.L7:\n	mov	x5, x20\n	add	x6, x0, w7, uxtw\n	cmp	w19, 0\n	ble	.L13\n	sub	w3, w19, #1\n	add	x1, x21, 1\n	add	x3, x3, x1\n	.p2align 3,,7\n.L10:\n	ldrb	w4, [x5]\n	mov	x1, x21\n	b	.L9\n	.p2align 2,,3\n.L21:\n	cmp	x1, x3\n	beq	.L13\n.L9:\n	ldrb	w2, [x1]\n	add	x1, x1, 1\n	cmp	w2, w4\n	bne	.L21\n	add	x5, x5, 1\n	cmp	x5, x6\n	bne	.L10\n	ldp	x19, x20, [sp, 16]\n	mov	w0, 1\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L13:\n	.cfi_restore_state\n	mov	w0, 0\n.L3:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L2:\n	.cfi_restore_state\n	mov	w0, 1\n	cmp	w2, 0\n	ble	.L3\n	sub	w7, w2, #1\n	add	x0, x20, 1\n	b	.L7\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x1\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	mov	x21, x0\n	bl	strlen\n	mov	x19, x0\n	mov	x0, x20\n	bl	strlen\n	mov	x2, x0\n	cmp	w19, 0\n	ble	.L2\n	add	x1, x21, 1\n	sub	w0, w19, #1\n	add	x1, x1, x0\n	mov	x6, x21\n	cmp	w2, 0\n	ble	.L13\n	add	x0, x20, 1\n	sub	w5, w2, #1\n	add	x5, x0, x5\n	sub	w7, w2, #1\n	.p2align 3,,7\n.L6:\n	ldrb	w4, [x6]\n	mov	x2, x20\n	b	.L5\n	.p2align 2,,3\n.L20:\n	cmp	x2, x5\n	beq	.L13\n.L5:\n	ldrb	w3, [x2]\n	add	x2, x2, 1\n	cmp	w3, w4\n	bne	.L20\n	add	x6, x6, 1\n	cmp	x6, x1\n	bne	.L6\n.L7:\n	mov	x5, x20\n	add	x6, x0, w7, uxtw\n	cmp	w19, 0\n	ble	.L13\n	sub	w3, w19, #1\n	add	x1, x21, 1\n	add	x3, x3, x1\n	.p2align 3,,7\n.L10:\n	ldrb	w4, [x5]\n	mov	x1, x21\n	b	.L9\n	.p2align 2,,3\n.L21:\n	cmp	x1, x3\n	beq	.L13\n.L9:\n	ldrb	w2, [x1]\n	add	x1, x1, 1\n	cmp	w2, w4\n	bne	.L21\n	add	x5, x5, 1\n	cmp	x5, x6\n	bne	.L10\n	ldp	x19, x20, [sp, 16]\n	mov	w0, 1\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L13:\n	.cfi_restore_state\n	mov	w0, 0\n.L3:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L2:\n	.cfi_restore_state\n	mov	w0, 1\n	cmp	w2, 0\n	ble	.L3\n	sub	w7, w2, #1\n	add	x0, x20, 1\n	b	.L7\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem56", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	sub	sp, sp, #4032\n	.cfi_def_cfa_offset 4032\n	mov	w1, 0\n	add	x6, sp, 32\n	mov	x2, 4000\n	stp	x29, x30, [sp]\n	.cfi_offset 29, -4032\n	.cfi_offset 30, -4024\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -4016\n	mov	w19, w0\n	mov	x0, x6\n	bl	memset\n	mov	w1, 1\n	str	w1, [sp, 36]\n	mov	x6, x0\n	cmp	w19, w1\n	ble	.L2\n	sub	w5, w19, #2\n	mov	x2, x0\n	add	x0, sp, 36\n	mov	w3, 0\n	add	x5, x0, w5, uxtw 2\n	.p2align 3,,7\n.L3:\n	mov	w4, w1\n	add	x2, x2, 4\n	add	w1, w1, w3\n	str	w1, [x2, 4]\n	mov	w3, w4\n	cmp	x2, x5\n	bne	.L3\n.L2:\n	ldp	x29, x30, [sp]\n	ldr	w0, [x6, w19, sxtw 2]\n	ldr	x19, [sp, 16]\n	add	sp, sp, 4032\n	.cfi_restore 29\n	.cfi_restore 30\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	sub	sp, sp, #4032\n	.cfi_def_cfa_offset 4032\n	mov	w1, 0\n	add	x6, sp, 32\n	mov	x2, 4000\n	stp	x29, x30, [sp]\n	.cfi_offset 29, -4032\n	.cfi_offset 30, -4024\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -4016\n	mov	w19, w0\n	mov	x0, x6\n	bl	memset\n	mov	w1, 1\n	str	w1, [sp, 36]\n	mov	x6, x0\n	cmp	w19, w1\n	ble	.L2\n	sub	w5, w19, #2\n	mov	x2, x0\n	add	x0, sp, 36\n	mov	w3, 0\n	add	x5, x0, w5, uxtw 2\n	.p2align 3,,7\n.L3:\n	mov	w4, w1\n	add	x2, x2, 4\n	add	w1, w1, w3\n	str	w1, [x2, 4]\n	mov	w3, w4\n	cmp	x2, x5\n	bne	.L3\n.L2:\n	ldp	x29, x30, [sp]\n	ldr	w0, [x6, w19, sxtw 2]\n	ldr	x19, [sp, 16]\n	add	sp, sp, 4032\n	.cfi_restore 29\n	.cfi_restore 30\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem57", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	ldrb	w1, [x0]\n	cbz	w1, .L7\n	add	x0, x0, 1\n	mov	w2, 0\n	b	.L6\n	.p2align 2,,3\n.L3:\n	cmp	w1, 62\n	bne	.L4\n	sub	w2, w2, #1\n	cmn	w2, #1\n	beq	.L8\n.L4:\n	ldrb	w1, [x0], 1\n	cbz	w1, .L11\n.L6:\n	cmp	w1, 60\n	bne	.L3\n	ldrb	w1, [x0], 1\n	add	w2, w2, 1\n	cbnz	w1, .L6\n.L11:\n	cmp	w2, 0\n	cset	w0, eq\n	ret\n	.p2align 2,,3\n.L8:\n	mov	w0, 0\n	ret\n.L7:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	ldrb	w1, [x0]\n	cbz	w1, .L7\n	add	x0, x0, 1\n	mov	w2, 0\n	b	.L6\n	.p2align 2,,3\n.L3:\n	cmp	w1, 62\n	bne	.L4\n	sub	w2, w2, #1\n	cmn	w2, #1\n	beq	.L8\n.L4:\n	ldrb	w1, [x0], 1\n	cbz	w1, .L11\n.L6:\n	cmp	w1, 60\n	bne	.L3\n	ldrb	w1, [x0], 1\n	add	w2, w2, 1\n	cbnz	w1, .L6\n.L11:\n	cmp	w2, 0\n	cset	w0, eq\n	ret\n	.p2align 2,,3\n.L8:\n	mov	w0, 0\n	ret\n.L7:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem58", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 1\n	ble	.L6\n	ldr	s0, [x0]\n	mov	x2, 1\n	mov	w3, 0\n	mov	w4, 0\n	.p2align 3,,7\n.L5:\n	fmov	s1, s0\n	ldr	s0, [x0, x2, lsl 2]\n	fcmpe	s1, s0\n	bmi	.L7\n	csinc	w3, w3, wzr, le\n.L3:\n	add	x2, x2, 1\n	cmp	w1, w2\n	bgt	.L5\n	add	w3, w3, w4\n	cmp	w3, 2\n	cset	w0, ne\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w4, 1\n	b	.L3\n	.p2align 2,,3\n.L6:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 1\n	ble	.L6\n	ldr	s0, [x0]\n	mov	x2, 1\n	mov	w3, 0\n	mov	w4, 0\n	.p2align 3,,7\n.L5:\n	fmov	s1, s0\n	ldr	s0, [x0, x2, lsl 2]\n	fcmpe	s1, s0\n	bmi	.L7\n	csinc	w3, w3, wzr, le\n.L3:\n	add	x2, x2, 1\n	cmp	w1, w2\n	bgt	.L5\n	add	w3, w3, w4\n	cmp	w3, 2\n	cset	w0, ne\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w4, 1\n	b	.L3\n	.p2align 2,,3\n.L6:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem59", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	sbfiz	x20, x1, 2, 32\n	mov	x19, x0\n	mov	x0, x20\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x22, x2\n	mov	w21, w3\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	mov	w24, w1\n	mov	x23, x4\n	bl	malloc\n	cmp	w24, 0\n	ble	.L20\n	mov	x8, x19\n	add	x9, x22, w21, sxtw 2\n	add	x11, x19, x20\n	mov	w10, 0\n	.p2align 3,,7\n.L3:\n	add	x7, x0, w10, sxtw 2\n	cmp	w10, 0\n	ble	.L11\n.L10:\n	ldr	w6, [x8]\n	mov	x1, x0\n	b	.L5\n	.p2align 2,,3\n.L35:\n	cmp	x1, x7\n	beq	.L11\n.L5:\n	ldr	w5, [x1]\n	add	x1, x1, 4\n	cmp	w5, w6\n	bne	.L35\n	add	x8, x8, 4\n	cmp	x8, x11\n	bne	.L10\n.L9:\n	cmp	w10, 1\n	ble	.L2\n	mov	w6, w10\n	add	x7, x0, 4\n	.p2align 3,,7\n.L13:\n	cmp	w6, 1\n	ble	.L36\n	sub	w5, w6, #2\n	mov	x1, x0\n	add	x5, x7, w5, uxtw 2\n	.p2align 3,,7\n.L15:\n	ldp	w2, w3, [x1]\n	cmp	w2, w3\n	ble	.L14\n	stp	w3, w2, [x1]\n.L14:\n	add	x1, x1, 4\n	cmp	x5, x1\n	bne	.L15\n	sub	w6, w6, #1\n	cmp	w6, 1\n	bne	.L13\n.L2:\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	str	w10, [x23]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L11:\n	.cfi_restore_state\n	cmp	w21, 0\n	ble	.L6\n	ldr	w6, [x8]\n	mov	x1, x22\n	b	.L8\n	.p2align 2,,3\n.L7:\n	cmp	x1, x9\n	beq	.L6\n.L8:\n	ldr	w5, [x1]\n	add	x1, x1, 4\n	cmp	w6, w5\n	bne	.L7\n	str	w6, [x0, w10, sxtw 2]\n	add	w10, w10, 1\n.L6:\n	add	x8, x8, 4\n	cmp	x8, x11\n	bne	.L3\n	b	.L9\n	.p2align 2,,3\n.L36:\n	sub	w6, w6, #1\n	b	.L13\n.L20:\n	ldp	x19, x20, [sp, 16]\n	mov	w10, 0\n	ldp	x21, x22, [sp, 32]\n	str	w10, [x23]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	sbfiz	x20, x1, 2, 32\n	mov	x19, x0\n	mov	x0, x20\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x22, x2\n	mov	w21, w3\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	mov	w24, w1\n	mov	x23, x4\n	bl	malloc\n	cmp	w24, 0\n	ble	.L20\n	mov	x8, x19\n	add	x9, x22, w21, sxtw 2\n	add	x11, x19, x20\n	mov	w10, 0\n	.p2align 3,,7\n.L3:\n	add	x7, x0, w10, sxtw 2\n	cmp	w10, 0\n	ble	.L11\n.L10:\n	ldr	w6, [x8]\n	mov	x1, x0\n	b	.L5\n	.p2align 2,,3\n.L35:\n	cmp	x1, x7\n	beq	.L11\n.L5:\n	ldr	w5, [x1]\n	add	x1, x1, 4\n	cmp	w5, w6\n	bne	.L35\n	add	x8, x8, 4\n	cmp	x8, x11\n	bne	.L10\n.L9:\n	cmp	w10, 1\n	ble	.L2\n	mov	w6, w10\n	add	x7, x0, 4\n	.p2align 3,,7\n.L13:\n	cmp	w6, 1\n	ble	.L36\n	sub	w5, w6, #2\n	mov	x1, x0\n	add	x5, x7, w5, uxtw 2\n	.p2align 3,,7\n.L15:\n	ldp	w2, w3, [x1]\n	cmp	w2, w3\n	ble	.L14\n	stp	w3, w2, [x1]\n.L14:\n	add	x1, x1, 4\n	cmp	x5, x1\n	bne	.L15\n	sub	w6, w6, #1\n	cmp	w6, 1\n	bne	.L13\n.L2:\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	str	w10, [x23]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L11:\n	.cfi_restore_state\n	cmp	w21, 0\n	ble	.L6\n	ldr	w6, [x8]\n	mov	x1, x22\n	b	.L8\n	.p2align 2,,3\n.L7:\n	cmp	x1, x9\n	beq	.L6\n.L8:\n	ldr	w5, [x1]\n	add	x1, x1, 4\n	cmp	w6, w5\n	bne	.L7\n	str	w6, [x0, w10, sxtw 2]\n	add	w10, w10, 1\n.L6:\n	add	x8, x8, 4\n	cmp	x8, x11\n	bne	.L3\n	b	.L9\n	.p2align 2,,3\n.L36:\n	sub	w6, w6, #1\n	b	.L13\n.L20:\n	ldp	x19, x20, [sp, 16]\n	mov	w10, 0\n	ldp	x21, x22, [sp, 32]\n	str	w10, [x23]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem6", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L2\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x0\n	lsl	w0, w1, 1\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	sub	w0, w0, #1\n	str	w0, [x3]\n	mov	w19, w1\n	mov	w21, w2\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	mov	x4, x0\n	ldr	w1, [x20]\n	mov	x3, 1\n	str	w1, [x4], 8\n	cmp	w19, 1\n	beq	.L1\n	.p2align 3,,7\n.L5:\n	ldr	w5, [x20, x3, lsl 2]\n	add	x3, x3, 1\n	str	w21, [x4, -4]\n	str	w5, [x4], 8\n	cmp	w19, w3\n	bgt	.L5\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	str	wzr, [x3]\n	mov	x0, 0\n	b	malloc\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L2\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x20, x0\n	lsl	w0, w1, 1\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	sub	w0, w0, #1\n	str	w0, [x3]\n	mov	w19, w1\n	mov	w21, w2\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	mov	x4, x0\n	ldr	w1, [x20]\n	mov	x3, 1\n	str	w1, [x4], 8\n	cmp	w19, 1\n	beq	.L1\n	.p2align 3,,7\n.L5:\n	ldr	w5, [x20, x3, lsl 2]\n	add	x3, x3, 1\n	str	w21, [x4, -4]\n	str	w5, [x4], 8\n	cmp	w19, w3\n	bgt	.L5\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	str	wzr, [x3]\n	mov	x0, 0\n	b	malloc\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem60", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, 2\n	cmp	w0, 3\n	ble	.L3\n	.p2align 3,,7\n.L2:\n	udiv	w1, w0, w2\n	msub	w3, w1, w2, w0\n	cmp	w3, 0\n	ccmp	w0, w2, 4, eq\n	ble	.L5\n	.p2align 3,,7\n.L4:\n	mov	w0, w1\n	udiv	w1, w1, w2\n	msub	w3, w1, w2, w0\n	cmp	w3, 0\n	ccmp	w0, w2, 4, eq\n	bgt	.L4\n.L5:\n	add	w2, w2, 1\n	mul	w1, w2, w2\n	cmp	w1, w0\n	ble	.L2\n.L3:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, 2\n	cmp	w0, 3\n	ble	.L3\n	.p2align 3,,7\n.L2:\n	udiv	w1, w0, w2\n	msub	w3, w1, w2, w0\n	cmp	w3, 0\n	ccmp	w0, w2, 4, eq\n	ble	.L5\n	.p2align 3,,7\n.L4:\n	mov	w0, w1\n	udiv	w1, w1, w2\n	msub	w3, w1, w2, w0\n	cmp	w3, 0\n	ccmp	w0, w2, 4, eq\n	bgt	.L4\n.L5:\n	add	w2, w2, 1\n	mul	w1, w2, w2\n	cmp	w1, w0\n	ble	.L2\n.L3:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem61", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	madd	w0, w0, w0, w0\n	add	w0, w0, w0, lsr 31\n	asr	w0, w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	madd	w0, w0, w0, w0\n	add	w0, w0, w0, lsr 31\n	asr	w0, w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem62", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	x19, x0\n	bl	strlen\n	add	x0, x19, x0\n	mov	x1, x19\n	mov	w3, 0\n	cmp	x1, x0\n	beq	.L10\n	.p2align 3,,7\n.L6:\n	ldrb	w2, [x1]\n	cmp	w2, 40\n	beq	.L11\n	cmp	w2, 41\n	bne	.L4\n	sub	w3, w3, #1\n	cmn	w3, #1\n	beq	.L7\n.L4:\n	add	x1, x1, 1\n.L12:\n	cmp	x1, x0\n	bne	.L6\n.L10:\n	cmp	w3, 0\n	ldr	x19, [sp, 16]\n	cset	w0, eq\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L7:\n	.cfi_restore_state\n	ldr	x19, [sp, 16]\n	mov	w0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L11:\n	.cfi_restore_state\n	add	w3, w3, 1\n	add	x1, x1, 1\n	b	.L12\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	x19, x0\n	bl	strlen\n	add	x0, x19, x0\n	mov	x1, x19\n	mov	w3, 0\n	cmp	x1, x0\n	beq	.L10\n	.p2align 3,,7\n.L6:\n	ldrb	w2, [x1]\n	cmp	w2, 40\n	beq	.L11\n	cmp	w2, 41\n	bne	.L4\n	sub	w3, w3, #1\n	cmn	w3, #1\n	beq	.L7\n.L4:\n	add	x1, x1, 1\n.L12:\n	cmp	x1, x0\n	bne	.L6\n.L10:\n	cmp	w3, 0\n	ldr	x19, [sp, 16]\n	cset	w0, eq\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L7:\n	.cfi_restore_state\n	ldr	x19, [sp, 16]\n	mov	w0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L11:\n	.cfi_restore_state\n	add	w3, w3, 1\n	add	x1, x1, 1\n	b	.L12\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem63", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 1\n	ble	.L1\n	sub	x3, x2, #4\n	mov	x2, 1\n	.p2align 3,,7\n.L3:\n	scvtf	s0, w2\n	ldr	s1, [x0, x2, lsl 2]\n	fmul	s0, s0, s1\n	str	s0, [x3, x2, lsl 2]\n	add	x2, x2, 1\n	cmp	w1, w2\n	bgt	.L3\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 1\n	ble	.L1\n	sub	x3, x2, #4\n	mov	x2, 1\n	.p2align 3,,7\n.L3:\n	scvtf	s0, w2\n	ldr	s1, [x0, x2, lsl 2]\n	fmul	s0, s0, s1\n	str	s0, [x3, x2, lsl 2]\n	add	x2, x2, 1\n	cmp	w1, w2\n	bgt	.L3\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem64", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	stp	x29, x30, [sp, -432]!\n	.cfi_def_cfa_offset 432\n	.cfi_offset 29, -432\n	.cfi_offset 30, -424\n	mov	w1, 0\n	mov	x2, 400\n	add	x8, sp, 32\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -416\n	mov	w19, w0\n	mov	x0, x8\n	bl	memset\n	mov	w1, 1\n	str	w1, [sp, 40]\n	mov	x8, x0\n	cmp	w19, 2\n	ble	.L2\n	sub	w7, w19, #3\n	mov	x2, x0\n	add	x0, sp, 36\n	mov	w3, 0\n	add	x7, x0, w7, uxtw 2\n	mov	w4, 0\n	.p2align 3,,7\n.L3:\n	add	w6, w1, w3\n	mov	w5, w1\n	add	x2, x2, 4\n	add	w1, w6, w4\n	str	w1, [x2, 8]\n	mov	w4, w3\n	mov	w3, w5\n	cmp	x2, x7\n	bne	.L3\n.L2:\n	ldr	w0, [x8, w19, sxtw 2]\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 432\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	stp	x29, x30, [sp, -432]!\n	.cfi_def_cfa_offset 432\n	.cfi_offset 29, -432\n	.cfi_offset 30, -424\n	mov	w1, 0\n	mov	x2, 400\n	add	x8, sp, 32\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -416\n	mov	w19, w0\n	mov	x0, x8\n	bl	memset\n	mov	w1, 1\n	str	w1, [sp, 40]\n	mov	x8, x0\n	cmp	w19, 2\n	ble	.L2\n	sub	w7, w19, #3\n	mov	x2, x0\n	add	x0, sp, 36\n	mov	w3, 0\n	add	x7, x0, w7, uxtw 2\n	mov	w4, 0\n	.p2align 3,,7\n.L3:\n	add	w6, w1, w3\n	mov	w5, w1\n	add	x2, x2, 4\n	add	w1, w6, w4\n	str	w1, [x2, 8]\n	mov	w4, w3\n	mov	w3, w5\n	cmp	x2, x7\n	bne	.L3\n.L2:\n	ldr	w0, [x8, w19, sxtw 2]\n	ldr	x19, [sp, 16]\n	ldp	x29, x30, [sp], 432\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem65", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"aeiouAEIOU\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	mov	x24, x0\n	bl	strlen\n	cmp	w0, 0\n	ble	.L5\n	mov	x23, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -24\n	.cfi_offset 21, -32\n	sub	w21, w0, #1\n	add	x0, x24, 1\n	adrp	x22, .LC0\n	add	x21, x21, x0\n	mov	x19, x24\n	add	x22, x22, :lo12:.LC0\n	mov	w20, 0\n	.p2align 3,,7\n.L4:\n	ldrb	w1, [x19], 1\n	mov	x0, x22\n	bl	strchr\n	cmp	x0, 0\n	cinc	w20, w20, ne\n	cmp	x21, x19\n	bne	.L4\n	add	x23, x24, w23, sxtw\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	ldrb	w0, [x23, -1]\n	ldp	x23, x24, [sp, 48]\n	and	w0, w0, -33\n	and	w0, w0, 255\n	cmp	w0, 89\n	cinc	w20, w20, eq\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 64\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	w20, 0\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"aeiouAEIOU\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	mov	x24, x0\n	bl	strlen\n	cmp	w0, 0\n	ble	.L5\n	mov	x23, x0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -24\n	.cfi_offset 21, -32\n	sub	w21, w0, #1\n	add	x0, x24, 1\n	adrp	x22, .LC0\n	add	x21, x21, x0\n	mov	x19, x24\n	add	x22, x22, :lo12:.LC0\n	mov	w20, 0\n	.p2align 3,,7\n.L4:\n	ldrb	w1, [x19], 1\n	mov	x0, x22\n	bl	strchr\n	cmp	x0, 0\n	cinc	w20, w20, ne\n	cmp	x21, x19\n	bne	.L4\n	add	x23, x24, w23, sxtw\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	ldrb	w0, [x23, -1]\n	ldp	x23, x24, [sp, 48]\n	and	w0, w0, -33\n	and	w0, w0, 255\n	cmp	w0, 89\n	cinc	w20, w20, eq\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 64\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	w20, 0\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem66", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"%d\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -112]!\n	.cfi_def_cfa_offset 112\n	.cfi_offset 29, -112\n	.cfi_offset 30, -104\n	mov	w2, w0\n	mov	x29, sp\n	str	x21, [sp, 32]\n	.cfi_offset 21, -80\n	mov	w21, w1\n	adrp	x1, .LC0\n	add	x1, x1, :lo12:.LC0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -96\n	.cfi_offset 20, -88\n	adrp	x20, .LANCHOR0\n	add	x20, x20, :lo12:.LANCHOR0\n	mov	x0, x20\n	bl	sprintf\n	mov	x0, x20\n	bl	strlen\n	cmp	w0, w21\n	bge	.L2\n	asr	w4, w0, 1\n	cbz	w4, .L4\n	sub	x0, x0, #1\n	add	x4, x20, w4, sxtw\n	add	x0, x20, x0\n	mov	x1, x20\n	.p2align 3,,7\n.L5:\n	ldrb	w3, [x0]\n	ldrb	w2, [x1]\n	strb	w3, [x1], 1\n	strb	w2, [x0], -1\n	cmp	x1, x4\n	bne	.L5\n.L4:\n	ldr	x21, [sp, 32]\n	mov	x0, x20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 112\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	.cfi_restore_state\n	add	x3, sp, 56\n	sub	x19, x0, w21, sxtw\n	add	x1, x20, x19\n	mov	x0, x3\n	bl	strcpy\n	strb	wzr, [x0, w21, sxtw]\n	mov	x2, x19\n	mov	x1, x20\n	bl	strncat\n	mov	x1, x0\n	mov	x0, x20\n	bl	strcpy\n	ldr	x21, [sp, 32]\n	mov	x0, x20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 112\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.bss\n	.align	4\n	.set	.LANCHOR0,. + 0\n	.type	xs.0, %object\n	.size	xs.0, 50\nxs.0:\n	.zero	50\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"%d\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -112]!\n	.cfi_def_cfa_offset 112\n	.cfi_offset 29, -112\n	.cfi_offset 30, -104\n	mov	w2, w0\n	mov	x29, sp\n	str	x21, [sp, 32]\n	.cfi_offset 21, -80\n	mov	w21, w1\n	adrp	x1, .LC0\n	add	x1, x1, :lo12:.LC0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -96\n	.cfi_offset 20, -88\n	adrp	x20, .LANCHOR0\n	add	x20, x20, :lo12:.LANCHOR0\n	mov	x0, x20\n	bl	sprintf\n	mov	x0, x20\n	bl	strlen\n	cmp	w0, w21\n	bge	.L2\n	asr	w4, w0, 1\n	cbz	w4, .L4\n	sub	x0, x0, #1\n	add	x4, x20, w4, sxtw\n	add	x0, x20, x0\n	mov	x1, x20\n	.p2align 3,,7\n.L5:\n	ldrb	w3, [x0]\n	ldrb	w2, [x1]\n	strb	w3, [x1], 1\n	strb	w2, [x0], -1\n	cmp	x1, x4\n	bne	.L5\n.L4:\n	ldr	x21, [sp, 32]\n	mov	x0, x20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 112\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	.cfi_restore_state\n	add	x3, sp, 56\n	sub	x19, x0, w21, sxtw\n	add	x1, x20, x19\n	mov	x0, x3\n	bl	strcpy\n	strb	wzr, [x0, w21, sxtw]\n	mov	x2, x19\n	mov	x1, x20\n	bl	strncat\n	mov	x1, x0\n	mov	x0, x20\n	bl	strcpy\n	ldr	x21, [sp, 32]\n	mov	x0, x20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 112\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.bss\n	.align	4\n	.set	.LANCHOR0,. + 0\n	.type	xs.0, %object\n	.size	xs.0, 50\nxs.0:\n	.zero	50\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem67", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	ldrb	w1, [x0]\n	cbz	w1, .L5\n	add	x3, x0, 1\n	mov	w0, 0\n	.p2align 3,,7\n.L4:\n	sub	w2, w1, #65\n	add	w4, w0, w1\n	ldrb	w1, [x3], 1\n	and	w2, w2, 255\n	cmp	w2, 26\n	csel	w0, w4, w0, cc\n	cbnz	w1, .L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	ldrb	w1, [x0]\n	cbz	w1, .L5\n	add	x3, x0, 1\n	mov	w0, 0\n	.p2align 3,,7\n.L4:\n	sub	w2, w1, #65\n	add	w4, w0, w1\n	ldrb	w1, [x3], 1\n	and	w2, w2, 255\n	cmp	w2, 26\n	csel	w0, w4, w0, cc\n	cbnz	w1, .L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem68", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB22:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	str	x21, [sp, 32]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	mov	w21, w1\n	str	xzr, [sp, 48]\n	ldrb	w19, [x0]\n	strh	wzr, [sp, 56]\n	str	xzr, [sp, 64]\n	strh	wzr, [sp, 72]\n	cbz	w19, .L13\n	mov	x20, x0\n	bl	__ctype_b_loc\n	mov	x1, x0\n	add	x4, x20, 1\n	add	x0, sp, 48\n	add	x20, sp, 64\n	mov	w3, 0\n	mov	w5, 0\n	ldr	x7, [x1]\n	mov	w8, 1\n	b	.L6\n	.p2align 2,,3\n.L14:\n	cbnz	w5, .L4\n	strb	w19, [x0, w3, sxtw]\n	add	w3, w3, 1\n.L5:\n	ldrb	w19, [x4], 1\n	cbz	w19, .L7\n.L6:\n	ubfiz	x2, x19, 1, 8\n	eor	w6, w5, 1\n	ldrh	w1, [x7, x2]\n	tbnz	x1, 11, .L14\n	ldrb	w19, [x4], 1\n	cmp	w3, 0\n	cset	w1, gt\n	ands	w6, w6, w1\n	csel	w3, w3, wzr, eq\n	csel	w5, w5, w8, eq\n	cbnz	w19, .L6\n.L7:\n	mov	w2, 10\n	mov	x1, 0\n	bl	strtol\n	sub	w21, w21, w0\n	mov	w2, 10\n	mov	x0, x20\n	mov	x1, 0\n	bl	strtol\n	ldp	x19, x20, [sp, 16]\n	sub	w0, w21, w0\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L4:\n	.cfi_restore_state\n	strb	w19, [x20, w3, sxtw]\n	add	w3, w3, 1\n	b	.L5\n	.p2align 2,,3\n.L13:\n	add	x0, sp, 48\n	add	x20, sp, 64\n	b	.L7\n	.cfi_endproc\n.LFE22:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB22:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	str	x21, [sp, 32]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	mov	w21, w1\n	str	xzr, [sp, 48]\n	ldrb	w19, [x0]\n	strh	wzr, [sp, 56]\n	str	xzr, [sp, 64]\n	strh	wzr, [sp, 72]\n	cbz	w19, .L13\n	mov	x20, x0\n	bl	__ctype_b_loc\n	mov	x1, x0\n	add	x4, x20, 1\n	add	x0, sp, 48\n	add	x20, sp, 64\n	mov	w3, 0\n	mov	w5, 0\n	ldr	x7, [x1]\n	mov	w8, 1\n	b	.L6\n	.p2align 2,,3\n.L14:\n	cbnz	w5, .L4\n	strb	w19, [x0, w3, sxtw]\n	add	w3, w3, 1\n.L5:\n	ldrb	w19, [x4], 1\n	cbz	w19, .L7\n.L6:\n	ubfiz	x2, x19, 1, 8\n	eor	w6, w5, 1\n	ldrh	w1, [x7, x2]\n	tbnz	x1, 11, .L14\n	ldrb	w19, [x4], 1\n	cmp	w3, 0\n	cset	w1, gt\n	ands	w6, w6, w1\n	csel	w3, w3, wzr, eq\n	csel	w5, w5, w8, eq\n	cbnz	w19, .L6\n.L7:\n	mov	w2, 10\n	mov	x1, 0\n	bl	strtol\n	sub	w21, w21, w0\n	mov	w2, 10\n	mov	x0, x20\n	mov	x1, 0\n	bl	strtol\n	ldp	x19, x20, [sp, 16]\n	sub	w0, w21, w0\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 80\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L4:\n	.cfi_restore_state\n	strb	w19, [x20, w3, sxtw]\n	add	w3, w3, 1\n	b	.L5\n	.p2align 2,,3\n.L13:\n	add	x0, sp, 48\n	add	x20, sp, 64\n	b	.L7\n	.cfi_endproc\n.LFE22:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem69", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L6\n	sxtw	x6, w1\n	mov	w4, -1\n	mov	x1, 0\n	mov	w5, 2147483647\n	.p2align 3,,7\n.L4:\n	ldr	w3, [x0, x1, lsl 2]\n	tbnz	x3, 0, .L3\n	cmp	w5, w3\n	ccmn	w4, #1, 4, le\n	cset	w7, eq\n	cmp	w7, 0\n	csel	w4, w4, w1, eq\n	csel	w5, w5, w3, eq\n.L3:\n	add	x1, x1, 1\n	cmp	x6, x1\n	bne	.L4\n	cmn	w4, #1\n	beq	.L6\n	mov	x0, x2\n	stp	w5, w4, [x2]\n	ret\n	.p2align 2,,3\n.L6:\n	mov	x0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L6\n	sxtw	x6, w1\n	mov	w4, -1\n	mov	x1, 0\n	mov	w5, 2147483647\n	.p2align 3,,7\n.L4:\n	ldr	w3, [x0, x1, lsl 2]\n	tbnz	x3, 0, .L3\n	cmp	w5, w3\n	ccmn	w4, #1, 4, le\n	cset	w7, eq\n	cmp	w7, 0\n	csel	w4, w4, w1, eq\n	csel	w5, w5, w3, eq\n.L3:\n	add	x1, x1, 1\n	cmp	x6, x1\n	bne	.L4\n	cmn	w4, #1\n	beq	.L6\n	mov	x0, x2\n	stp	w5, w4, [x2]\n	ret\n	.p2align 2,,3\n.L6:\n	mov	x0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem7", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x22, x1\n	stp	x23, x24, [sp, 48]\n	ldrb	w2, [x0]\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	cbz	w2, .L6\n	mov	w23, 0\n	mov	w21, 0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -40\n	.cfi_offset 19, -48\n	add	x19, x0, 1\n	mov	w20, 0\n	mov	x0, 0\n	b	.L5\n	.p2align 2,,3\n.L3:\n	cmp	w2, 41\n	beq	.L10\n.L4:\n	ldrb	w2, [x19], 1\n	cbz	w2, .L11\n.L5:\n	cmp	w2, 40\n	bne	.L3\n	ldrb	w2, [x19], 1\n	add	w20, w20, 1\n	cmp	w21, w20\n	csel	w21, w21, w20, ge\n	cbnz	w2, .L5\n.L11:\n	ldp	x19, x20, [sp, 16]\n	.cfi_remember_state\n	.cfi_restore 20\n	.cfi_restore 19\n	str	w23, [x22]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	.cfi_restore_state\n	subs	w20, w20, #1\n	bne	.L4\n	add	w23, w23, 1\n	sbfiz	x24, x23, 2, 32\n	mov	x1, x24\n	bl	realloc\n	add	x24, x0, x24\n	str	w21, [x24, -4]\n	mov	w21, 0\n	b	.L4\n	.p2align 2,,3\n.L6:\n	.cfi_restore 19\n	.cfi_restore 20\n	mov	w23, 0\n	str	w23, [x22]\n	ldp	x21, x22, [sp, 32]\n	mov	x0, 0\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x22, x1\n	stp	x23, x24, [sp, 48]\n	ldrb	w2, [x0]\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	cbz	w2, .L6\n	mov	w23, 0\n	mov	w21, 0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -40\n	.cfi_offset 19, -48\n	add	x19, x0, 1\n	mov	w20, 0\n	mov	x0, 0\n	b	.L5\n	.p2align 2,,3\n.L3:\n	cmp	w2, 41\n	beq	.L10\n.L4:\n	ldrb	w2, [x19], 1\n	cbz	w2, .L11\n.L5:\n	cmp	w2, 40\n	bne	.L3\n	ldrb	w2, [x19], 1\n	add	w20, w20, 1\n	cmp	w21, w20\n	csel	w21, w21, w20, ge\n	cbnz	w2, .L5\n.L11:\n	ldp	x19, x20, [sp, 16]\n	.cfi_remember_state\n	.cfi_restore 20\n	.cfi_restore 19\n	str	w23, [x22]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	.cfi_restore_state\n	subs	w20, w20, #1\n	bne	.L4\n	add	w23, w23, 1\n	sbfiz	x24, x23, 2, 32\n	mov	x1, x24\n	bl	realloc\n	add	x24, x0, x24\n	str	w21, [x24, -4]\n	mov	w21, 0\n	b	.L4\n	.p2align 2,,3\n.L6:\n	.cfi_restore 19\n	.cfi_restore 20\n	mov	w23, 0\n	str	w23, [x22]\n	ldp	x21, x22, [sp, 32]\n	mov	x0, 0\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem70", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	mov	x19, x0\n	add	w0, w1, 1\n	mov	w20, w1\n	mov	x1, 4\n	sxtw	x0, w0\n	bl	calloc\n	cmp	w20, 0\n	ble	.L5\n	mov	x2, x19\n	mov	w19, -1\n	add	x5, x2, w20, sxtw 2\n	.p2align 3,,7\n.L4:\n	ldr	w3, [x2]\n	add	x2, x2, 4\n	sxtw	x4, w3\n	ldr	w1, [x0, x4, lsl 2]\n	add	w1, w1, 1\n	str	w1, [x0, x4, lsl 2]\n	cmp	w3, w1\n	bgt	.L3\n	cmp	w19, w3\n	csel	w19, w19, w3, ge\n.L3:\n	cmp	x5, x2\n	bne	.L4\n	bl	free\n	mov	w0, w19\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_restore_state\n	bl	free\n	mov	w19, -1\n	mov	w0, w19\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	mov	x19, x0\n	add	w0, w1, 1\n	mov	w20, w1\n	mov	x1, 4\n	sxtw	x0, w0\n	bl	calloc\n	cmp	w20, 0\n	ble	.L5\n	mov	x2, x19\n	mov	w19, -1\n	add	x5, x2, w20, sxtw 2\n	.p2align 3,,7\n.L4:\n	ldr	w3, [x2]\n	add	x2, x2, 4\n	sxtw	x4, w3\n	ldr	w1, [x0, x4, lsl 2]\n	add	w1, w1, 1\n	str	w1, [x0, x4, lsl 2]\n	cmp	w3, w1\n	bgt	.L3\n	cmp	w19, w3\n	csel	w19, w19, w3, ge\n.L3:\n	cmp	x5, x2\n	bne	.L4\n	bl	free\n	mov	w0, w19\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_restore_state\n	bl	free\n	mov	w19, -1\n	mov	w0, w19\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem71", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	sub	w8, w1, #1\n	uxtw	x9, w1\n	sub	x7, x0, #4\n	mov	x6, 1\n	cmp	w8, 0\n	ble	.L20\n	.p2align 3,,7\n.L6:\n	mov	x3, x6\n	cmp	w1, w6\n	ble	.L8\n	.p2align 3,,7\n.L5:\n	ldr	w4, [x7, x6, lsl 2]\n	ldr	w5, [x0, x3, lsl 2]\n	cmp	w4, w5\n	ble	.L7\n	str	w5, [x7, x6, lsl 2]\n	str	w4, [x0, x3, lsl 2]\n.L7:\n	add	x3, x3, 1\n	cmp	w1, w3\n	bgt	.L5\n.L8:\n	add	x6, x6, 1\n	cmp	x6, x9\n	bne	.L6\n.L3:\n	mov	x3, x2\n	sxtw	x1, w8\n	mov	x2, 0\n	b	.L11\n	.p2align 2,,3\n.L10:\n	ldr	w4, [x0, x1, lsl 2]\n	add	x2, x2, 1\n	sub	x1, x1, #1\n	str	w4, [x3, 4]\n	add	x3, x3, 8\n	cmp	w2, w1\n	bgt	.L1\n.L11:\n	ldr	w4, [x0, x2, lsl 2]\n	str	w4, [x3]\n	cmp	w1, w2\n	bne	.L10\n.L1:\n	ret\n.L20:\n	beq	.L3\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	sub	w8, w1, #1\n	uxtw	x9, w1\n	sub	x7, x0, #4\n	mov	x6, 1\n	cmp	w8, 0\n	ble	.L20\n	.p2align 3,,7\n.L6:\n	mov	x3, x6\n	cmp	w1, w6\n	ble	.L8\n	.p2align 3,,7\n.L5:\n	ldr	w4, [x7, x6, lsl 2]\n	ldr	w5, [x0, x3, lsl 2]\n	cmp	w4, w5\n	ble	.L7\n	str	w5, [x7, x6, lsl 2]\n	str	w4, [x0, x3, lsl 2]\n.L7:\n	add	x3, x3, 1\n	cmp	w1, w3\n	bgt	.L5\n.L8:\n	add	x6, x6, 1\n	cmp	x6, x9\n	bne	.L6\n.L3:\n	mov	x3, x2\n	sxtw	x1, w8\n	mov	x2, 0\n	b	.L11\n	.p2align 2,,3\n.L10:\n	ldr	w4, [x0, x1, lsl 2]\n	add	x2, x2, 1\n	sub	x1, x1, #1\n	str	w4, [x3, 4]\n	add	x3, x3, 8\n	cmp	w2, w1\n	bgt	.L1\n.L11:\n	ldr	w4, [x0, x2, lsl 2]\n	str	w4, [x3]\n	cmp	w1, w2\n	bne	.L10\n.L1:\n	ret\n.L20:\n	beq	.L3\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem72", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	fadd	s4, s0, s1\n	fcmpe	s4, s2\n	bls	.L6\n	fadd	s5, s0, s2\n	fmov	s3, s0\n	fmov	s0, -1.0e+0\n	fcmpe	s5, s1\n	bls	.L12\n	fadd	s5, s1, s2\n	fcmpe	s5, s3\n	bls	.L12\n	fadd	s4, s4, s2\n	fmov	s0, 5.0e-1\n	fmul	s4, s4, s0\n	fsub	s3, s4, s3\n	fsub	s1, s4, s1\n	fsub	s2, s4, s2\n	fmul	s3, s3, s4\n	fmul	s3, s3, s1\n	fmul	s0, s3, s2\n	fcmp	s0, #0.0\n	bpl	.L9\n	stp	x29, x30, [sp, -16]!\n	.cfi_def_cfa_offset 16\n	.cfi_offset 29, -16\n	.cfi_offset 30, -8\n	mov	x29, sp\n	bl	sqrtf\n	mov	w0, 1120403456\n	fmov	s1, w0\n	ldp	x29, x30, [sp], 16\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	fmul	s0, s0, s1\n	frinta	s0, s0\n	fdiv	s0, s0, s1\n	ret\n	.p2align 2,,3\n.L9:\n	fsqrt	s0, s0\n	mov	w0, 1120403456\n	fmov	s1, w0\n	fmul	s0, s0, s1\n	frinta	s0, s0\n	fdiv	s0, s0, s1\n.L12:\n	ret\n	.p2align 2,,3\n.L6:\n	fmov	s0, -1.0e+0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	fadd	s4, s0, s1\n	fcmpe	s4, s2\n	bls	.L6\n	fadd	s5, s0, s2\n	fmov	s3, s0\n	fmov	s0, -1.0e+0\n	fcmpe	s5, s1\n	bls	.L12\n	fadd	s5, s1, s2\n	fcmpe	s5, s3\n	bls	.L12\n	fadd	s4, s4, s2\n	fmov	s0, 5.0e-1\n	fmul	s4, s4, s0\n	fsub	s3, s4, s3\n	fsub	s1, s4, s1\n	fsub	s2, s4, s2\n	fmul	s3, s3, s4\n	fmul	s3, s3, s1\n	fmul	s0, s3, s2\n	fcmp	s0, #0.0\n	bpl	.L9\n	stp	x29, x30, [sp, -16]!\n	.cfi_def_cfa_offset 16\n	.cfi_offset 29, -16\n	.cfi_offset 30, -8\n	mov	x29, sp\n	bl	sqrtf\n	mov	w0, 1120403456\n	fmov	s1, w0\n	ldp	x29, x30, [sp], 16\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	fmul	s0, s0, s1\n	frinta	s0, s0\n	fdiv	s0, s0, s1\n	ret\n	.p2align 2,,3\n.L9:\n	fsqrt	s0, s0\n	mov	w0, 1120403456\n	fmov	s1, w0\n	fmul	s0, s0, s1\n	frinta	s0, s0\n	fdiv	s0, s0, s1\n.L12:\n	ret\n	.p2align 2,,3\n.L6:\n	fmov	s0, -1.0e+0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem73", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	add	w8, w1, w1, lsr 31\n	asr	w8, w8, 1\n	cmp	w1, 1\n	ble	.L6\n	sub	w4, w1, #1\n	mov	x3, 0\n	mov	w6, 0\n	add	x4, x0, w4, sxtw 2\n	b	.L4\n	.p2align 2,,3\n.L10:\n	add	w6, w6, w5, lsl 1\n	cmp	w8, w3\n	ble	.L2\n.L4:\n	ldr	w5, [x0, x3, lsl 2]\n	sub	x4, x4, #4\n	ldr	w7, [x4, 4]\n	add	x3, x3, 1\n	cmp	w5, w7\n	beq	.L10\n	mov	w0, 0\n	ret\n.L6:\n	mov	w6, 0\n	.p2align 3,,7\n.L2:\n	cmp	w1, 0\n	and	w1, w1, 1\n	csneg	w1, w1, w1, ge\n	cmp	w1, 1\n	beq	.L11\n	cmp	w6, w2\n	cset	w0, le\n.L12:\n	ret\n	.p2align 2,,3\n.L11:\n	ldr	w0, [x0, w8, sxtw 2]\n	add	w6, w6, w0\n	cmp	w6, w2\n	cset	w0, le\n	b	.L12\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	add	w8, w1, w1, lsr 31\n	asr	w8, w8, 1\n	cmp	w1, 1\n	ble	.L6\n	sub	w4, w1, #1\n	mov	x3, 0\n	mov	w6, 0\n	add	x4, x0, w4, sxtw 2\n	b	.L4\n	.p2align 2,,3\n.L10:\n	add	w6, w6, w5, lsl 1\n	cmp	w8, w3\n	ble	.L2\n.L4:\n	ldr	w5, [x0, x3, lsl 2]\n	sub	x4, x4, #4\n	ldr	w7, [x4, 4]\n	add	x3, x3, 1\n	cmp	w5, w7\n	beq	.L10\n	mov	w0, 0\n	ret\n.L6:\n	mov	w6, 0\n	.p2align 3,,7\n.L2:\n	cmp	w1, 0\n	and	w1, w1, 1\n	csneg	w1, w1, w1, ge\n	cmp	w1, 1\n	beq	.L11\n	cmp	w6, w2\n	cset	w0, le\n.L12:\n	ret\n	.p2align 2,,3\n.L11:\n	ldr	w0, [x0, w8, sxtw 2]\n	add	w6, w6, w0\n	cmp	w6, w2\n	cset	w0, le\n	b	.L12\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem74", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	add	w6, w1, w1, lsr 31\n	mov	x5, x0\n	asr	w6, w6, 1\n	cmp	w1, 1\n	ble	.L5\n	sub	w2, w1, #1\n	mov	w0, 0\n	mov	x1, 0\n	add	x2, x5, w2, sxtw 2\n	.p2align 3,,7\n.L4:\n	ldr	w4, [x5, x1, lsl 2]\n	add	x1, x1, 1\n	ldr	w3, [x2], -4\n	cmp	w4, w3\n	cinc	w0, w0, ne\n	cmp	w6, w1\n	bgt	.L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	add	w6, w1, w1, lsr 31\n	mov	x5, x0\n	asr	w6, w6, 1\n	cmp	w1, 1\n	ble	.L5\n	sub	w2, w1, #1\n	mov	w0, 0\n	mov	x1, 0\n	add	x2, x5, w2, sxtw 2\n	.p2align 3,,7\n.L4:\n	ldr	w4, [x5, x1, lsl 2]\n	add	x1, x1, 1\n	ldr	w3, [x2], -4\n	cmp	w4, w3\n	cinc	w0, w0, ne\n	cmp	w6, w1\n	bgt	.L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem75", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x22, x2\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	mov	x24, x0\n	mov	w23, w3\n	cmp	w1, 0\n	ble	.L2\n	add	x21, x0, w1, sxtw 3\n	mov	x19, x0\n	mov	w20, 0\n	.p2align 3,,7\n.L3:\n	ldr	x0, [x19], 8\n	bl	strlen\n	add	w20, w20, w0\n	cmp	x21, x19\n	bne	.L3\n	cmp	w23, 0\n	ble	.L10\n.L5:\n	mov	x19, 0\n	mov	w21, 0\n	.p2align 3,,7\n.L8:\n	ldr	x0, [x22, x19, lsl 3]\n	add	x19, x19, 1\n	bl	strlen\n	add	w21, w21, w0\n	cmp	w23, w19\n	bgt	.L8\n.L7:\n	cmp	w20, w21\n	csel	x22, x22, x24, gt\n.L6:\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	.cfi_restore_state\n	mov	w20, 0\n	cmp	w3, 0\n	bgt	.L5\n	mov	x22, x0\n	b	.L6\n	.p2align 2,,3\n.L10:\n	mov	w21, 0\n	b	.L7\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x22, x2\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -16\n	.cfi_offset 24, -8\n	mov	x24, x0\n	mov	w23, w3\n	cmp	w1, 0\n	ble	.L2\n	add	x21, x0, w1, sxtw 3\n	mov	x19, x0\n	mov	w20, 0\n	.p2align 3,,7\n.L3:\n	ldr	x0, [x19], 8\n	bl	strlen\n	add	w20, w20, w0\n	cmp	x21, x19\n	bne	.L3\n	cmp	w23, 0\n	ble	.L10\n.L5:\n	mov	x19, 0\n	mov	w21, 0\n	.p2align 3,,7\n.L8:\n	ldr	x0, [x22, x19, lsl 3]\n	add	x19, x19, 1\n	bl	strlen\n	add	w21, w21, w0\n	cmp	w23, w19\n	bgt	.L8\n.L7:\n	cmp	w20, w21\n	csel	x22, x22, x24, gt\n.L6:\n	ldp	x19, x20, [sp, 16]\n	mov	x0, x22\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	.cfi_restore_state\n	mov	w20, 0\n	cmp	w3, 0\n	bgt	.L5\n	mov	x22, x0\n	b	.L6\n	.p2align 2,,3\n.L10:\n	mov	w21, 0\n	b	.L7\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem76", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w0, 1\n	ble	.L10\n	mov	w2, 2\n	mov	w3, 0\n	cmp	w0, 3\n	ble	.L10\n	.p2align 3,,7\n.L3:\n	udiv	w1, w0, w2\n	msub	w1, w1, w2, w0\n	cbnz	w1, .L7\n	sdiv	w1, w0, w2\n	.p2align 3,,7\n.L5:\n	mov	w0, w1\n	add	w3, w3, 1\n	sdiv	w1, w1, w2\n	msub	w4, w1, w2, w0\n	cbz	w4, .L5\n.L7:\n	add	w2, w2, 1\n	mul	w1, w2, w2\n	cmp	w1, w0\n	ble	.L3\n	cmp	w0, 1\n	ble	.L17\n	cmp	w3, 2\n	cset	w0, eq\n	ret\n.L17:\n	cmp	w3, 3\n	cset	w0, eq\n	ret\n.L10:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w0, 1\n	ble	.L10\n	mov	w2, 2\n	mov	w3, 0\n	cmp	w0, 3\n	ble	.L10\n	.p2align 3,,7\n.L3:\n	udiv	w1, w0, w2\n	msub	w1, w1, w2, w0\n	cbnz	w1, .L7\n	sdiv	w1, w0, w2\n	.p2align 3,,7\n.L5:\n	mov	w0, w1\n	add	w3, w3, 1\n	sdiv	w1, w1, w2\n	msub	w4, w1, w2, w0\n	cbz	w4, .L5\n.L7:\n	add	w2, w2, 1\n	mul	w1, w2, w2\n	cmp	w1, w0\n	ble	.L3\n	cmp	w0, 1\n	ble	.L17\n	cmp	w3, 2\n	cset	w0, eq\n	ret\n.L17:\n	cmp	w3, 3\n	cset	w0, eq\n	ret\n.L10:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem77", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w0, 0\n	ble	.L5\n	cmp	w0, 1\n	beq	.L1\n	mov	w3, 0\n	mov	w2, 1\n	b	.L3\n	.p2align 2,,3\n.L4:\n	cmp	w0, w2\n	beq	.L7\n.L3:\n	mul	w2, w2, w1\n	add	w3, w3, 1\n	cmp	w3, 99\n	ccmp	w0, w2, 1, le\n	bge	.L4\n.L5:\n	mov	w0, 0\n.L1:\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w0, 0\n	ble	.L5\n	cmp	w0, 1\n	beq	.L1\n	mov	w3, 0\n	mov	w2, 1\n	b	.L3\n	.p2align 2,,3\n.L4:\n	cmp	w0, w2\n	beq	.L7\n.L3:\n	mul	w2, w2, w1\n	add	w3, w3, 1\n	cmp	w3, 99\n	ccmp	w0, w2, 1, le\n	bge	.L4\n.L5:\n	mov	w0, 0\n.L1:\n	ret\n	.p2align 2,,3\n.L7:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem78", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w0, 0\n	csneg	w0, w0, w0, ge\n	beq	.L6\n	mov	w1, 0\n	b	.L3\n	.p2align 2,,3\n.L4:\n	beq	.L6\n.L3:\n	add	w1, w1, 1\n	mul	w2, w1, w1\n	mul	w2, w2, w1\n	cmp	w2, w0\n	ble	.L4\n	mov	w0, 0\n	ret\n	.p2align 2,,3\n.L6:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w0, 0\n	csneg	w0, w0, w0, ge\n	beq	.L6\n	mov	w1, 0\n	b	.L3\n	.p2align 2,,3\n.L4:\n	beq	.L6\n.L3:\n	add	w1, w1, 1\n	mul	w2, w1, w1\n	mul	w2, w2, w1\n	cmp	w2, w0\n	ble	.L4\n	mov	w0, 0\n	ret\n	.p2align 2,,3\n.L6:\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem79", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"2357BD\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x19, x0\n	bl	strlen\n	cbz	x0, .L5\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -8\n	.cfi_offset 21, -16\n	adrp	x22, .LC0\n	add	x21, x19, x0\n	add	x22, x22, :lo12:.LC0\n	mov	w20, 0\n	.p2align 3,,7\n.L4:\n	ldrb	w1, [x19], 1\n	mov	x0, x22\n	bl	strchr\n	cmp	x0, 0\n	cinc	w20, w20, ne\n	cmp	x19, x21\n	bne	.L4\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	w20, 0\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"2357BD\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	x19, x0\n	bl	strlen\n	cbz	x0, .L5\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -8\n	.cfi_offset 21, -16\n	adrp	x22, .LC0\n	add	x21, x19, x0\n	add	x22, x22, :lo12:.LC0\n	mov	w20, 0\n	.p2align 3,,7\n.L4:\n	ldrb	w1, [x19], 1\n	mov	x0, x22\n	bl	strchr\n	cmp	x0, 0\n	cinc	w20, w20, ne\n	cmp	x19, x21\n	bne	.L4\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	w20, 0\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem8", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x23, x24, [sp, 48]\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	mov	x25, x3\n	cmp	w1, 0\n	ble	.L5\n	mov	x24, x2\n	mov	x19, x0\n	add	x26, x0, w1, sxtw 3\n	mov	w23, 0\n	mov	x20, 0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -40\n	.cfi_offset 21, -48\n	.p2align 3,,7\n.L4:\n	mov	x1, x24\n	ldr	x22, [x19]\n	mov	x0, x22\n	bl	strstr\n	mov	x1, x0\n	mov	x0, x20\n	cbz	x1, .L3\n	add	w23, w23, 1\n	sbfiz	x21, x23, 3, 32\n	mov	x1, x21\n	bl	realloc\n	add	x21, x0, x21\n	mov	x20, x0\n	str	x22, [x21, -8]\n.L3:\n	add	x19, x19, 8\n	cmp	x19, x26\n	bne	.L4\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	mov	x0, x20\n	ldp	x19, x20, [sp, 16]\n	str	w23, [x25]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 80\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x20, 0\n	mov	w23, 0\n	mov	x0, x20\n	ldp	x19, x20, [sp, 16]\n	str	w23, [x25]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x23, x24, [sp, 48]\n	stp	x25, x26, [sp, 64]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	mov	x25, x3\n	cmp	w1, 0\n	ble	.L5\n	mov	x24, x2\n	mov	x19, x0\n	add	x26, x0, w1, sxtw 3\n	mov	w23, 0\n	mov	x20, 0\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -40\n	.cfi_offset 21, -48\n	.p2align 3,,7\n.L4:\n	mov	x1, x24\n	ldr	x22, [x19]\n	mov	x0, x22\n	bl	strstr\n	mov	x1, x0\n	mov	x0, x20\n	cbz	x1, .L3\n	add	w23, w23, 1\n	sbfiz	x21, x23, 3, 32\n	mov	x1, x21\n	bl	realloc\n	add	x21, x0, x21\n	mov	x20, x0\n	str	x22, [x21, -8]\n.L3:\n	add	x19, x19, 8\n	cmp	x19, x26\n	bne	.L4\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	mov	x0, x20\n	ldp	x19, x20, [sp, 16]\n	str	w23, [x25]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L5:\n	.cfi_def_cfa_offset 80\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	.cfi_offset 26, -8\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x20, 0\n	mov	w23, 0\n	mov	x0, x20\n	ldp	x19, x20, [sp, 16]\n	str	w23, [x25]\n	ldp	x23, x24, [sp, 48]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem80", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"db\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	w19, w0\n	mov	x0, 64\n	bl	malloc\n	cbz	x0, .L2\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	mov	x20, x0\n	strb	wzr, [x0, 63]\n	cmp	w19, 0\n	cbnz	w19, .L16\n	mov	w1, 48\n	mov	x0, 5\n	mov	x2, 60\n	mov	x3, 61\n	strb	w1, [x20, 62]\n.L5:\n	mov	w1, 98\n	strb	w1, [x20, x3]\n	mov	w3, 100\n	strb	w3, [x20, x2]\n	add	x21, x20, x2\n	bl	malloc\n	mov	x19, x0\n	cbz	x0, .L17\n	mov	x1, x21\n	bl	stpcpy\n	adrp	x2, .LC0\n	add	x2, x2, :lo12:.LC0\n	mov	x1, x0\n	mov	x0, x20\n	ldrh	w3, [x2]\n	ldrb	w2, [x2, 2]\n	strh	w3, [x1]\n	strb	w2, [x1, 2]\n	bl	free\n	ldr	x21, [sp, 32]\n	.cfi_restore 21\n.L1:\n	mov	x0, x19\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L16:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 21, -16\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	add	x0, x0, 1\n	mov	x1, 61\n	ble	.L18\n	.p2align 3,,7\n.L4:\n	and	w2, w19, 1\n	mov	x3, x1\n	add	w2, w2, 48\n	strb	w2, [x0, x1]\n	asr	w19, w19, 1\n	sub	x1, x1, #1\n	cbnz	w19, .L4\n	sub	w1, w3, #1\n	mov	w0, 65\n	sub	w0, w0, w1\n	sxtw	x3, w3\n	sxtw	x2, w1\n	sxtw	x0, w0\n	b	.L5\n	.p2align 2,,3\n.L18:\n	mov	x2, x1\n	mov	x0, 4\n	mov	x3, 62\n	b	.L5\n.L17:\n	mov	x0, x20\n	bl	free\n	ldr	x21, [sp, 32]\n	.cfi_restore 21\n.L2:\n	mov	x19, 0\n	b	.L1\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"db\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	mov	w19, w0\n	mov	x0, 64\n	bl	malloc\n	cbz	x0, .L2\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	mov	x20, x0\n	strb	wzr, [x0, 63]\n	cmp	w19, 0\n	cbnz	w19, .L16\n	mov	w1, 48\n	mov	x0, 5\n	mov	x2, 60\n	mov	x3, 61\n	strb	w1, [x20, 62]\n.L5:\n	mov	w1, 98\n	strb	w1, [x20, x3]\n	mov	w3, 100\n	strb	w3, [x20, x2]\n	add	x21, x20, x2\n	bl	malloc\n	mov	x19, x0\n	cbz	x0, .L17\n	mov	x1, x21\n	bl	stpcpy\n	adrp	x2, .LC0\n	add	x2, x2, :lo12:.LC0\n	mov	x1, x0\n	mov	x0, x20\n	ldrh	w3, [x2]\n	ldrb	w2, [x2, 2]\n	strh	w3, [x1]\n	strb	w2, [x1, 2]\n	bl	free\n	ldr	x21, [sp, 32]\n	.cfi_restore 21\n.L1:\n	mov	x0, x19\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L16:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	.cfi_offset 21, -16\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	add	x0, x0, 1\n	mov	x1, 61\n	ble	.L18\n	.p2align 3,,7\n.L4:\n	and	w2, w19, 1\n	mov	x3, x1\n	add	w2, w2, 48\n	strb	w2, [x0, x1]\n	asr	w19, w19, 1\n	sub	x1, x1, #1\n	cbnz	w19, .L4\n	sub	w1, w3, #1\n	mov	w0, 65\n	sub	w0, w0, w1\n	sxtw	x3, w3\n	sxtw	x2, w1\n	sxtw	x0, w0\n	b	.L5\n	.p2align 2,,3\n.L18:\n	mov	x2, x1\n	mov	x0, 4\n	mov	x3, 62\n	b	.L5\n.L17:\n	mov	x0, x20\n	bl	free\n	ldr	x21, [sp, 32]\n	.cfi_restore 21\n.L2:\n	mov	x19, 0\n	b	.L1\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem81", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB12:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	x19, x0\n	bl	strlen\n	cmp	x0, 2\n	bls	.L6\n	sub	x3, x19, #2\n	mov	x1, x19\n	add	x3, x3, x0\n	b	.L3\n	.p2align 2,,3\n.L11:\n	ldrb	w2, [x1]\n	add	x1, x1, 1\n	cmp	w2, w0\n	beq	.L6\n	cmp	x1, x3\n	beq	.L10\n.L3:\n	ldrb	w0, [x1, 2]\n	ldrb	w2, [x1, 1]\n	cmp	w2, w0\n	bne	.L11\n.L6:\n	ldr	x19, [sp, 16]\n	mov	w0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	.cfi_restore_state\n	ldr	x19, [sp, 16]\n	mov	w0, 1\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE12:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB12:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	str	x19, [sp, 16]\n	.cfi_offset 19, -16\n	mov	x19, x0\n	bl	strlen\n	cmp	x0, 2\n	bls	.L6\n	sub	x3, x19, #2\n	mov	x1, x19\n	add	x3, x3, x0\n	b	.L3\n	.p2align 2,,3\n.L11:\n	ldrb	w2, [x1]\n	add	x1, x1, 1\n	cmp	w2, w0\n	beq	.L6\n	cmp	x1, x3\n	beq	.L10\n.L3:\n	ldrb	w0, [x1, 2]\n	ldrb	w2, [x1, 1]\n	cmp	w2, w0\n	bne	.L11\n.L6:\n	ldr	x19, [sp, 16]\n	mov	w0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L10:\n	.cfi_restore_state\n	ldr	x19, [sp, 16]\n	mov	w0, 1\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE12:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem82", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"A+\"\n	.align	3\n.LC1:\n	.string	\"A\"\n	.align	3\n.LC2:\n	.string	\"A-\"\n	.align	3\n.LC3:\n	.string	\"B+\"\n	.align	3\n.LC4:\n	.string	\"B\"\n	.align	3\n.LC5:\n	.string	\"B-\"\n	.align	3\n.LC6:\n	.string	\"C+\"\n	.align	3\n.LC7:\n	.string	\"C\"\n	.align	3\n.LC8:\n	.string	\"C-\"\n	.align	3\n.LC9:\n	.string	\"D+\"\n	.align	3\n.LC10:\n	.string	\"D\"\n	.align	3\n.LC11:\n	.string	\"D-\"\n	.align	3\n.LC12:\n	.string	\"E\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	sxtw	x20, w1\n	mov	x19, x0\n	sbfiz	x0, x20, 3, 32\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	bl	malloc\n	cmp	w20, 0\n	ble	.L1\n	adrp	x1, .LC13\n	adrp	x3, .LC0\n	adrp	x4, .LC1\n	adrp	x5, .LC2\n	ldr	d1, [x1, #:lo12:.LC13]\n	adrp	x1, .LC14\n	add	x3, x3, :lo12:.LC0\n	add	x4, x4, :lo12:.LC1\n	ldr	d2, [x1, #:lo12:.LC14]\n	adrp	x1, .LC15\n	add	x5, x5, :lo12:.LC2\n	mov	x2, 0\n	ldr	d3, [x1, #:lo12:.LC15]\n	adrp	x1, .LC16\n	ldr	d4, [x1, #:lo12:.LC16]\n	.p2align 3,,7\n.L2:\n	ldr	s0, [x19, x2, lsl 2]\n	mov	x1, x3\n	fcvt	d0, s0\n	fcmpe	d0, d1\n	bge	.L3\n	fcmpe	d0, d2\n	mov	x1, x4\n	bgt	.L3\n	fcmpe	d0, d3\n	mov	x1, x5\n	bgt	.L3\n	fcmpe	d0, d4\n	bgt	.L9\n	adrp	x1, .LC17\n	ldr	d5, [x1, #:lo12:.LC17]\n	fcmpe	d0, d5\n	bgt	.L10\n	adrp	x1, .LC18\n	ldr	d5, [x1, #:lo12:.LC18]\n	fcmpe	d0, d5\n	bgt	.L11\n	adrp	x1, .LC19\n	ldr	d5, [x1, #:lo12:.LC19]\n	fcmpe	d0, d5\n	bgt	.L12\n	adrp	x1, .LC20\n	ldr	d5, [x1, #:lo12:.LC20]\n	fcmpe	d0, d5\n	bgt	.L13\n	adrp	x1, .LC21\n	ldr	d5, [x1, #:lo12:.LC21]\n	fcmpe	d0, d5\n	bgt	.L14\n	adrp	x1, .LC22\n	ldr	d5, [x1, #:lo12:.LC22]\n	fcmpe	d0, d5\n	bgt	.L15\n	adrp	x1, .LC23\n	ldr	d5, [x1, #:lo12:.LC23]\n	fcmpe	d0, d5\n	bgt	.L16\n	adrp	x1, .LC24\n	adrp	x6, .LC12\n	add	x6, x6, :lo12:.LC12\n	ldr	d5, [x1, #:lo12:.LC24]\n	adrp	x1, .LC11\n	add	x1, x1, :lo12:.LC11\n	fcmpe	d0, d5\n	csel	x1, x1, x6, gt\n	.p2align 3,,7\n.L3:\n	str	x1, [x0, x2, lsl 3]\n	add	x2, x2, 1\n	cmp	x20, x2\n	bne	.L2\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L9:\n	.cfi_restore_state\n	adrp	x1, .LC3\n	add	x1, x1, :lo12:.LC3\n	str	x1, [x0, x2, lsl 3]\n	add	x2, x2, 1\n	cmp	x20, x2\n	bne	.L2\n	b	.L1\n	.p2align 2,,3\n.L10:\n	adrp	x1, .LC4\n	add	x1, x1, :lo12:.LC4\n	str	x1, [x0, x2, lsl 3]\n	add	x2, x2, 1\n	cmp	x20, x2\n	bne	.L2\n	b	.L1\n	.p2align 2,,3\n.L11:\n	adrp	x1, .LC5\n	add	x1, x1, :lo12:.LC5\n	str	x1, [x0, x2, lsl 3]\n	add	x2, x2, 1\n	cmp	x20, x2\n	bne	.L2\n	b	.L1\n.L12:\n	adrp	x1, .LC6\n	add	x1, x1, :lo12:.LC6\n	b	.L3\n.L13:\n	adrp	x1, .LC7\n	add	x1, x1, :lo12:.LC7\n	b	.L3\n.L14:\n	adrp	x1, .LC8\n	add	x1, x1, :lo12:.LC8\n	b	.L3\n.L15:\n	adrp	x1, .LC9\n	add	x1, x1, :lo12:.LC9\n	b	.L3\n.L16:\n	adrp	x1, .LC10\n	add	x1, x1, :lo12:.LC10\n	b	.L3\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.section	.rodata.cst8,\"aM\",@progbits,8\n	.align	3\n.LC13:\n	.word	-1841681977\n	.word	1074790347\n	.align	3\n.LC14:\n	.word	123695058\n	.word	1074633166\n	.align	3\n.LC15:\n	.word	-735298401\n	.word	1074423450\n	.align	3\n.LC16:\n	.word	1841681977\n	.word	1074266164\n	.align	3\n.LC17:\n	.word	123695058\n	.word	1074108878\n	.align	3\n.LC18:\n	.word	-735298401\n	.word	1073899162\n	.align	3\n.LC19:\n	.word	1841681977\n	.word	1073741876\n	.align	3\n.LC20:\n	.word	247390116\n	.word	1073427356\n	.align	3\n.LC21:\n	.word	-1470596802\n	.word	1073007925\n	.align	3\n.LC22:\n	.word	-611603343\n	.word	1072693352\n	.align	3\n.LC23:\n	.word	494780232\n	.word	1072064312\n	.align	3\n.LC24:\n	.word	-350469331\n	.word	1058682594\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"A+\"\n	.align	3\n.LC1:\n	.string	\"A\"\n	.align	3\n.LC2:\n	.string	\"A-\"\n	.align	3\n.LC3:\n	.string	\"B+\"\n	.align	3\n.LC4:\n	.string	\"B\"\n	.align	3\n.LC5:\n	.string	\"B-\"\n	.align	3\n.LC6:\n	.string	\"C+\"\n	.align	3\n.LC7:\n	.string	\"C\"\n	.align	3\n.LC8:\n	.string	\"C-\"\n	.align	3\n.LC9:\n	.string	\"D+\"\n	.align	3\n.LC10:\n	.string	\"D\"\n	.align	3\n.LC11:\n	.string	\"D-\"\n	.align	3\n.LC12:\n	.string	\"E\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -32\n	.cfi_offset 20, -24\n	sxtw	x20, w1\n	mov	x19, x0\n	sbfiz	x0, x20, 3, 32\n	str	x21, [sp, 32]\n	.cfi_offset 21, -16\n	bl	malloc\n	cmp	w20, 0\n	ble	.L1\n	adrp	x1, .LC13\n	adrp	x3, .LC0\n	adrp	x4, .LC1\n	adrp	x5, .LC2\n	ldr	d1, [x1, #:lo12:.LC13]\n	adrp	x1, .LC14\n	add	x3, x3, :lo12:.LC0\n	add	x4, x4, :lo12:.LC1\n	ldr	d2, [x1, #:lo12:.LC14]\n	adrp	x1, .LC15\n	add	x5, x5, :lo12:.LC2\n	mov	x2, 0\n	ldr	d3, [x1, #:lo12:.LC15]\n	adrp	x1, .LC16\n	ldr	d4, [x1, #:lo12:.LC16]\n	.p2align 3,,7\n.L2:\n	ldr	s0, [x19, x2, lsl 2]\n	mov	x1, x3\n	fcvt	d0, s0\n	fcmpe	d0, d1\n	bge	.L3\n	fcmpe	d0, d2\n	mov	x1, x4\n	bgt	.L3\n	fcmpe	d0, d3\n	mov	x1, x5\n	bgt	.L3\n	fcmpe	d0, d4\n	bgt	.L9\n	adrp	x1, .LC17\n	ldr	d5, [x1, #:lo12:.LC17]\n	fcmpe	d0, d5\n	bgt	.L10\n	adrp	x1, .LC18\n	ldr	d5, [x1, #:lo12:.LC18]\n	fcmpe	d0, d5\n	bgt	.L11\n	adrp	x1, .LC19\n	ldr	d5, [x1, #:lo12:.LC19]\n	fcmpe	d0, d5\n	bgt	.L12\n	adrp	x1, .LC20\n	ldr	d5, [x1, #:lo12:.LC20]\n	fcmpe	d0, d5\n	bgt	.L13\n	adrp	x1, .LC21\n	ldr	d5, [x1, #:lo12:.LC21]\n	fcmpe	d0, d5\n	bgt	.L14\n	adrp	x1, .LC22\n	ldr	d5, [x1, #:lo12:.LC22]\n	fcmpe	d0, d5\n	bgt	.L15\n	adrp	x1, .LC23\n	ldr	d5, [x1, #:lo12:.LC23]\n	fcmpe	d0, d5\n	bgt	.L16\n	adrp	x1, .LC24\n	adrp	x6, .LC12\n	add	x6, x6, :lo12:.LC12\n	ldr	d5, [x1, #:lo12:.LC24]\n	adrp	x1, .LC11\n	add	x1, x1, :lo12:.LC11\n	fcmpe	d0, d5\n	csel	x1, x1, x6, gt\n	.p2align 3,,7\n.L3:\n	str	x1, [x0, x2, lsl 3]\n	add	x2, x2, 1\n	cmp	x20, x2\n	bne	.L2\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldr	x21, [sp, 32]\n	ldp	x29, x30, [sp], 48\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L9:\n	.cfi_restore_state\n	adrp	x1, .LC3\n	add	x1, x1, :lo12:.LC3\n	str	x1, [x0, x2, lsl 3]\n	add	x2, x2, 1\n	cmp	x20, x2\n	bne	.L2\n	b	.L1\n	.p2align 2,,3\n.L10:\n	adrp	x1, .LC4\n	add	x1, x1, :lo12:.LC4\n	str	x1, [x0, x2, lsl 3]\n	add	x2, x2, 1\n	cmp	x20, x2\n	bne	.L2\n	b	.L1\n	.p2align 2,,3\n.L11:\n	adrp	x1, .LC5\n	add	x1, x1, :lo12:.LC5\n	str	x1, [x0, x2, lsl 3]\n	add	x2, x2, 1\n	cmp	x20, x2\n	bne	.L2\n	b	.L1\n.L12:\n	adrp	x1, .LC6\n	add	x1, x1, :lo12:.LC6\n	b	.L3\n.L13:\n	adrp	x1, .LC7\n	add	x1, x1, :lo12:.LC7\n	b	.L3\n.L14:\n	adrp	x1, .LC8\n	add	x1, x1, :lo12:.LC8\n	b	.L3\n.L15:\n	adrp	x1, .LC9\n	add	x1, x1, :lo12:.LC9\n	b	.L3\n.L16:\n	adrp	x1, .LC10\n	add	x1, x1, :lo12:.LC10\n	b	.L3\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.section	.rodata.cst8,\"aM\",@progbits,8\n	.align	3\n.LC13:\n	.word	-1841681977\n	.word	1074790347\n	.align	3\n.LC14:\n	.word	123695058\n	.word	1074633166\n	.align	3\n.LC15:\n	.word	-735298401\n	.word	1074423450\n	.align	3\n.LC16:\n	.word	1841681977\n	.word	1074266164\n	.align	3\n.LC17:\n	.word	123695058\n	.word	1074108878\n	.align	3\n.LC18:\n	.word	-735298401\n	.word	1073899162\n	.align	3\n.LC19:\n	.word	1841681977\n	.word	1073741876\n	.align	3\n.LC20:\n	.word	247390116\n	.word	1073427356\n	.align	3\n.LC21:\n	.word	-1470596802\n	.word	1073007925\n	.align	3\n.LC22:\n	.word	-611603343\n	.word	1072693352\n	.align	3\n.LC23:\n	.word	494780232\n	.word	1072064312\n	.align	3\n.LC24:\n	.word	-350469331\n	.word	1058682594\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem83", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -16]!\n	.cfi_def_cfa_offset 16\n	.cfi_offset 29, -16\n	.cfi_offset 30, -8\n	mov	x29, sp\n	bl	strlen\n	cmp	w0, 1\n	ble	.L8\n	cmp	w0, 3\n	ble	.L6\n	tbz	x0, 0, .L8\n	mov	w2, w0\n	mov	w0, 2\n	b	.L3\n	.p2align 2,,3\n.L4:\n	sdiv	w1, w2, w0\n	msub	w1, w1, w0, w2\n	cbz	w1, .L8\n.L3:\n	add	w0, w0, 1\n	mul	w1, w0, w0\n	cmp	w1, w2\n	ble	.L4\n.L6:\n	mov	w0, 1\n	ldp	x29, x30, [sp], 16\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L8:\n	.cfi_restore_state\n	mov	w0, 0\n	ldp	x29, x30, [sp], 16\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -16]!\n	.cfi_def_cfa_offset 16\n	.cfi_offset 29, -16\n	.cfi_offset 30, -8\n	mov	x29, sp\n	bl	strlen\n	cmp	w0, 1\n	ble	.L8\n	cmp	w0, 3\n	ble	.L6\n	tbz	x0, 0, .L8\n	mov	w2, w0\n	mov	w0, 2\n	b	.L3\n	.p2align 2,,3\n.L4:\n	sdiv	w1, w2, w0\n	msub	w1, w1, w0, w2\n	cbz	w1, .L8\n.L3:\n	add	w0, w0, 1\n	mul	w1, w0, w0\n	cmp	w1, w2\n	ble	.L4\n.L6:\n	mov	w0, 1\n	ldp	x29, x30, [sp], 16\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L8:\n	.cfi_restore_state\n	mov	w0, 0\n	ldp	x29, x30, [sp], 16\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem84", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, w0\n	mov	w0, 0\n	cmp	w2, 0\n	ble	.L1\n	mov	w0, 1\n	cmp	w2, w0\n	beq	.L1\n	cmp	w2, 2\n	beq	.L6\n	mov	w1, 2\n	mov	w0, 18\n	.p2align 3,,7\n.L3:\n	add	w0, w0, w0, lsl 2\n	add	w1, w1, 1\n	lsl	w0, w0, 1\n	cmp	w2, w1\n	bne	.L3\n.L1:\n	ret\n	.p2align 2,,3\n.L6:\n	mov	w0, 18\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w2, w0\n	mov	w0, 0\n	cmp	w2, 0\n	ble	.L1\n	mov	w0, 1\n	cmp	w2, w0\n	beq	.L1\n	cmp	w2, 2\n	beq	.L6\n	mov	w1, 2\n	mov	w0, 18\n	.p2align 3,,7\n.L3:\n	add	w0, w0, w0, lsl 2\n	add	w1, w1, 1\n	lsl	w0, w0, 1\n	cmp	w2, w1\n	bne	.L3\n.L1:\n	ret\n	.p2align 2,,3\n.L6:\n	mov	w0, 18\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem85", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"%d\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	w2, w0\n	adrp	x1, .LC0\n	mov	x29, sp\n	add	x0, sp, 40\n	add	x1, x1, :lo12:.LC0\n	bl	sprintf\n	ldrb	w0, [sp, 40]\n	cbz	w0, .L2\n	add	x1, sp, 40\n	str	x19, [sp, 16]\n	.cfi_offset 19, -32\n	mov	w19, 0\n	.p2align 3,,7\n.L3:\n	sub	w2, w0, #48\n	ldrb	w0, [x1, 1]!\n	add	w19, w19, w2\n	cbnz	w0, .L3\n	mov	x0, 33\n	bl	malloc\n	cmp	w19, 0\n	cbz	w19, .L27\n	sub	x3, x0, #1\n	mov	x1, 1\n	ble	.L30\n	.p2align 3,,7\n.L6:\n	and	w2, w19, 1\n	mov	x5, x1\n	add	w2, w2, 48\n	strb	w2, [x3, x1]\n	asr	w19, w19, 1\n	add	x1, x1, 1\n	cbnz	w19, .L6\n	sxtw	x2, w5\n	asr	w5, w5, 1\n	strb	wzr, [x0, x2]\n	cbz	w5, .L28\n	sub	x2, x2, #1\n	add	x5, x0, w5, sxtw\n	add	x2, x0, x2\n	mov	x1, x0\n	.p2align 3,,7\n.L11:\n	ldrb	w4, [x2]\n	ldrb	w3, [x1]\n	strb	w4, [x1], 1\n	strb	w3, [x2], -1\n	cmp	x1, x5\n	bne	.L11\n.L28:\n	ldr	x19, [sp, 16]\n	.cfi_restore 19\n.L1:\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L27:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	ldr	x19, [sp, 16]\n	.cfi_restore 19\n.L5:\n	mov	w1, 48\n	strh	w1, [x0]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n.L30:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	strb	wzr, [x0]\n	ldr	x19, [sp, 16]\n	.cfi_restore 19\n	b	.L1\n	.p2align 2,,3\n.L2:\n	mov	x0, 33\n	bl	malloc\n	b	.L5\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"%d\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -48]!\n	.cfi_def_cfa_offset 48\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	mov	w2, w0\n	adrp	x1, .LC0\n	mov	x29, sp\n	add	x0, sp, 40\n	add	x1, x1, :lo12:.LC0\n	bl	sprintf\n	ldrb	w0, [sp, 40]\n	cbz	w0, .L2\n	add	x1, sp, 40\n	str	x19, [sp, 16]\n	.cfi_offset 19, -32\n	mov	w19, 0\n	.p2align 3,,7\n.L3:\n	sub	w2, w0, #48\n	ldrb	w0, [x1, 1]!\n	add	w19, w19, w2\n	cbnz	w0, .L3\n	mov	x0, 33\n	bl	malloc\n	cmp	w19, 0\n	cbz	w19, .L27\n	sub	x3, x0, #1\n	mov	x1, 1\n	ble	.L30\n	.p2align 3,,7\n.L6:\n	and	w2, w19, 1\n	mov	x5, x1\n	add	w2, w2, 48\n	strb	w2, [x3, x1]\n	asr	w19, w19, 1\n	add	x1, x1, 1\n	cbnz	w19, .L6\n	sxtw	x2, w5\n	asr	w5, w5, 1\n	strb	wzr, [x0, x2]\n	cbz	w5, .L28\n	sub	x2, x2, #1\n	add	x5, x0, w5, sxtw\n	add	x2, x0, x2\n	mov	x1, x0\n	.p2align 3,,7\n.L11:\n	ldrb	w4, [x2]\n	ldrb	w3, [x1]\n	strb	w4, [x1], 1\n	strb	w3, [x2], -1\n	cmp	x1, x5\n	bne	.L11\n.L28:\n	ldr	x19, [sp, 16]\n	.cfi_restore 19\n.L1:\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L27:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	ldr	x19, [sp, 16]\n	.cfi_restore 19\n.L5:\n	mov	w1, 48\n	strh	w1, [x0]\n	ldp	x29, x30, [sp], 48\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_def_cfa_offset 0\n	ret\n.L30:\n	.cfi_def_cfa_offset 48\n	.cfi_offset 19, -32\n	.cfi_offset 29, -48\n	.cfi_offset 30, -40\n	strb	wzr, [x0]\n	ldr	x19, [sp, 16]\n	.cfi_restore 19\n	b	.L1\n	.p2align 2,,3\n.L2:\n	mov	x0, 33\n	bl	malloc\n	b	.L5\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem86", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	x5, x0\n	cmp	w1, 1\n	ble	.L5\n	mov	x2, 1\n	mov	w0, 0\n	.p2align 3,,7\n.L4:\n	ldr	w3, [x5, x2, lsl 2]\n	add	x2, x2, 2\n	add	w4, w0, w3\n	tst	x3, 1\n	csel	w0, w4, w0, eq\n	cmp	w1, w2\n	bgt	.L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	x5, x0\n	cmp	w1, 1\n	ble	.L5\n	mov	x2, 1\n	mov	w0, 0\n	.p2align 3,,7\n.L4:\n	ldr	w3, [x5, x2, lsl 2]\n	add	x2, x2, 2\n	add	w4, w0, w3\n	tst	x3, 1\n	csel	w0, w4, w0, eq\n	cmp	w1, w2\n	bgt	.L4\n	ret\n	.p2align 2,,3\n.L5:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem87", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -144]!\n	.cfi_def_cfa_offset 144\n	.cfi_offset 29, -144\n	.cfi_offset 30, -136\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -112\n	.cfi_offset 22, -104\n	mov	x21, x0\n	stp	x23, x24, [sp, 48]\n	str	x25, [sp, 64]\n	.cfi_offset 23, -96\n	.cfi_offset 24, -88\n	.cfi_offset 25, -80\n	bl	strlen\n	mov	x23, x0\n	add	w0, w0, 2\n	sxtw	x0, w0\n	bl	malloc\n	mov	x25, x0\n	tbnz	w23, #31, .L15\n	add	x0, x21, 1\n	add	x24, sp, 88\n	add	x23, x0, w23, uxtw\n	mov	w22, 0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -120\n	.cfi_offset 19, -128\n	mov	w20, 0\n	mov	w19, 32\n	b	.L14\n	.p2align 2,,3\n.L3:\n	strb	w1, [x24, w20, sxtw]\n	add	w20, w20, 1\n.L13:\n	add	x21, x21, 1\n	cmp	x21, x23\n	beq	.L22\n.L14:\n	ldrb	w1, [x21]\n	and	w2, w1, -33\n	cbnz	w2, .L3\n	cmp	w20, 1\n	ble	.L23\n	mov	x1, x24\n	mov	x5, x24\n	sub	w9, w20, #1\n	mov	w7, 0\n	.p2align 3,,7\n.L8:\n	add	w7, w7, 1\n	cmp	w7, w20\n	bge	.L24\n	sub	w6, w9, w7\n	add	x8, x5, 1\n	add	x6, x6, x8\n	mov	x2, x5\n	.p2align 3,,7\n.L11:\n	ldrb	w3, [x5]\n	ldrb	w4, [x2, 1]\n	cmp	w3, w4\n	bls	.L10\n	strb	w4, [x5]\n	strb	w3, [x2, 1]\n.L10:\n	add	x2, x2, 1\n	cmp	x6, x2\n	bne	.L11\n	mov	x5, x8\n	cmp	w7, w9\n	bne	.L8\n.L25:\n	cmp	w22, 0\n	ble	.L9\n	strb	w19, [x25, w22, sxtw]\n	add	w22, w22, 1\n.L9:\n	uxtw	x2, w20\n	add	x0, x25, w22, sxtw\n	add	x21, x21, 1\n	bl	memcpy\n	add	w22, w22, w20\n	mov	w20, 0\n	cmp	x21, x23\n	bne	.L14\n.L22:\n	add	x22, x25, w22, sxtw\n	mov	x0, x25\n	ldp	x19, x20, [sp, 16]\n	.cfi_remember_state\n	.cfi_restore 20\n	.cfi_restore 19\n	strb	wzr, [x22]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 144\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L24:\n	.cfi_restore_state\n	add	x8, x5, 1\n	mov	x5, x8\n	cmp	w7, w9\n	bne	.L8\n	b	.L25\n.L23:\n	cmp	w22, 0\n	ble	.L6\n	mov	w0, 32\n	strb	w0, [x25, w22, sxtw]\n	add	w22, w22, 1\n.L6:\n	cmp	w20, 1\n	beq	.L26\n	mov	w20, 0\n	b	.L13\n.L26:\n	add	x1, sp, 88\n	b	.L9\n.L15:\n	.cfi_restore 19\n	.cfi_restore 20\n	mov	x22, x0\n	mov	x0, x25\n	strb	wzr, [x22]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 144\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB32:\n	.cfi_startproc\n	stp	x29, x30, [sp, -144]!\n	.cfi_def_cfa_offset 144\n	.cfi_offset 29, -144\n	.cfi_offset 30, -136\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -112\n	.cfi_offset 22, -104\n	mov	x21, x0\n	stp	x23, x24, [sp, 48]\n	str	x25, [sp, 64]\n	.cfi_offset 23, -96\n	.cfi_offset 24, -88\n	.cfi_offset 25, -80\n	bl	strlen\n	mov	x23, x0\n	add	w0, w0, 2\n	sxtw	x0, w0\n	bl	malloc\n	mov	x25, x0\n	tbnz	w23, #31, .L15\n	add	x0, x21, 1\n	add	x24, sp, 88\n	add	x23, x0, w23, uxtw\n	mov	w22, 0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -120\n	.cfi_offset 19, -128\n	mov	w20, 0\n	mov	w19, 32\n	b	.L14\n	.p2align 2,,3\n.L3:\n	strb	w1, [x24, w20, sxtw]\n	add	w20, w20, 1\n.L13:\n	add	x21, x21, 1\n	cmp	x21, x23\n	beq	.L22\n.L14:\n	ldrb	w1, [x21]\n	and	w2, w1, -33\n	cbnz	w2, .L3\n	cmp	w20, 1\n	ble	.L23\n	mov	x1, x24\n	mov	x5, x24\n	sub	w9, w20, #1\n	mov	w7, 0\n	.p2align 3,,7\n.L8:\n	add	w7, w7, 1\n	cmp	w7, w20\n	bge	.L24\n	sub	w6, w9, w7\n	add	x8, x5, 1\n	add	x6, x6, x8\n	mov	x2, x5\n	.p2align 3,,7\n.L11:\n	ldrb	w3, [x5]\n	ldrb	w4, [x2, 1]\n	cmp	w3, w4\n	bls	.L10\n	strb	w4, [x5]\n	strb	w3, [x2, 1]\n.L10:\n	add	x2, x2, 1\n	cmp	x6, x2\n	bne	.L11\n	mov	x5, x8\n	cmp	w7, w9\n	bne	.L8\n.L25:\n	cmp	w22, 0\n	ble	.L9\n	strb	w19, [x25, w22, sxtw]\n	add	w22, w22, 1\n.L9:\n	uxtw	x2, w20\n	add	x0, x25, w22, sxtw\n	add	x21, x21, 1\n	bl	memcpy\n	add	w22, w22, w20\n	mov	w20, 0\n	cmp	x21, x23\n	bne	.L14\n.L22:\n	add	x22, x25, w22, sxtw\n	mov	x0, x25\n	ldp	x19, x20, [sp, 16]\n	.cfi_remember_state\n	.cfi_restore 20\n	.cfi_restore 19\n	strb	wzr, [x22]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 144\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L24:\n	.cfi_restore_state\n	add	x8, x5, 1\n	mov	x5, x8\n	cmp	w7, w9\n	bne	.L8\n	b	.L25\n.L23:\n	cmp	w22, 0\n	ble	.L6\n	mov	w0, 32\n	strb	w0, [x25, w22, sxtw]\n	add	w22, w22, 1\n.L6:\n	cmp	w20, 1\n	beq	.L26\n	mov	w20, 0\n	b	.L13\n.L26:\n	add	x1, sp, 88\n	b	.L9\n.L15:\n	.cfi_restore 19\n	.cfi_restore 20\n	mov	x22, x0\n	mov	x0, x25\n	strb	wzr, [x22]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 144\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE32:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem88", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -112]!\n	.cfi_def_cfa_offset 112\n	.cfi_offset 29, -112\n	.cfi_offset 30, -104\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -80\n	.cfi_offset 22, -72\n	sxtw	x22, w1\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -64\n	.cfi_offset 24, -56\n	mov	x24, x0\n	mov	x23, x2\n	mov	x0, 800\n	stp	x25, x26, [sp, 64]\n	stp	x27, x28, [sp, 80]\n	.cfi_offset 25, -48\n	.cfi_offset 26, -40\n	.cfi_offset 27, -32\n	.cfi_offset 28, -24\n	mov	w27, w3\n	str	x4, [sp, 104]\n	bl	malloc\n	mov	x21, x0\n	cmp	w22, 0\n	ble	.L7\n	mov	x28, 0\n	mov	w25, 0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -88\n	.cfi_offset 19, -96\n	.p2align 3,,7\n.L6:\n	ldr	w19, [x23, x28, lsl 2]\n	mov	w20, w28\n	subs	w19, w19, #1\n	bmi	.L3\n	ldr	x26, [x24, x28, lsl 3]\n	sxtw	x19, w19\n	b	.L5\n	.p2align 2,,3\n.L4:\n	sub	x19, x19, #1\n	tbnz	w19, #31, .L3\n.L5:\n	ldr	w1, [x26, x19, lsl 2]\n	cmp	w1, w27\n	bne	.L4\n	mov	x0, 8\n	bl	malloc\n	str	x0, [x21, w25, sxtw 3]\n	add	w25, w25, 1\n	stp	w20, w19, [x0]\n	sub	x19, x19, #1\n	tbz	w19, #31, .L5\n	.p2align 3,,7\n.L3:\n	add	x28, x28, 1\n	cmp	x28, x22\n	bne	.L6\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n.L2:\n	mov	x0, x21\n	ldr	x1, [sp, 104]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x27, x28, [sp, 80]\n	str	w25, [x1]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 112\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 27\n	.cfi_restore 28\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n.L7:\n	.cfi_restore_state\n	mov	w25, 0\n	b	.L2\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -112]!\n	.cfi_def_cfa_offset 112\n	.cfi_offset 29, -112\n	.cfi_offset 30, -104\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -80\n	.cfi_offset 22, -72\n	sxtw	x22, w1\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -64\n	.cfi_offset 24, -56\n	mov	x24, x0\n	mov	x23, x2\n	mov	x0, 800\n	stp	x25, x26, [sp, 64]\n	stp	x27, x28, [sp, 80]\n	.cfi_offset 25, -48\n	.cfi_offset 26, -40\n	.cfi_offset 27, -32\n	.cfi_offset 28, -24\n	mov	w27, w3\n	str	x4, [sp, 104]\n	bl	malloc\n	mov	x21, x0\n	cmp	w22, 0\n	ble	.L7\n	mov	x28, 0\n	mov	w25, 0\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -88\n	.cfi_offset 19, -96\n	.p2align 3,,7\n.L6:\n	ldr	w19, [x23, x28, lsl 2]\n	mov	w20, w28\n	subs	w19, w19, #1\n	bmi	.L3\n	ldr	x26, [x24, x28, lsl 3]\n	sxtw	x19, w19\n	b	.L5\n	.p2align 2,,3\n.L4:\n	sub	x19, x19, #1\n	tbnz	w19, #31, .L3\n.L5:\n	ldr	w1, [x26, x19, lsl 2]\n	cmp	w1, w27\n	bne	.L4\n	mov	x0, 8\n	bl	malloc\n	str	x0, [x21, w25, sxtw 3]\n	add	w25, w25, 1\n	stp	w20, w19, [x0]\n	sub	x19, x19, #1\n	tbz	w19, #31, .L5\n	.p2align 3,,7\n.L3:\n	add	x28, x28, 1\n	cmp	x28, x22\n	bne	.L6\n	ldp	x19, x20, [sp, 16]\n	.cfi_restore 20\n	.cfi_restore 19\n.L2:\n	mov	x0, x21\n	ldr	x1, [sp, 104]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldp	x27, x28, [sp, 80]\n	str	w25, [x1]\n	ldp	x25, x26, [sp, 64]\n	ldp	x29, x30, [sp], 112\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 27\n	.cfi_restore 28\n	.cfi_restore 25\n	.cfi_restore 26\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n.L7:\n	.cfi_restore_state\n	mov	w25, 0\n	b	.L2\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem89", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x21, x2\n	str	w1, [x3]\n	cbnz	w1, .L2\n	str	xzr, [x2]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	.cfi_restore_state\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	sbfiz	x23, x1, 2, 32\n	mov	x22, x0\n	mov	x0, x23\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -40\n	.cfi_offset 19, -48\n	mov	w20, w1\n	bl	malloc\n	str	x0, [x21]\n	mov	x19, x0\n	cbz	x0, .L4\n	cmp	w20, 0\n	ble	.L24\n	add	x23, x22, x23\n	mov	x1, x22\n	ubfiz	x2, x20, 2, 32\n	bl	memcpy\n	ldr	w1, [x22]\n	uxtw	x21, w20\n	ldr	w0, [x23, -4]\n	adds	w1, w0, w1\n	and	w1, w1, 1\n	csneg	w1, w1, w1, pl\n	cmp	w20, 1\n	beq	.L24\n	sub	x0, x19, #4\n	mov	x5, 1\n	.p2align 3,,7\n.L8:\n	cmp	w20, w5\n	ble	.L12\n	ldr	w4, [x0, x5, lsl 2]\n	mov	x2, x5\n	ldr	w3, [x19, x5, lsl 2]\n	cmp	w1, 1\n	beq	.L9\n	b	.L10\n	.p2align 2,,3\n.L31:\n	ldr	w4, [x0, x5, lsl 2]\n	ldr	w3, [x19, x2, lsl 2]\n.L9:\n	cmp	w4, w3\n	ble	.L27\n	str	w3, [x0, x5, lsl 2]\n	str	w4, [x19, x2, lsl 2]\n.L27:\n	add	x2, x2, 1\n	cmp	w20, w2\n	bgt	.L31\n.L12:\n	add	x5, x5, 1\n	cmp	x5, x21\n	bne	.L8\n.L24:\n	ldp	x19, x20, [sp, 16]\n	.cfi_remember_state\n	.cfi_restore 20\n	.cfi_restore 19\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	.cfi_restore 23\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L32:\n	.cfi_restore_state\n	str	w3, [x0, x5, lsl 2]\n	str	w4, [x19, x2, lsl 2]\n	add	x2, x2, 1\n	cmp	w20, w2\n	ble	.L12\n.L28:\n	ldr	w4, [x0, x5, lsl 2]\n	ldr	w3, [x19, x2, lsl 2]\n.L10:\n	cmp	w4, w3\n	blt	.L32\n	add	x2, x2, 1\n	cmp	w20, w2\n	bgt	.L28\n	add	x5, x5, 1\n	cmp	x5, x21\n	bne	.L8\n	b	.L24\n.L4:\n	mov	w0, 1\n	bl	exit\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -32\n	.cfi_offset 22, -24\n	mov	x21, x2\n	str	w1, [x3]\n	cbnz	w1, .L2\n	str	xzr, [x2]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L2:\n	.cfi_restore_state\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	sbfiz	x23, x1, 2, 32\n	mov	x22, x0\n	mov	x0, x23\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 20, -40\n	.cfi_offset 19, -48\n	mov	w20, w1\n	bl	malloc\n	str	x0, [x21]\n	mov	x19, x0\n	cbz	x0, .L4\n	cmp	w20, 0\n	ble	.L24\n	add	x23, x22, x23\n	mov	x1, x22\n	ubfiz	x2, x20, 2, 32\n	bl	memcpy\n	ldr	w1, [x22]\n	uxtw	x21, w20\n	ldr	w0, [x23, -4]\n	adds	w1, w0, w1\n	and	w1, w1, 1\n	csneg	w1, w1, w1, pl\n	cmp	w20, 1\n	beq	.L24\n	sub	x0, x19, #4\n	mov	x5, 1\n	.p2align 3,,7\n.L8:\n	cmp	w20, w5\n	ble	.L12\n	ldr	w4, [x0, x5, lsl 2]\n	mov	x2, x5\n	ldr	w3, [x19, x5, lsl 2]\n	cmp	w1, 1\n	beq	.L9\n	b	.L10\n	.p2align 2,,3\n.L31:\n	ldr	w4, [x0, x5, lsl 2]\n	ldr	w3, [x19, x2, lsl 2]\n.L9:\n	cmp	w4, w3\n	ble	.L27\n	str	w3, [x0, x5, lsl 2]\n	str	w4, [x19, x2, lsl 2]\n.L27:\n	add	x2, x2, 1\n	cmp	w20, w2\n	bgt	.L31\n.L12:\n	add	x5, x5, 1\n	cmp	x5, x21\n	bne	.L8\n.L24:\n	ldp	x19, x20, [sp, 16]\n	.cfi_remember_state\n	.cfi_restore 20\n	.cfi_restore 19\n	ldp	x21, x22, [sp, 32]\n	ldr	x23, [sp, 48]\n	.cfi_restore 23\n	ldp	x29, x30, [sp], 64\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L32:\n	.cfi_restore_state\n	str	w3, [x0, x5, lsl 2]\n	str	w4, [x19, x2, lsl 2]\n	add	x2, x2, 1\n	cmp	w20, w2\n	ble	.L12\n.L28:\n	ldr	w4, [x0, x5, lsl 2]\n	ldr	w3, [x19, x2, lsl 2]\n.L10:\n	cmp	w4, w3\n	blt	.L32\n	add	x2, x2, 1\n	cmp	w20, w2\n	bgt	.L28\n	add	x5, x5, 1\n	cmp	x5, x21\n	bne	.L8\n	b	.L24\n.L4:\n	mov	w0, 1\n	bl	exit\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem9", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w3, 1\n	cmp	w1, 0\n	ble	.L4\n	add	x5, x0, w1, sxtw 2\n	mov	w4, 0\n	.p2align 3,,7\n.L3:\n	ldr	w1, [x0], 4\n	add	w4, w4, w1\n	mul	w3, w3, w1\n	cmp	x0, x5\n	bne	.L3\n	stp	w4, w3, [x2]\n	ret\n	.p2align 2,,3\n.L4:\n	mov	w4, 0\n	stp	w4, w3, [x2]\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	mov	w3, 1\n	cmp	w1, 0\n	ble	.L4\n	add	x5, x0, w1, sxtw 2\n	mov	w4, 0\n	.p2align 3,,7\n.L3:\n	ldr	w1, [x0], 4\n	add	w4, w4, w1\n	mul	w3, w3, w1\n	cmp	x0, x5\n	bne	.L3\n	stp	w4, w3, [x2]\n	ret\n	.p2align 2,,3\n.L4:\n	mov	w4, 0\n	stp	w4, w3, [x2]\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem90", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	ldrb	w3, [x0]\n	cbz	w3, .L2\n	mov	w6, 60495\n	mov	x4, 0\n	movk	w6, 0x4ec4, lsl 16\n	mov	w5, 26\n	.p2align 3,,7\n.L3:\n	sub	w3, w3, #93\n	smull	x2, w3, w6\n	asr	x2, x2, 35\n	sub	w2, w2, w3, asr 31\n	msub	w2, w2, w5, w3\n	add	w2, w2, 97\n	strb	w2, [x1, x4]\n	add	x4, x4, 1\n	ldrb	w3, [x0, x4]\n	cbnz	w3, .L3\n	add	x1, x1, x4\n.L2:\n	strb	wzr, [x1]\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	ldrb	w3, [x0]\n	cbz	w3, .L2\n	mov	w6, 60495\n	mov	x4, 0\n	movk	w6, 0x4ec4, lsl 16\n	mov	w5, 26\n	.p2align 3,,7\n.L3:\n	sub	w3, w3, #93\n	smull	x2, w3, w6\n	asr	x2, x2, 35\n	sub	w2, w2, w3, asr 31\n	msub	w2, w2, w5, w3\n	add	w2, w2, 97\n	strb	w2, [x1, x4]\n	add	x4, x4, 1\n	ldrb	w3, [x0, x4]\n	cbnz	w3, .L3\n	add	x1, x1, x4\n.L2:\n	strb	wzr, [x1]\n	ret\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem91", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 1\n	ble	.L5\n	mov	x2, x0\n	mov	w0, 2147483647\n	add	x4, x2, w1, sxtw 2\n	mov	w3, w0\n	b	.L4\n	.p2align 2,,3\n.L12:\n	ccmp	w0, w1, 4, ne\n	add	x2, x2, 4\n	csel	w0, w0, w1, le\n	cmp	x4, x2\n	beq	.L11\n.L4:\n	ldr	w1, [x2]\n	cmp	w3, w1\n	ble	.L12\n	add	x2, x2, 4\n	mov	w0, w3\n	mov	w3, w1\n	cmp	x4, x2\n	bne	.L4\n.L11:\n	mov	w1, 2147483647\n	cmp	w0, w1\n	csinv	w0, w0, wzr, ne\n	ret\n.L5:\n	mov	w0, -1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 1\n	ble	.L5\n	mov	x2, x0\n	mov	w0, 2147483647\n	add	x4, x2, w1, sxtw 2\n	mov	w3, w0\n	b	.L4\n	.p2align 2,,3\n.L12:\n	ccmp	w0, w1, 4, ne\n	add	x2, x2, 4\n	csel	w0, w0, w1, le\n	cmp	x4, x2\n	beq	.L11\n.L4:\n	ldr	w1, [x2]\n	cmp	w3, w1\n	ble	.L12\n	add	x2, x2, 4\n	mov	w0, w3\n	mov	w3, w1\n	cmp	x4, x2\n	bne	.L4\n.L11:\n	mov	w1, 2147483647\n	cmp	w0, w1\n	csinv	w0, w0, wzr, ne\n	ret\n.L5:\n	mov	w0, -1\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem92", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	ldrb	w19, [x0]\n	cbz	w19, .L9\n	mov	x20, x0\n	bl	__ctype_b_loc\n	mov	x1, x0\n	mov	x8, 70377334112256\n	mov	w3, 1\n	add	x4, x20, 1\n	mov	w9, w3\n	mov	w0, 0\n	ldr	x7, [x1]\n	mov	w5, 0\n	movk	x8, 0x8000, lsl 48\n	b	.L8\n	.p2align 2,,3\n.L19:\n	tbnz	x2, 0, .L4\n	mov	w3, 0\n.L5:\n	cmp	w19, 63\n	bhi	.L10\n.L20:\n	lsr	x19, x8, x19\n	mov	w5, 0\n	tst	x19, 1\n	csel	w3, w3, w9, eq\n.L7:\n	ldrb	w19, [x4], 1\n	cbz	w19, .L1\n.L8:\n	ubfiz	x1, x19, 1, 8\n	cmp	w19, 73\n	cset	w2, eq\n	and	w2, w3, w2\n	ldrh	w1, [x7, x1]\n	and	w6, w1, 8192\n	tbz	x1, 13, .L19\n	cbz	w5, .L6\n	add	w0, w0, 1\n	tbz	x2, 0, .L5\n.L4:\n	ldrb	w19, [x4], 1\n	cmp	w6, 0\n	cset	w3, ne\n	mov	w5, 1\n	cbnz	w19, .L8\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L6:\n	.cfi_restore_state\n	tbnz	x2, 0, .L4\n	cmp	w19, 63\n	bls	.L20\n.L10:\n	mov	w5, 0\n	b	.L7\n	.p2align 2,,3\n.L9:\n	ldp	x19, x20, [sp, 16]\n	mov	w0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	ldrb	w19, [x0]\n	cbz	w19, .L9\n	mov	x20, x0\n	bl	__ctype_b_loc\n	mov	x1, x0\n	mov	x8, 70377334112256\n	mov	w3, 1\n	add	x4, x20, 1\n	mov	w9, w3\n	mov	w0, 0\n	ldr	x7, [x1]\n	mov	w5, 0\n	movk	x8, 0x8000, lsl 48\n	b	.L8\n	.p2align 2,,3\n.L19:\n	tbnz	x2, 0, .L4\n	mov	w3, 0\n.L5:\n	cmp	w19, 63\n	bhi	.L10\n.L20:\n	lsr	x19, x8, x19\n	mov	w5, 0\n	tst	x19, 1\n	csel	w3, w3, w9, eq\n.L7:\n	ldrb	w19, [x4], 1\n	cbz	w19, .L1\n.L8:\n	ubfiz	x1, x19, 1, 8\n	cmp	w19, 73\n	cset	w2, eq\n	and	w2, w3, w2\n	ldrh	w1, [x7, x1]\n	and	w6, w1, 8192\n	tbz	x1, 13, .L19\n	cbz	w5, .L6\n	add	w0, w0, 1\n	tbz	x2, 0, .L5\n.L4:\n	ldrb	w19, [x4], 1\n	cmp	w6, 0\n	cset	w3, ne\n	mov	w5, 1\n	cbnz	w19, .L8\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L6:\n	.cfi_restore_state\n	tbnz	x2, 0, .L4\n	cmp	w19, 63\n	bls	.L20\n.L10:\n	mov	w5, 0\n	b	.L7\n	.p2align 2,,3\n.L9:\n	ldp	x19, x20, [sp, 16]\n	mov	w0, 0\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem93", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	frinta	s3, s0\n	mov	w0, 0\n	fcmp	s3, s0\n	bne	.L1\n	frinta	s3, s1\n	fcmp	s3, s1\n	bne	.L1\n	frinta	s3, s2\n	fcmp	s3, s2\n	bne	.L1\n	fadd	s3, s0, s1\n	mov	w0, 1\n	fcmp	s3, s2\n	beq	.L1\n	fadd	s3, s0, s2\n	fcmp	s3, s1\n	beq	.L1\n	fadd	s1, s1, s2\n	fcmp	s1, s0\n	cset	w0, eq\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	frinta	s3, s0\n	mov	w0, 0\n	fcmp	s3, s0\n	bne	.L1\n	frinta	s3, s1\n	fcmp	s3, s1\n	bne	.L1\n	frinta	s3, s2\n	fcmp	s3, s2\n	bne	.L1\n	fadd	s3, s0, s1\n	mov	w0, 1\n	fcmp	s3, s2\n	beq	.L1\n	fadd	s3, s0, s2\n	fcmp	s3, s1\n	beq	.L1\n	fadd	s1, s1, s2\n	fcmp	s1, s0\n	cset	w0, eq\n.L1:\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem94", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"aeiouAEIOU\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	x22, x1\n	ldrb	w19, [x0]\n	cbz	w19, .L2\n	adrp	x20, .LC0\n	add	x20, x20, :lo12:.LC0\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 24, -24\n	.cfi_offset 23, -32\n	mov	x23, x0\n	mov	x21, 0\n	str	x25, [sp, 64]\n	.cfi_offset 25, -16\n	bl	__ctype_b_loc\n	mov	x25, x0\n	.p2align 3,,7\n.L8:\n	ldr	x1, [x25]\n	uxtw	x24, w19\n	ldrh	w1, [x1, w19, uxtw 1]\n	tbz	x1, 9, .L3\n	bl	__ctype_toupper_loc\n	ldr	x0, [x0]\n	ldr	w19, [x0, x24, lsl 2]\n	and	w19, w19, 255\n.L4:\n	mov	x2, 0\n	mov	w3, 97\n	b	.L7\n	.p2align 2,,3\n.L5:\n	add	x2, x2, 1\n	ldrb	w3, [x20, x2]\n	cbz	w3, .L6\n.L7:\n	cmp	w19, w3\n	bne	.L5\n	add	w1, w19, 2\n	cmp	w2, 10\n	and	w1, w1, 255\n	csel	w19, w1, w19, lt\n.L6:\n	strb	w19, [x22, x21]\n	add	x21, x21, 1\n	ldrb	w19, [x23, x21]\n	cbnz	w19, .L8\n	ldp	x23, x24, [sp, 48]\n	.cfi_restore 24\n	.cfi_restore 23\n	add	x22, x22, x21\n	ldr	x25, [sp, 64]\n	.cfi_restore 25\n.L2:\n	strb	wzr, [x22]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L3:\n	.cfi_def_cfa_offset 80\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	tbz	x1, 8, .L4\n	bl	__ctype_tolower_loc\n	ldr	x0, [x0]\n	ldr	w19, [x0, x24, lsl 2]\n	and	w19, w19, 255\n	b	.L4\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"aeiouAEIOU\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB27:\n	.cfi_startproc\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	mov	x22, x1\n	ldrb	w19, [x0]\n	cbz	w19, .L2\n	adrp	x20, .LC0\n	add	x20, x20, :lo12:.LC0\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 24, -24\n	.cfi_offset 23, -32\n	mov	x23, x0\n	mov	x21, 0\n	str	x25, [sp, 64]\n	.cfi_offset 25, -16\n	bl	__ctype_b_loc\n	mov	x25, x0\n	.p2align 3,,7\n.L8:\n	ldr	x1, [x25]\n	uxtw	x24, w19\n	ldrh	w1, [x1, w19, uxtw 1]\n	tbz	x1, 9, .L3\n	bl	__ctype_toupper_loc\n	ldr	x0, [x0]\n	ldr	w19, [x0, x24, lsl 2]\n	and	w19, w19, 255\n.L4:\n	mov	x2, 0\n	mov	w3, 97\n	b	.L7\n	.p2align 2,,3\n.L5:\n	add	x2, x2, 1\n	ldrb	w3, [x20, x2]\n	cbz	w3, .L6\n.L7:\n	cmp	w19, w3\n	bne	.L5\n	add	w1, w19, 2\n	cmp	w2, 10\n	and	w1, w1, 255\n	csel	w19, w1, w19, lt\n.L6:\n	strb	w19, [x22, x21]\n	add	x21, x21, 1\n	ldrb	w19, [x23, x21]\n	cbnz	w19, .L8\n	ldp	x23, x24, [sp, 48]\n	.cfi_restore 24\n	.cfi_restore 23\n	add	x22, x22, x21\n	ldr	x25, [sp, 64]\n	.cfi_restore 25\n.L2:\n	strb	wzr, [x22]\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L3:\n	.cfi_def_cfa_offset 80\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	tbz	x1, 8, .L4\n	bl	__ctype_tolower_loc\n	ldr	x0, [x0]\n	ldr	w19, [x0, x24, lsl 2]\n	and	w19, w19, 255\n	b	.L4\n	.cfi_endproc\n.LFE27:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem95", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L9\n	add	x5, x0, w1, sxtw 2\n	mov	w4, 0\n	b	.L7\n	.p2align 2,,3\n.L3:\n	add	x0, x0, 4\n	cmp	x5, x0\n	beq	.L20\n.L7:\n	ldr	w2, [x0]\n	cmp	w2, 1\n	ble	.L3\n	cmp	w2, 3\n	ble	.L4\n	tbz	x2, 0, .L3\n	mov	w1, 2\n	b	.L5\n	.p2align 2,,3\n.L6:\n	sdiv	w3, w2, w1\n	msub	w3, w3, w1, w2\n	cbz	w3, .L3\n.L5:\n	add	w1, w1, 1\n	mul	w3, w1, w1\n	cmp	w3, w2\n	ble	.L6\n.L4:\n	cmp	w4, w2\n	add	x0, x0, 4\n	csel	w4, w4, w2, ge\n	cmp	x5, x0\n	bne	.L7\n	.p2align 3,,7\n.L20:\n	mov	w0, 0\n	cmp	w4, 0\n	ble	.L1\n	mov	w5, 52429\n	movk	w5, 0xcccc, lsl 16\n	.p2align 3,,7\n.L8:\n	umull	x1, w4, w5\n	mov	w3, w4\n	lsr	x1, x1, 35\n	add	w2, w1, w1, lsl 2\n	sub	w2, w4, w2, lsl 1\n	mov	w4, w1\n	add	w0, w0, w2\n	cmp	w3, 9\n	bgt	.L8\n.L1:\n	ret\n.L9:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB11:\n	.cfi_startproc\n	cmp	w1, 0\n	ble	.L9\n	add	x5, x0, w1, sxtw 2\n	mov	w4, 0\n	b	.L7\n	.p2align 2,,3\n.L3:\n	add	x0, x0, 4\n	cmp	x5, x0\n	beq	.L20\n.L7:\n	ldr	w2, [x0]\n	cmp	w2, 1\n	ble	.L3\n	cmp	w2, 3\n	ble	.L4\n	tbz	x2, 0, .L3\n	mov	w1, 2\n	b	.L5\n	.p2align 2,,3\n.L6:\n	sdiv	w3, w2, w1\n	msub	w3, w3, w1, w2\n	cbz	w3, .L3\n.L5:\n	add	w1, w1, 1\n	mul	w3, w1, w1\n	cmp	w3, w2\n	ble	.L6\n.L4:\n	cmp	w4, w2\n	add	x0, x0, 4\n	csel	w4, w4, w2, ge\n	cmp	x5, x0\n	bne	.L7\n	.p2align 3,,7\n.L20:\n	mov	w0, 0\n	cmp	w4, 0\n	ble	.L1\n	mov	w5, 52429\n	movk	w5, 0xcccc, lsl 16\n	.p2align 3,,7\n.L8:\n	umull	x1, w4, w5\n	mov	w3, w4\n	lsr	x1, x1, 35\n	add	w2, w1, w1, lsl 2\n	sub	w2, w4, w2, lsl 1\n	mov	w4, w1\n	add	w0, w0, w2\n	cmp	w3, 9\n	bgt	.L8\n.L1:\n	ret\n.L9:\n	mov	w0, 0\n	ret\n	.cfi_endproc\n.LFE11:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem96", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB34:\n	.cfi_startproc\n	cbz	w1, .L8\n	cmp	w1, 0\n	ble	.L9\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	add	x22, x0, w1, sxtw 4\n	mov	w21, 0\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x24, x0\n	mov	w23, 0\n	stp	x19, x20, [sp, 16]\n	str	x25, [sp, 64]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 25, -16\n	mov	w25, 1\n.L7:\n	ldr	x20, [x24]\n	ldrb	w19, [x20]\n	cbz	w19, .L3\n	bl	__ctype_b_loc\n	ldr	x4, [x0]\n	add	x2, x20, 1\n	b	.L6\n	.p2align 2,,3\n.L24:\n	cbnz	w3, .L13\n	mov	w23, 1\n.L5:\n	add	w1, w21, w23\n	cmp	w1, 2\n	beq	.L13\n	ldrb	w19, [x2], 1\n	cbz	w19, .L3\n.L6:\n	ubfiz	x19, x19, 1, 8\n	ldrh	w1, [x4, x19]\n	and	w3, w1, 512\n	tbz	x1, 10, .L13\n	tbnz	x1, 8, .L24\n	cmp	w3, 0\n	csel	w21, w21, w25, eq\n	b	.L5\n	.p2align 2,,3\n.L13:\n	mov	w0, 0\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L8:\n	mov	w0, 0\n	ret\n	.p2align 2,,3\n.L3:\n	.cfi_def_cfa_offset 80\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	add	x24, x24, 16\n	cmp	x22, x24\n	bne	.L7\n	mov	w0, 1\n	b	.L1\n.L9:\n	.cfi_def_cfa_offset 0\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 25\n	.cfi_restore 29\n	.cfi_restore 30\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE34:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB34:\n	.cfi_startproc\n	cbz	w1, .L8\n	cmp	w1, 0\n	ble	.L9\n	stp	x29, x30, [sp, -80]!\n	.cfi_def_cfa_offset 80\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	mov	x29, sp\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	add	x22, x0, w1, sxtw 4\n	mov	w21, 0\n	stp	x23, x24, [sp, 48]\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	mov	x24, x0\n	mov	w23, 0\n	stp	x19, x20, [sp, 16]\n	str	x25, [sp, 64]\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 25, -16\n	mov	w25, 1\n.L7:\n	ldr	x20, [x24]\n	ldrb	w19, [x20]\n	cbz	w19, .L3\n	bl	__ctype_b_loc\n	ldr	x4, [x0]\n	add	x2, x20, 1\n	b	.L6\n	.p2align 2,,3\n.L24:\n	cbnz	w3, .L13\n	mov	w23, 1\n.L5:\n	add	w1, w21, w23\n	cmp	w1, 2\n	beq	.L13\n	ldrb	w19, [x2], 1\n	cbz	w19, .L3\n.L6:\n	ubfiz	x19, x19, 1, 8\n	ldrh	w1, [x4, x19]\n	and	w3, w1, 512\n	tbz	x1, 10, .L13\n	tbnz	x1, 8, .L24\n	cmp	w3, 0\n	csel	w21, w21, w25, eq\n	b	.L5\n	.p2align 2,,3\n.L13:\n	mov	w0, 0\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x21, x22, [sp, 32]\n	ldp	x23, x24, [sp, 48]\n	ldr	x25, [sp, 64]\n	ldp	x29, x30, [sp], 80\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 25\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.p2align 2,,3\n.L8:\n	mov	w0, 0\n	ret\n	.p2align 2,,3\n.L3:\n	.cfi_def_cfa_offset 80\n	.cfi_offset 19, -64\n	.cfi_offset 20, -56\n	.cfi_offset 21, -48\n	.cfi_offset 22, -40\n	.cfi_offset 23, -32\n	.cfi_offset 24, -24\n	.cfi_offset 25, -16\n	.cfi_offset 29, -80\n	.cfi_offset 30, -72\n	add	x24, x24, 16\n	cmp	x22, x24\n	bne	.L7\n	mov	w0, 1\n	b	.L1\n.L9:\n	.cfi_def_cfa_offset 0\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_restore 21\n	.cfi_restore 22\n	.cfi_restore 23\n	.cfi_restore 24\n	.cfi_restore 25\n	.cfi_restore 29\n	.cfi_restore 30\n	mov	w0, 1\n	ret\n	.cfi_endproc\n.LFE34:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem97", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	mov	x19, x1\n	mov	w20, w0\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	str	wzr, [x19]\n	mov	w5, 2\n	mov	w7, 0\n	cmp	w20, w5\n	ble	.L1\n	.p2align 3,,7\n.L2:\n	mov	x3, x0\n	add	x6, x0, w7, sxtw 2\n	cmp	w7, 0\n	bgt	.L6\n	b	.L4\n	.p2align 2,,3\n.L18:\n	sdiv	w4, w5, w2\n	msub	w2, w4, w2, w5\n	cbz	w2, .L5\n	cmp	x3, x6\n	beq	.L4\n.L6:\n	ldr	w2, [x3]\n	add	x3, x3, 4\n	mul	w4, w2, w2\n	cmp	w4, w5\n	ble	.L18\n.L4:\n	add	w1, w7, 1\n	str	w5, [x0, w7, sxtw 2]\n	str	w1, [x19]\n.L5:\n	add	w5, w5, 1\n	cmp	w20, w5\n	beq	.L1\n	ldr	w7, [x19]\n	b	.L2\n	.p2align 2,,3\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	stp	x29, x30, [sp, -32]!\n	.cfi_def_cfa_offset 32\n	.cfi_offset 29, -32\n	.cfi_offset 30, -24\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	.cfi_offset 19, -16\n	.cfi_offset 20, -8\n	mov	x19, x1\n	mov	w20, w0\n	sbfiz	x0, x0, 2, 32\n	bl	malloc\n	str	wzr, [x19]\n	mov	w5, 2\n	mov	w7, 0\n	cmp	w20, w5\n	ble	.L1\n	.p2align 3,,7\n.L2:\n	mov	x3, x0\n	add	x6, x0, w7, sxtw 2\n	cmp	w7, 0\n	bgt	.L6\n	b	.L4\n	.p2align 2,,3\n.L18:\n	sdiv	w4, w5, w2\n	msub	w2, w4, w2, w5\n	cbz	w2, .L5\n	cmp	x3, x6\n	beq	.L4\n.L6:\n	ldr	w2, [x3]\n	add	x3, x3, 4\n	mul	w4, w2, w2\n	cmp	w4, w5\n	ble	.L18\n.L4:\n	add	w1, w7, 1\n	str	w5, [x0, w7, sxtw 2]\n	str	w1, [x19]\n.L5:\n	add	w5, w5, 1\n	cmp	w20, w5\n	beq	.L1\n	ldr	w7, [x19]\n	b	.L2\n	.p2align 2,,3\n.L1:\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 32\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem98", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w0, 0\n	mov	w2, 52429\n	csneg	w0, w0, w0, ge\n	cmp	w1, 0\n	csneg	w1, w1, w1, ge\n	movk	w2, 0xcccc, lsl 16\n	umull	x3, w0, w2\n	umull	x2, w1, w2\n	lsr	x3, x3, 35\n	lsr	x2, x2, 35\n	add	w3, w3, w3, lsl 2\n	add	w2, w2, w2, lsl 2\n	sub	w0, w0, w3, lsl 1\n	sub	w2, w1, w2, lsl 1\n	mul	w0, w0, w2\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB20:\n	.cfi_startproc\n	cmp	w0, 0\n	mov	w2, 52429\n	csneg	w0, w0, w0, ge\n	cmp	w1, 0\n	csneg	w1, w1, w1, ge\n	movk	w2, 0xcccc, lsl 16\n	umull	x3, w0, w2\n	umull	x2, w1, w2\n	lsr	x3, x3, 35\n	lsr	x2, x2, 35\n	add	w3, w3, w3, lsl 2\n	add	w2, w2, w2, lsl 2\n	sub	w0, w0, w3, lsl 1\n	sub	w2, w1, w2, lsl 1\n	mul	w0, w0, w2\n	ret\n	.cfi_endproc\n.LFE20:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
{"source": "problem99", "arm": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"AEIOU\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	ldrb	w1, [x0]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	cbz	w1, .L6\n	add	x19, x0, 1\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -24\n	.cfi_offset 21, -32\n	neg	x21, x0\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	bl	strlen\n	add	x22, x0, 1\n	adrp	x23, .LC0\n	mov	w20, 0\n	add	x23, x23, :lo12:.LC0\n	add	x22, x19, x22, lsr 1\n	b	.L3\n	.p2align 2,,3\n.L5:\n	ldrb	w1, [x1, -2]\n	bl	strchr\n	cmp	x0, 0\n	ldrb	w1, [x19], 1\n	cinc	w20, w20, ne\n	cbz	w1, .L13\n.L3:\n	add	x1, x21, x19, lsl 1\n	mov	x0, x23\n	cmp	x22, x19\n	bne	.L5\n.L13:\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	ldr	x23, [sp, 48]\n	.cfi_restore 23\n.L1:\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L6:\n	.cfi_restore_state\n	mov	w20, 0\n	b	.L1\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n", "arm_output": "", "arm_verbose": "	.arch armv8-a\n	.file	\"code.c\"\n	.text\n	.section	.rodata.str1.8,\"aMS\",@progbits,1\n	.align	3\n.LC0:\n	.string	\"AEIOU\"\n	.text\n	.align	2\n	.p2align 4,,11\n	.global	func0\n	.type	func0, %function\nfunc0:\n.LFB23:\n	.cfi_startproc\n	stp	x29, x30, [sp, -64]!\n	.cfi_def_cfa_offset 64\n	.cfi_offset 29, -64\n	.cfi_offset 30, -56\n	mov	x29, sp\n	stp	x19, x20, [sp, 16]\n	ldrb	w1, [x0]\n	.cfi_offset 19, -48\n	.cfi_offset 20, -40\n	cbz	w1, .L6\n	add	x19, x0, 1\n	stp	x21, x22, [sp, 32]\n	.cfi_offset 22, -24\n	.cfi_offset 21, -32\n	neg	x21, x0\n	str	x23, [sp, 48]\n	.cfi_offset 23, -16\n	bl	strlen\n	add	x22, x0, 1\n	adrp	x23, .LC0\n	mov	w20, 0\n	add	x23, x23, :lo12:.LC0\n	add	x22, x19, x22, lsr 1\n	b	.L3\n	.p2align 2,,3\n.L5:\n	ldrb	w1, [x1, -2]\n	bl	strchr\n	cmp	x0, 0\n	ldrb	w1, [x19], 1\n	cinc	w20, w20, ne\n	cbz	w1, .L13\n.L3:\n	add	x1, x21, x19, lsl 1\n	mov	x0, x23\n	cmp	x22, x19\n	bne	.L5\n.L13:\n	ldp	x21, x22, [sp, 32]\n	.cfi_restore 22\n	.cfi_restore 21\n	ldr	x23, [sp, 48]\n	.cfi_restore 23\n.L1:\n	mov	w0, w20\n	ldp	x19, x20, [sp, 16]\n	ldp	x29, x30, [sp], 64\n	.cfi_remember_state\n	.cfi_restore 30\n	.cfi_restore 29\n	.cfi_restore 19\n	.cfi_restore 20\n	.cfi_def_cfa_offset 0\n	ret\n.L6:\n	.cfi_restore_state\n	mov	w20, 0\n	b	.L1\n	.cfi_endproc\n.LFE23:\n	.size	func0, .-func0\n	.ident	\"GCC: (GNU) 13.3.0\"\n	.section	.note.GNU-stack,\"\",@progbits\n"}
